"Marks the field, argument, input field or enum value as deprecated"
directive @deprecated(
    "The reason for the deprecation"
    reason: String = "No longer supported"
  ) on FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM_VALUE | INPUT_FIELD_DEFINITION

"Directs the executor to include this field or fragment only when the `if` argument is true"
directive @include(
    "Included when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Directs the executor to skip this field or fragment when the `if` argument is true."
directive @skip(
    "Skipped when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy(
    "The URL that specifies the behaviour of this scalar."
    url: String!
  ) on SCALAR

type JobExecutionLog {
  eventDate: DateTime
  executionCounter: Int
  expirationTime: DateTime
  jobId: String!
  nodeInstanceId: String
  priority: Int
  processInstanceId: String
  repeatInterval: Long
  repeatLimit: Int
  retries: Int
  scheduledId: String
  status: String
}

type ProcessInstanceErrorLog {
  businessKey: String
  errorMessage: String
  eventDate: DateTime
  eventId: String!
  nodeDefinitionId: String
  nodeInstanceId: String
  parentProcessInstanceId: String
  processId: String
  processInstanceId: String
  processType: String
  processVersion: String
  rootProcessId: String
  rootProcessInstanceId: String
}

type ProcessInstanceNodeLog {
  businessKey: String
  connection: String
  eventData: JSON
  eventDate: DateTime
  eventId: String!
  eventType: String
  nodeInstanceId: String
  nodeName: String
  nodeType: String
  parentProcessInstanceId: String
  processId: String
  processInstanceId: String
  processType: String
  processVersion: String
  rootProcessId: String
  rootProcessInstanceId: String
  slaDueDate: DateTime
  workItemId: String
}

type ProcessInstanceStateLog {
  businessKey: String
  eventDate: DateTime
  eventId: String!
  eventType: String
  outcome: String
  parentProcessInstanceId: String
  processId: String
  processInstanceId: String
  processType: String
  processVersion: String
  roles: [String]
  rootProcessId: String
  rootProcessInstanceId: String
  slaDueDate: DateTime
  state: String
}

type ProcessInstanceVariableHistoryLog {
  logs: [ProcessInstanceVariableLog]
  variableId: String!
  variableName: String!
}

type ProcessInstanceVariableLog {
  businessKey: String
  eventDate: DateTime
  eventId: String
  parentProcessInstanceId: String
  processId: String
  processInstanceId: String
  processType: String
  processVersion: String
  rootProcessId: String
  rootProcessInstanceId: String
  variableId: String
  variableName: String
  variableValue: JSON
}

type Query {
  GetAllCancelledJobs(pagination: Pagination): [JobExecutionLog]
  GetAllCompletedJobs(pagination: Pagination): [JobExecutionLog]
  GetAllEligibleJobsForExecution(pagination: Pagination): [JobExecutionLog]
  GetAllEligibleJobsForRetry(pagination: Pagination): [JobExecutionLog]
  GetAllInErrorJobs(pagination: Pagination): [JobExecutionLog]
  GetAllJobs(pagination: Pagination): [JobExecutionLog]
  GetAllJobsByStatus(pagination: Pagination, status: [String]!): [JobExecutionLog]
  GetAllPendingJobs(pagination: Pagination): [JobExecutionLog]
  GetAllProcessInstancesErrorByProcessInstanceId(pagination: Pagination, processInstanceId: String!): [ProcessInstanceErrorLog]
  GetAllProcessInstancesNodeByProcessInstanceId(pagination: Pagination, processInstanceId: String!): [ProcessInstanceNodeLog]
  GetAllProcessInstancesState(pagination: Pagination): [ProcessInstanceStateLog]
  GetAllProcessInstancesStateByProcessId(pagination: Pagination, processId: String!): [ProcessInstanceStateLog]
  GetAllProcessInstancesStateByStatus(pagination: Pagination, status: String!): [ProcessInstanceStateLog]
  GetAllProcessInstancesVariableByProcessInstanceId(pagination: Pagination, processInstanceId: String!): [ProcessInstanceVariableLog]
  GetAllProcessInstancesVariableHistoryByProcessInstanceId(pagination: Pagination, processInstanceId: String!): [ProcessInstanceVariableHistoryLog]
  GetAllScheduledJobs(pagination: Pagination): [JobExecutionLog]
  GetAllUserTaskInstanceAssignments(pagination: Pagination, userTaskInstanceId: String!): [UserTaskInstanceAssignmentLog]
  GetAllUserTaskInstanceAttachments(pagination: Pagination, userTaskInstanceId: String!): [UserTaskInstanceAttachmentLog]
  GetAllUserTaskInstanceComments(pagination: Pagination, userTaskInstanceId: String!): [UserTaskInstanceCommentLog]
  GetAllUserTaskInstanceDeadlines(pagination: Pagination, userTaskInstanceId: String!): [UserTaskInstanceDeadlineLog]
  GetAllUserTaskInstanceState(pagination: Pagination): [UserTaskInstanceStateLog]
  GetAllUserTaskInstanceVariables(pagination: Pagination, userTaskInstanceId: String!): [UserTaskInstanceVariableLog]
  GetJobById(jobId: String!): [JobExecutionLog]
  GetJobByProcessInstanceId(processInstanceId: String!): [JobExecutionLog]
  GetJobHistoryById(jobId: String!): [JobExecutionLog]
  GetJobHistoryByProcessInstanceId(processInstanceId: String!): [JobExecutionLog]
  GetProcessInstancesStateHistory(pagination: Pagination, processInstanceId: String!): [ProcessInstanceStateLog]
  GetProcessInstancesStateHistoryByBusinessKey(businessKey: String!, pagination: Pagination): [ProcessInstanceStateLog]
}

type UserTaskInstanceAssignmentLog {
  assignmentType: String
  businessKey: String
  eventDate: DateTime
  eventId: String!
  processInstanceId: String
  userTaskDefinitionId: String
  userTaskInstanceId: String
  userTaskName: String
  users: [String]
}

type UserTaskInstanceAttachmentLog {
  attachmentId: String
  attachmentName: String
  attachmentURI: String
  businessKey: String
  eventDate: DateTime
  eventId: String!
  eventType: Int
  processInstanceId: String
  userTaskDefinitionId: String
  userTaskInstanceId: String
}

type UserTaskInstanceCommentLog {
  businessKey: String
  commentContent: String
  commentId: String
  eventDate: DateTime
  eventId: String!
  eventType: Int
  processInstanceId: String
  userTaskDefinitionId: String
  userTaskInstanceId: String
}

type UserTaskInstanceDeadlineLog {
  businessKey: String
  eventDate: DateTime
  eventId: String!
  eventType: String
  notification: JSON
  processInstanceId: String
  userTaskDefinitionId: String
  userTaskInstanceId: String
}

type UserTaskInstanceStateLog {
  actualUser: String
  businessKey: String
  description: String
  eventDate: DateTime
  eventId: String!
  eventType: String
  name: String
  processInstanceId: String
  slaDueDate: DateTime
  state: String
  userTaskDefinitionId: String
  userTaskInstanceId: String
}

type UserTaskInstanceVariableLog {
  businessKey: String
  eventDate: DateTime
  eventId: String!
  processInstanceId: String
  userTaskDefinitionId: String
  userTaskInstanceId: String
  variableId: String
  variableName: String
  variableType: String
  variableValue: JSON
}

"An RFC-3339 compliant Full Date Scalar"
scalar Date

"An RFC-3339 compliant DateTime Scalar"
scalar DateTime

"A JSON scalar"
scalar JSON

"A 64-bit signed integer"
scalar Long

input Pagination {
  limit: Int
  offset: Int
}
