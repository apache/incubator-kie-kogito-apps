# TrustyService
trusty.explainability.enabled=false

# Postgres
kogito.apps.persistence.type=postgresql
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=kogito
quarkus.datasource.password=kogito
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/kogito
# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.database.generation.halt-on-error=true

# Kafka Tracing
mp.messaging.incoming.kogito-tracing-decision.group.id=trusty-service
mp.messaging.incoming.kogito-tracing-decision.connector=smallrye-kafka
mp.messaging.incoming.kogito-tracing-decision.topic=kogito-tracing-test
mp.messaging.incoming.kogito-tracing-decision.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.kogito-tracing-decision.auto.offset.reset=earliest
mp.messaging.incoming.kogito-tracing-model.group.id=trusty-service
mp.messaging.incoming.kogito-tracing-model.connector=smallrye-kafka
mp.messaging.incoming.kogito-tracing-model.topic=kogito-tracing-model-test
mp.messaging.incoming.kogito-tracing-model.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.kogito-tracing-model.auto.offset.reset=earliest
# Kafka Explainability Result
mp.messaging.incoming.trusty-explainability-result.group.id=trusty-service
mp.messaging.incoming.trusty-explainability-result.connector=smallrye-kafka
mp.messaging.incoming.trusty-explainability-result.topic=trusty-explainability-result-test
mp.messaging.incoming.trusty-explainability-result.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.trusty-explainability-result.auto.offset.reset=earliest

# Security
quarkus.http.cors=true
quarkus.oidc.enabled=false
quarkus.oidc.tenant-enabled=false
quarkus.oidc.auth-server-url=none
