// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CloudEventForm tests Snapshot - new instance -  default values 1`] = `
<CloudEventForm
  defaultValues={
    Object {
      "cloudEventSource": "/test/source",
    }
  }
  driver={
    Object {
      "triggerCloudEvent": [MockFunction],
    }
  }
  isNewInstanceEvent={true}
>
  <div
    data-ouia-component-type="workflow-form"
    data-ouia-safe={true}
  >
    <Form
      isHorizontal={true}
    >
      <FormBase
        innerRef={null}
        isHorizontal={true}
      >
        <form
          className="pf-c-form pf-m-horizontal"
          noValidate={true}
        >
          <FormGroup
            fieldId="endpoint"
            helperTextInvalidIcon={
              <ExclamationCircleIcon
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />
            }
            isRequired={true}
            label="Event Endpoint"
            labelIcon={
              <MockedCloudEventFieldLabelIcon
                fieldId="endpoint"
                helpMessage="Sets the endpoint and method where the CloudEvent should be triggered."
              />
            }
            validated="default"
          >
            <GenerateId
              prefix="pf-random-id-"
            >
              <div
                className="pf-c-form__group"
              >
                <div
                  className="pf-c-form__group-label"
                >
                  <label
                    className="pf-c-form__label"
                    htmlFor="endpoint"
                  >
                    <span
                      className="pf-c-form__label-text"
                    >
                      Event Endpoint
                    </span>
                    <span
                      aria-hidden="true"
                      className="pf-c-form__label-required"
                    >
                       
                      *
                    </span>
                  </label>
                   
                  <MockedCloudEventFieldLabelIcon
                    fieldId="endpoint"
                    helpMessage="Sets the endpoint and method where the CloudEvent should be triggered."
                  />
                </div>
                <div
                  className="pf-c-form__group-control"
                >
                  <InputGroup>
                    <div
                      className="pf-c-input-group"
                    >
                      <Select
                        aria-describedby=""
                        aria-invalid={false}
                        aria-label=""
                        aria-labelledby=""
                        chipGroupComponent={null}
                        className=""
                        clearSelectionsAriaLabel="Clear all"
                        createText="Create"
                        customBadgeText={null}
                        customContent={null}
                        direction="down"
                        favorites={Array []}
                        favoritesLabel="Favorites"
                        hasInlineFilter={false}
                        hasPlaceholderStyle={false}
                        id="method"
                        inlineFilterPlaceholderText={null}
                        inputAutoComplete="off"
                        inputIdPrefix=""
                        isCreatable={false}
                        isCreateOptionOnTop={false}
                        isCreateSelectOptionObject={false}
                        isDisabled={false}
                        isFlipEnabled={true}
                        isGrouped={false}
                        isInputFilterPersisted={false}
                        isInputValuePersisted={false}
                        isOpen={false}
                        isPlain={false}
                        key=".0"
                        menuAppendTo="inline"
                        noResultsFoundText="No results found"
                        onClear={[Function]}
                        onCreateOption={[Function]}
                        onFilter={null}
                        onSelect={[Function]}
                        onToggle={[Function]}
                        onTypeaheadInputChanged={null}
                        ouiaSafe={true}
                        placeholderText=""
                        position="left"
                        removeFindDomNode={false}
                        removeSelectionAriaLabel="Remove"
                        selections="POST"
                        shouldResetOnSelect={true}
                        toggleAriaLabel="Options menu"
                        toggleIcon={null}
                        toggleId={null}
                        toggleIndicator={null}
                        typeAheadAriaDescribedby=""
                        typeAheadAriaLabel=""
                        validated="default"
                        variant="single"
                        width="100px"
                        zIndex={9999}
                      >
                        <GenerateId
                          prefix="pf-random-id-"
                        >
                          <div
                            className="pf-c-select"
                            data-ouia-component-id="OUIA-Generated-Select-single-2"
                            data-ouia-component-type="PF4/Select"
                            data-ouia-safe={true}
                            style={
                              Object {
                                "width": "100px",
                              }
                            }
                          >
                            <ForwardRef
                              aria-label="Options menu"
                              aria-labelledby=" pf-select-toggle-id-2"
                              handleTypeaheadKeys={[Function]}
                              hasClearButton={false}
                              hasFooter={false}
                              hasPlaceholderStyle={false}
                              id="pf-select-toggle-id-2"
                              isDisabled={false}
                              isOpen={false}
                              isPlain={false}
                              menuRef={
                                Object {
                                  "current": null,
                                }
                              }
                              moveFocusToLastMenuItem={[Function]}
                              onClickTypeaheadToggleButton={[Function]}
                              onClose={[Function]}
                              onEnter={[Function]}
                              onToggle={[Function]}
                              parentRef={
                                Object {
                                  "current": <div
                                    class="pf-c-select"
                                    data-ouia-component-id="OUIA-Generated-Select-single-2"
                                    data-ouia-component-type="PF4/Select"
                                    data-ouia-safe="true"
                                    style="width: 100px;"
                                  >
                                    <button
                                      aria-expanded="false"
                                      aria-haspopup="listbox"
                                      aria-label="Options menu"
                                      aria-labelledby=" pf-select-toggle-id-2"
                                      class="pf-c-select__toggle"
                                      id="pf-select-toggle-id-2"
                                      type="button"
                                    >
                                      <div
                                        class="pf-c-select__toggle-wrapper"
                                      >
                                        <span
                                          class="pf-c-select__toggle-text"
                                        >
                                          POST
                                        </span>
                                      </div>
                                      <span
                                        class="pf-c-select__toggle-arrow"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          fill="currentColor"
                                          height="1em"
                                          role="img"
                                          style="vertical-align: -0.125em;"
                                          viewBox="0 0 320 512"
                                          width="1em"
                                        >
                                          <path
                                            d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                          />
                                        </svg>
                                      </span>
                                    </button>
                                  </div>,
                                }
                              }
                              toggleIndicator={null}
                              variant="single"
                            >
                              <SelectToggle
                                aria-label="Options menu"
                                aria-labelledby=" pf-select-toggle-id-2"
                                className=""
                                handleTypeaheadKeys={[Function]}
                                hasClearButton={false}
                                hasFooter={false}
                                hasPlaceholderStyle={false}
                                id="pf-select-toggle-id-2"
                                innerRef={null}
                                isActive={false}
                                isDisabled={false}
                                isOpen={false}
                                isPlain={false}
                                menuRef={
                                  Object {
                                    "current": null,
                                  }
                                }
                                moveFocusToLastMenuItem={[Function]}
                                onClickTypeaheadToggleButton={[Function]}
                                onClose={[Function]}
                                onEnter={[Function]}
                                onToggle={[Function]}
                                parentRef={
                                  Object {
                                    "current": <div
                                      class="pf-c-select"
                                      data-ouia-component-id="OUIA-Generated-Select-single-2"
                                      data-ouia-component-type="PF4/Select"
                                      data-ouia-safe="true"
                                      style="width: 100px;"
                                    >
                                      <button
                                        aria-expanded="false"
                                        aria-haspopup="listbox"
                                        aria-label="Options menu"
                                        aria-labelledby=" pf-select-toggle-id-2"
                                        class="pf-c-select__toggle"
                                        id="pf-select-toggle-id-2"
                                        type="button"
                                      >
                                        <div
                                          class="pf-c-select__toggle-wrapper"
                                        >
                                          <span
                                            class="pf-c-select__toggle-text"
                                          >
                                            POST
                                          </span>
                                        </div>
                                        <span
                                          class="pf-c-select__toggle-arrow"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style="vertical-align: -0.125em;"
                                            viewBox="0 0 320 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                            />
                                          </svg>
                                        </span>
                                      </button>
                                    </div>,
                                  }
                                }
                                toggleIndicator={null}
                                type="button"
                                variant="single"
                              >
                                <button
                                  aria-expanded={false}
                                  aria-haspopup="listbox"
                                  aria-label="Options menu"
                                  aria-labelledby=" pf-select-toggle-id-2"
                                  className="pf-c-select__toggle"
                                  disabled={false}
                                  id="pf-select-toggle-id-2"
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  type="button"
                                >
                                  <div
                                    className="pf-c-select__toggle-wrapper"
                                  >
                                    <span
                                      className="pf-c-select__toggle-text"
                                    >
                                      POST
                                    </span>
                                  </div>
                                  <span
                                    className="pf-c-select__toggle-arrow"
                                  >
                                    <CaretDownIcon
                                      color="currentColor"
                                      noVerticalAlign={false}
                                      size="sm"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        aria-labelledby={null}
                                        fill="currentColor"
                                        height="1em"
                                        role="img"
                                        style={
                                          Object {
                                            "verticalAlign": "-0.125em",
                                          }
                                        }
                                        viewBox="0 0 320 512"
                                        width="1em"
                                      >
                                        <path
                                          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                        />
                                      </svg>
                                    </CaretDownIcon>
                                  </span>
                                </button>
                              </SelectToggle>
                            </ForwardRef>
                          </div>
                        </GenerateId>
                      </Select>
                      <TextInput
                        aria-describedby="method"
                        id="endpoint"
                        isRequired={true}
                        key=".1"
                        onChange={[Function]}
                        validated="default"
                        value="/"
                      >
                        <TextInputBase
                          aria-describedby="method"
                          aria-label={null}
                          className=""
                          id="endpoint"
                          innerRef={null}
                          isDisabled={false}
                          isIconSprite={false}
                          isLeftTruncated={false}
                          isReadOnly={false}
                          isRequired={true}
                          onChange={[Function]}
                          ouiaSafe={true}
                          type="text"
                          validated="default"
                          value="/"
                        >
                          <input
                            aria-describedby="method"
                            aria-invalid={false}
                            aria-label={null}
                            className="pf-c-form-control"
                            data-ouia-component-id="OUIA-Generated-TextInputBase-5"
                            data-ouia-component-type="PF4/TextInput"
                            data-ouia-safe={true}
                            disabled={false}
                            id="endpoint"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            required={true}
                            type="text"
                            value="/"
                          />
                        </TextInputBase>
                      </TextInput>
                    </div>
                  </InputGroup>
                </div>
              </div>
            </GenerateId>
          </FormGroup>
          <FormGroup
            fieldId="eventType"
            helperTextInvalidIcon={
              <ExclamationCircleIcon
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />
            }
            isRequired={true}
            label="Event Type"
            labelIcon={
              <MockedCloudEventFieldLabelIcon
                cloudEventHeader="type"
                fieldId="eventType"
                helpMessage="Sets the type of the cloud event."
              />
            }
            validated="default"
          >
            <GenerateId
              prefix="pf-random-id-"
            >
              <div
                className="pf-c-form__group"
              >
                <div
                  className="pf-c-form__group-label"
                >
                  <label
                    className="pf-c-form__label"
                    htmlFor="eventType"
                  >
                    <span
                      className="pf-c-form__label-text"
                    >
                      Event Type
                    </span>
                    <span
                      aria-hidden="true"
                      className="pf-c-form__label-required"
                    >
                       
                      *
                    </span>
                  </label>
                   
                  <MockedCloudEventFieldLabelIcon
                    cloudEventHeader="type"
                    fieldId="eventType"
                    helpMessage="Sets the type of the cloud event."
                  />
                </div>
                <div
                  className="pf-c-form__group-control"
                >
                  <TextInput
                    id="eventType"
                    isRequired={true}
                    onChange={[Function]}
                    type="text"
                    validated="default"
                    value=""
                  >
                    <TextInputBase
                      aria-label={null}
                      className=""
                      id="eventType"
                      innerRef={null}
                      isDisabled={false}
                      isIconSprite={false}
                      isLeftTruncated={false}
                      isReadOnly={false}
                      isRequired={true}
                      onChange={[Function]}
                      ouiaSafe={true}
                      type="text"
                      validated="default"
                      value=""
                    >
                      <input
                        aria-invalid={false}
                        aria-label={null}
                        className="pf-c-form-control"
                        data-ouia-component-id="OUIA-Generated-TextInputBase-6"
                        data-ouia-component-type="PF4/TextInput"
                        data-ouia-safe={true}
                        disabled={false}
                        id="eventType"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        required={true}
                        type="text"
                        value=""
                      />
                    </TextInputBase>
                  </TextInput>
                </div>
              </div>
            </GenerateId>
          </FormGroup>
          <FormGroup
            fieldId="eventSource"
            label="Event Source"
            labelIcon={
              <MockedCloudEventFieldLabelIcon
                cloudEventHeader="source"
                fieldId="eventSource"
                helpMessage="Sets the source of the cloud event."
              />
            }
          >
            <GenerateId
              prefix="pf-random-id-"
            >
              <div
                className="pf-c-form__group"
              >
                <div
                  className="pf-c-form__group-label"
                >
                  <label
                    className="pf-c-form__label"
                    htmlFor="eventSource"
                  >
                    <span
                      className="pf-c-form__label-text"
                    >
                      Event Source
                    </span>
                  </label>
                   
                  <MockedCloudEventFieldLabelIcon
                    cloudEventHeader="source"
                    fieldId="eventSource"
                    helpMessage="Sets the source of the cloud event."
                  />
                </div>
                <div
                  className="pf-c-form__group-control"
                >
                  <TextInput
                    id="eventSource"
                    isRequired={true}
                    onChange={[Function]}
                    type="text"
                    value="/test/source"
                  >
                    <TextInputBase
                      aria-label={null}
                      className=""
                      id="eventSource"
                      innerRef={null}
                      isDisabled={false}
                      isIconSprite={false}
                      isLeftTruncated={false}
                      isReadOnly={false}
                      isRequired={true}
                      onChange={[Function]}
                      ouiaSafe={true}
                      type="text"
                      validated="default"
                      value="/test/source"
                    >
                      <input
                        aria-invalid={false}
                        aria-label={null}
                        className="pf-c-form-control"
                        data-ouia-component-id="OUIA-Generated-TextInputBase-7"
                        data-ouia-component-type="PF4/TextInput"
                        data-ouia-safe={true}
                        disabled={false}
                        id="eventSource"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        required={true}
                        type="text"
                        value="/test/source"
                      />
                    </TextInputBase>
                  </TextInput>
                </div>
              </div>
            </GenerateId>
          </FormGroup>
          <FormGroup
            fieldId="businessKey"
            label="Business Key"
            labelIcon={
              <MockedCloudEventFieldLabelIcon
                cloudEventHeader="kogitobusinesskey"
                fieldId="businessKey"
                helpMessage="Sets the Business Key for the Serverless Workflow instance started by the cloud event."
              />
            }
          >
            <GenerateId
              prefix="pf-random-id-"
            >
              <div
                className="pf-c-form__group"
              >
                <div
                  className="pf-c-form__group-label"
                >
                  <label
                    className="pf-c-form__label"
                    htmlFor="businessKey"
                  >
                    <span
                      className="pf-c-form__label-text"
                    >
                      Business Key
                    </span>
                  </label>
                   
                  <MockedCloudEventFieldLabelIcon
                    cloudEventHeader="kogitobusinesskey"
                    fieldId="businessKey"
                    helpMessage="Sets the Business Key for the Serverless Workflow instance started by the cloud event."
                  />
                </div>
                <div
                  className="pf-c-form__group-control"
                >
                  <TextInput
                    id="businessKey"
                    isRequired={true}
                    onChange={[Function]}
                    type="text"
                    value=""
                  >
                    <TextInputBase
                      aria-label={null}
                      className=""
                      id="businessKey"
                      innerRef={null}
                      isDisabled={false}
                      isIconSprite={false}
                      isLeftTruncated={false}
                      isReadOnly={false}
                      isRequired={true}
                      onChange={[Function]}
                      ouiaSafe={true}
                      type="text"
                      validated="default"
                      value=""
                    >
                      <input
                        aria-invalid={false}
                        aria-label={null}
                        className="pf-c-form-control"
                        data-ouia-component-id="OUIA-Generated-TextInputBase-8"
                        data-ouia-component-type="PF4/TextInput"
                        data-ouia-safe={true}
                        disabled={false}
                        id="businessKey"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        required={true}
                        type="text"
                        value=""
                      />
                    </TextInputBase>
                  </TextInput>
                </div>
              </div>
            </GenerateId>
          </FormGroup>
          <FormGroup
            fieldId="customHeaders"
            label="Event Custom Headers"
            labelIcon={
              <MockedCloudEventFieldLabelIcon
                fieldId="customHeaders"
                helpMessage={
                  <div>
                    <p>
                      Sets the custom headers that will be added into the Cloud Event.
                    </p>
                    <p>
                      Press the
                       
                      <span
                        className="pf-u-link-color"
                      >
                        Add Header
                      </span>
                       button to start adding new headers.
                    </p>
                    <p>
                      Headers with empty Name won't be added into the Cloud Event.
                    </p>
                  </div>
                }
              />
            }
          >
            <GenerateId
              prefix="pf-random-id-"
            >
              <div
                className="pf-c-form__group"
              >
                <div
                  className="pf-c-form__group-label"
                >
                  <label
                    className="pf-c-form__label"
                    htmlFor="customHeaders"
                  >
                    <span
                      className="pf-c-form__label-text"
                    >
                      Event Custom Headers
                    </span>
                  </label>
                   
                  <MockedCloudEventFieldLabelIcon
                    fieldId="customHeaders"
                    helpMessage={
                      <div>
                        <p>
                          Sets the custom headers that will be added into the Cloud Event.
                        </p>
                        <p>
                          Press the
                           
                          <span
                            className="pf-u-link-color"
                          >
                            Add Header
                          </span>
                           button to start adding new headers.
                        </p>
                        <p>
                          Headers with empty Name won't be added into the Cloud Event.
                        </p>
                      </div>
                    }
                  />
                </div>
                <div
                  className="pf-c-form__group-control"
                >
                  <ForwardRef />
                </div>
              </div>
            </GenerateId>
          </FormGroup>
          <FormGroup
            fieldId="eventData"
            helperTextInvalidIcon={
              <ExclamationCircleIcon
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />
            }
            isHelperTextBeforeField={true}
            label="Event Data"
            labelIcon={
              <MockedCloudEventFieldLabelIcon
                fieldId="eventData"
                helpMessage="Sets the content of the cloud event in JSON format."
              />
            }
            validated="default"
          >
            <GenerateId
              prefix="pf-random-id-"
            >
              <div
                className="pf-c-form__group"
              >
                <div
                  className="pf-c-form__group-label"
                >
                  <label
                    className="pf-c-form__label"
                    htmlFor="eventData"
                  >
                    <span
                      className="pf-c-form__label-text"
                    >
                      Event Data
                    </span>
                  </label>
                   
                  <MockedCloudEventFieldLabelIcon
                    fieldId="eventData"
                    helpMessage="Sets the content of the cloud event in JSON format."
                  />
                </div>
                <div
                  className="pf-c-form__group-control"
                >
                  <CodeEditor
                    code=""
                    height="300px"
                    isCopyEnabled={false}
                    isDarkTheme={false}
                    isLanguageLabelVisible={false}
                    isLineNumbersVisible={true}
                    isMinimapVisible={true}
                    isReadOnly={false}
                    onChange={[Function]}
                  >
                    <MockedComponent />
                  </CodeEditor>
                </div>
              </div>
            </GenerateId>
          </FormGroup>
          <ActionListGroup>
            <div
              className="pf-c-action-list__group"
            >
              <Button
                key="triggerCloudEventButton"
                onClick={[Function]}
                variant="primary"
              >
                <ButtonBase
                  innerRef={null}
                  onClick={[Function]}
                  variant="primary"
                >
                  <button
                    aria-disabled={false}
                    aria-label={null}
                    className="pf-c-button pf-m-primary"
                    data-ouia-component-id="OUIA-Generated-Button-primary-2"
                    data-ouia-component-type="PF4/Button"
                    data-ouia-safe={true}
                    disabled={false}
                    onClick={[Function]}
                    role={null}
                    type="button"
                  >
                    Trigger
                  </button>
                </ButtonBase>
              </Button>
              <Button
                key="resetCloudEventFormButton"
                onClick={[Function]}
                variant="secondary"
              >
                <ButtonBase
                  innerRef={null}
                  onClick={[Function]}
                  variant="secondary"
                >
                  <button
                    aria-disabled={false}
                    aria-label={null}
                    className="pf-c-button pf-m-secondary"
                    data-ouia-component-id="OUIA-Generated-Button-secondary-2"
                    data-ouia-component-type="PF4/Button"
                    data-ouia-safe={true}
                    disabled={false}
                    onClick={[Function]}
                    role={null}
                    type="button"
                  >
                    Reset
                  </button>
                </ButtonBase>
              </Button>
            </div>
          </ActionListGroup>
        </form>
      </FormBase>
    </Form>
  </div>
</CloudEventForm>
`;

exports[`CloudEventForm tests Snapshot - new instance 1`] = `
<CloudEventForm
  driver={
    Object {
      "triggerCloudEvent": [MockFunction],
    }
  }
  isNewInstanceEvent={true}
>
  <div
    data-ouia-component-type="workflow-form"
    data-ouia-safe={true}
  >
    <Form
      isHorizontal={true}
    >
      <FormBase
        innerRef={null}
        isHorizontal={true}
      >
        <form
          className="pf-c-form pf-m-horizontal"
          noValidate={true}
        >
          <FormGroup
            fieldId="endpoint"
            helperTextInvalidIcon={
              <ExclamationCircleIcon
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />
            }
            isRequired={true}
            label="Event Endpoint"
            labelIcon={
              <MockedCloudEventFieldLabelIcon
                fieldId="endpoint"
                helpMessage="Sets the endpoint and method where the CloudEvent should be triggered."
              />
            }
            validated="default"
          >
            <GenerateId
              prefix="pf-random-id-"
            >
              <div
                className="pf-c-form__group"
              >
                <div
                  className="pf-c-form__group-label"
                >
                  <label
                    className="pf-c-form__label"
                    htmlFor="endpoint"
                  >
                    <span
                      className="pf-c-form__label-text"
                    >
                      Event Endpoint
                    </span>
                    <span
                      aria-hidden="true"
                      className="pf-c-form__label-required"
                    >
                       
                      *
                    </span>
                  </label>
                   
                  <MockedCloudEventFieldLabelIcon
                    fieldId="endpoint"
                    helpMessage="Sets the endpoint and method where the CloudEvent should be triggered."
                  />
                </div>
                <div
                  className="pf-c-form__group-control"
                >
                  <InputGroup>
                    <div
                      className="pf-c-input-group"
                    >
                      <Select
                        aria-describedby=""
                        aria-invalid={false}
                        aria-label=""
                        aria-labelledby=""
                        chipGroupComponent={null}
                        className=""
                        clearSelectionsAriaLabel="Clear all"
                        createText="Create"
                        customBadgeText={null}
                        customContent={null}
                        direction="down"
                        favorites={Array []}
                        favoritesLabel="Favorites"
                        hasInlineFilter={false}
                        hasPlaceholderStyle={false}
                        id="method"
                        inlineFilterPlaceholderText={null}
                        inputAutoComplete="off"
                        inputIdPrefix=""
                        isCreatable={false}
                        isCreateOptionOnTop={false}
                        isCreateSelectOptionObject={false}
                        isDisabled={false}
                        isFlipEnabled={true}
                        isGrouped={false}
                        isInputFilterPersisted={false}
                        isInputValuePersisted={false}
                        isOpen={false}
                        isPlain={false}
                        key=".0"
                        menuAppendTo="inline"
                        noResultsFoundText="No results found"
                        onClear={[Function]}
                        onCreateOption={[Function]}
                        onFilter={null}
                        onSelect={[Function]}
                        onToggle={[Function]}
                        onTypeaheadInputChanged={null}
                        ouiaSafe={true}
                        placeholderText=""
                        position="left"
                        removeFindDomNode={false}
                        removeSelectionAriaLabel="Remove"
                        selections="POST"
                        shouldResetOnSelect={true}
                        toggleAriaLabel="Options menu"
                        toggleIcon={null}
                        toggleId={null}
                        toggleIndicator={null}
                        typeAheadAriaDescribedby=""
                        typeAheadAriaLabel=""
                        validated="default"
                        variant="single"
                        width="100px"
                        zIndex={9999}
                      >
                        <GenerateId
                          prefix="pf-random-id-"
                        >
                          <div
                            className="pf-c-select"
                            data-ouia-component-id="OUIA-Generated-Select-single-1"
                            data-ouia-component-type="PF4/Select"
                            data-ouia-safe={true}
                            style={
                              Object {
                                "width": "100px",
                              }
                            }
                          >
                            <ForwardRef
                              aria-label="Options menu"
                              aria-labelledby=" pf-select-toggle-id-0"
                              handleTypeaheadKeys={[Function]}
                              hasClearButton={false}
                              hasFooter={false}
                              hasPlaceholderStyle={false}
                              id="pf-select-toggle-id-0"
                              isDisabled={false}
                              isOpen={false}
                              isPlain={false}
                              menuRef={
                                Object {
                                  "current": null,
                                }
                              }
                              moveFocusToLastMenuItem={[Function]}
                              onClickTypeaheadToggleButton={[Function]}
                              onClose={[Function]}
                              onEnter={[Function]}
                              onToggle={[Function]}
                              parentRef={
                                Object {
                                  "current": <div
                                    class="pf-c-select"
                                    data-ouia-component-id="OUIA-Generated-Select-single-1"
                                    data-ouia-component-type="PF4/Select"
                                    data-ouia-safe="true"
                                    style="width: 100px;"
                                  >
                                    <button
                                      aria-expanded="false"
                                      aria-haspopup="listbox"
                                      aria-label="Options menu"
                                      aria-labelledby=" pf-select-toggle-id-0"
                                      class="pf-c-select__toggle"
                                      id="pf-select-toggle-id-0"
                                      type="button"
                                    >
                                      <div
                                        class="pf-c-select__toggle-wrapper"
                                      >
                                        <span
                                          class="pf-c-select__toggle-text"
                                        >
                                          POST
                                        </span>
                                      </div>
                                      <span
                                        class="pf-c-select__toggle-arrow"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          fill="currentColor"
                                          height="1em"
                                          role="img"
                                          style="vertical-align: -0.125em;"
                                          viewBox="0 0 320 512"
                                          width="1em"
                                        >
                                          <path
                                            d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                          />
                                        </svg>
                                      </span>
                                    </button>
                                  </div>,
                                }
                              }
                              toggleIndicator={null}
                              variant="single"
                            >
                              <SelectToggle
                                aria-label="Options menu"
                                aria-labelledby=" pf-select-toggle-id-0"
                                className=""
                                handleTypeaheadKeys={[Function]}
                                hasClearButton={false}
                                hasFooter={false}
                                hasPlaceholderStyle={false}
                                id="pf-select-toggle-id-0"
                                innerRef={null}
                                isActive={false}
                                isDisabled={false}
                                isOpen={false}
                                isPlain={false}
                                menuRef={
                                  Object {
                                    "current": null,
                                  }
                                }
                                moveFocusToLastMenuItem={[Function]}
                                onClickTypeaheadToggleButton={[Function]}
                                onClose={[Function]}
                                onEnter={[Function]}
                                onToggle={[Function]}
                                parentRef={
                                  Object {
                                    "current": <div
                                      class="pf-c-select"
                                      data-ouia-component-id="OUIA-Generated-Select-single-1"
                                      data-ouia-component-type="PF4/Select"
                                      data-ouia-safe="true"
                                      style="width: 100px;"
                                    >
                                      <button
                                        aria-expanded="false"
                                        aria-haspopup="listbox"
                                        aria-label="Options menu"
                                        aria-labelledby=" pf-select-toggle-id-0"
                                        class="pf-c-select__toggle"
                                        id="pf-select-toggle-id-0"
                                        type="button"
                                      >
                                        <div
                                          class="pf-c-select__toggle-wrapper"
                                        >
                                          <span
                                            class="pf-c-select__toggle-text"
                                          >
                                            POST
                                          </span>
                                        </div>
                                        <span
                                          class="pf-c-select__toggle-arrow"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style="vertical-align: -0.125em;"
                                            viewBox="0 0 320 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                            />
                                          </svg>
                                        </span>
                                      </button>
                                    </div>,
                                  }
                                }
                                toggleIndicator={null}
                                type="button"
                                variant="single"
                              >
                                <button
                                  aria-expanded={false}
                                  aria-haspopup="listbox"
                                  aria-label="Options menu"
                                  aria-labelledby=" pf-select-toggle-id-0"
                                  className="pf-c-select__toggle"
                                  disabled={false}
                                  id="pf-select-toggle-id-0"
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  type="button"
                                >
                                  <div
                                    className="pf-c-select__toggle-wrapper"
                                  >
                                    <span
                                      className="pf-c-select__toggle-text"
                                    >
                                      POST
                                    </span>
                                  </div>
                                  <span
                                    className="pf-c-select__toggle-arrow"
                                  >
                                    <CaretDownIcon
                                      color="currentColor"
                                      noVerticalAlign={false}
                                      size="sm"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        aria-labelledby={null}
                                        fill="currentColor"
                                        height="1em"
                                        role="img"
                                        style={
                                          Object {
                                            "verticalAlign": "-0.125em",
                                          }
                                        }
                                        viewBox="0 0 320 512"
                                        width="1em"
                                      >
                                        <path
                                          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                        />
                                      </svg>
                                    </CaretDownIcon>
                                  </span>
                                </button>
                              </SelectToggle>
                            </ForwardRef>
                          </div>
                        </GenerateId>
                      </Select>
                      <TextInput
                        aria-describedby="method"
                        id="endpoint"
                        isRequired={true}
                        key=".1"
                        onChange={[Function]}
                        validated="default"
                        value="/"
                      >
                        <TextInputBase
                          aria-describedby="method"
                          aria-label={null}
                          className=""
                          id="endpoint"
                          innerRef={null}
                          isDisabled={false}
                          isIconSprite={false}
                          isLeftTruncated={false}
                          isReadOnly={false}
                          isRequired={true}
                          onChange={[Function]}
                          ouiaSafe={true}
                          type="text"
                          validated="default"
                          value="/"
                        >
                          <input
                            aria-describedby="method"
                            aria-invalid={false}
                            aria-label={null}
                            className="pf-c-form-control"
                            data-ouia-component-id="OUIA-Generated-TextInputBase-1"
                            data-ouia-component-type="PF4/TextInput"
                            data-ouia-safe={true}
                            disabled={false}
                            id="endpoint"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            required={true}
                            type="text"
                            value="/"
                          />
                        </TextInputBase>
                      </TextInput>
                    </div>
                  </InputGroup>
                </div>
              </div>
            </GenerateId>
          </FormGroup>
          <FormGroup
            fieldId="eventType"
            helperTextInvalidIcon={
              <ExclamationCircleIcon
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />
            }
            isRequired={true}
            label="Event Type"
            labelIcon={
              <MockedCloudEventFieldLabelIcon
                cloudEventHeader="type"
                fieldId="eventType"
                helpMessage="Sets the type of the cloud event."
              />
            }
            validated="default"
          >
            <GenerateId
              prefix="pf-random-id-"
            >
              <div
                className="pf-c-form__group"
              >
                <div
                  className="pf-c-form__group-label"
                >
                  <label
                    className="pf-c-form__label"
                    htmlFor="eventType"
                  >
                    <span
                      className="pf-c-form__label-text"
                    >
                      Event Type
                    </span>
                    <span
                      aria-hidden="true"
                      className="pf-c-form__label-required"
                    >
                       
                      *
                    </span>
                  </label>
                   
                  <MockedCloudEventFieldLabelIcon
                    cloudEventHeader="type"
                    fieldId="eventType"
                    helpMessage="Sets the type of the cloud event."
                  />
                </div>
                <div
                  className="pf-c-form__group-control"
                >
                  <TextInput
                    id="eventType"
                    isRequired={true}
                    onChange={[Function]}
                    type="text"
                    validated="default"
                    value=""
                  >
                    <TextInputBase
                      aria-label={null}
                      className=""
                      id="eventType"
                      innerRef={null}
                      isDisabled={false}
                      isIconSprite={false}
                      isLeftTruncated={false}
                      isReadOnly={false}
                      isRequired={true}
                      onChange={[Function]}
                      ouiaSafe={true}
                      type="text"
                      validated="default"
                      value=""
                    >
                      <input
                        aria-invalid={false}
                        aria-label={null}
                        className="pf-c-form-control"
                        data-ouia-component-id="OUIA-Generated-TextInputBase-2"
                        data-ouia-component-type="PF4/TextInput"
                        data-ouia-safe={true}
                        disabled={false}
                        id="eventType"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        required={true}
                        type="text"
                        value=""
                      />
                    </TextInputBase>
                  </TextInput>
                </div>
              </div>
            </GenerateId>
          </FormGroup>
          <FormGroup
            fieldId="eventSource"
            label="Event Source"
            labelIcon={
              <MockedCloudEventFieldLabelIcon
                cloudEventHeader="source"
                fieldId="eventSource"
                helpMessage="Sets the source of the cloud event."
              />
            }
          >
            <GenerateId
              prefix="pf-random-id-"
            >
              <div
                className="pf-c-form__group"
              >
                <div
                  className="pf-c-form__group-label"
                >
                  <label
                    className="pf-c-form__label"
                    htmlFor="eventSource"
                  >
                    <span
                      className="pf-c-form__label-text"
                    >
                      Event Source
                    </span>
                  </label>
                   
                  <MockedCloudEventFieldLabelIcon
                    cloudEventHeader="source"
                    fieldId="eventSource"
                    helpMessage="Sets the source of the cloud event."
                  />
                </div>
                <div
                  className="pf-c-form__group-control"
                >
                  <TextInput
                    id="eventSource"
                    isRequired={true}
                    onChange={[Function]}
                    type="text"
                    value="/from/form"
                  >
                    <TextInputBase
                      aria-label={null}
                      className=""
                      id="eventSource"
                      innerRef={null}
                      isDisabled={false}
                      isIconSprite={false}
                      isLeftTruncated={false}
                      isReadOnly={false}
                      isRequired={true}
                      onChange={[Function]}
                      ouiaSafe={true}
                      type="text"
                      validated="default"
                      value="/from/form"
                    >
                      <input
                        aria-invalid={false}
                        aria-label={null}
                        className="pf-c-form-control"
                        data-ouia-component-id="OUIA-Generated-TextInputBase-3"
                        data-ouia-component-type="PF4/TextInput"
                        data-ouia-safe={true}
                        disabled={false}
                        id="eventSource"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        required={true}
                        type="text"
                        value="/from/form"
                      />
                    </TextInputBase>
                  </TextInput>
                </div>
              </div>
            </GenerateId>
          </FormGroup>
          <FormGroup
            fieldId="businessKey"
            label="Business Key"
            labelIcon={
              <MockedCloudEventFieldLabelIcon
                cloudEventHeader="kogitobusinesskey"
                fieldId="businessKey"
                helpMessage="Sets the Business Key for the Serverless Workflow instance started by the cloud event."
              />
            }
          >
            <GenerateId
              prefix="pf-random-id-"
            >
              <div
                className="pf-c-form__group"
              >
                <div
                  className="pf-c-form__group-label"
                >
                  <label
                    className="pf-c-form__label"
                    htmlFor="businessKey"
                  >
                    <span
                      className="pf-c-form__label-text"
                    >
                      Business Key
                    </span>
                  </label>
                   
                  <MockedCloudEventFieldLabelIcon
                    cloudEventHeader="kogitobusinesskey"
                    fieldId="businessKey"
                    helpMessage="Sets the Business Key for the Serverless Workflow instance started by the cloud event."
                  />
                </div>
                <div
                  className="pf-c-form__group-control"
                >
                  <TextInput
                    id="businessKey"
                    isRequired={true}
                    onChange={[Function]}
                    type="text"
                    value=""
                  >
                    <TextInputBase
                      aria-label={null}
                      className=""
                      id="businessKey"
                      innerRef={null}
                      isDisabled={false}
                      isIconSprite={false}
                      isLeftTruncated={false}
                      isReadOnly={false}
                      isRequired={true}
                      onChange={[Function]}
                      ouiaSafe={true}
                      type="text"
                      validated="default"
                      value=""
                    >
                      <input
                        aria-invalid={false}
                        aria-label={null}
                        className="pf-c-form-control"
                        data-ouia-component-id="OUIA-Generated-TextInputBase-4"
                        data-ouia-component-type="PF4/TextInput"
                        data-ouia-safe={true}
                        disabled={false}
                        id="businessKey"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        required={true}
                        type="text"
                        value=""
                      />
                    </TextInputBase>
                  </TextInput>
                </div>
              </div>
            </GenerateId>
          </FormGroup>
          <FormGroup
            fieldId="customHeaders"
            label="Event Custom Headers"
            labelIcon={
              <MockedCloudEventFieldLabelIcon
                fieldId="customHeaders"
                helpMessage={
                  <div>
                    <p>
                      Sets the custom headers that will be added into the Cloud Event.
                    </p>
                    <p>
                      Press the
                       
                      <span
                        className="pf-u-link-color"
                      >
                        Add Header
                      </span>
                       button to start adding new headers.
                    </p>
                    <p>
                      Headers with empty Name won't be added into the Cloud Event.
                    </p>
                  </div>
                }
              />
            }
          >
            <GenerateId
              prefix="pf-random-id-"
            >
              <div
                className="pf-c-form__group"
              >
                <div
                  className="pf-c-form__group-label"
                >
                  <label
                    className="pf-c-form__label"
                    htmlFor="customHeaders"
                  >
                    <span
                      className="pf-c-form__label-text"
                    >
                      Event Custom Headers
                    </span>
                  </label>
                   
                  <MockedCloudEventFieldLabelIcon
                    fieldId="customHeaders"
                    helpMessage={
                      <div>
                        <p>
                          Sets the custom headers that will be added into the Cloud Event.
                        </p>
                        <p>
                          Press the
                           
                          <span
                            className="pf-u-link-color"
                          >
                            Add Header
                          </span>
                           button to start adding new headers.
                        </p>
                        <p>
                          Headers with empty Name won't be added into the Cloud Event.
                        </p>
                      </div>
                    }
                  />
                </div>
                <div
                  className="pf-c-form__group-control"
                >
                  <ForwardRef />
                </div>
              </div>
            </GenerateId>
          </FormGroup>
          <FormGroup
            fieldId="eventData"
            helperTextInvalidIcon={
              <ExclamationCircleIcon
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />
            }
            isHelperTextBeforeField={true}
            label="Event Data"
            labelIcon={
              <MockedCloudEventFieldLabelIcon
                fieldId="eventData"
                helpMessage="Sets the content of the cloud event in JSON format."
              />
            }
            validated="default"
          >
            <GenerateId
              prefix="pf-random-id-"
            >
              <div
                className="pf-c-form__group"
              >
                <div
                  className="pf-c-form__group-label"
                >
                  <label
                    className="pf-c-form__label"
                    htmlFor="eventData"
                  >
                    <span
                      className="pf-c-form__label-text"
                    >
                      Event Data
                    </span>
                  </label>
                   
                  <MockedCloudEventFieldLabelIcon
                    fieldId="eventData"
                    helpMessage="Sets the content of the cloud event in JSON format."
                  />
                </div>
                <div
                  className="pf-c-form__group-control"
                >
                  <CodeEditor
                    code=""
                    height="300px"
                    isCopyEnabled={false}
                    isDarkTheme={false}
                    isLanguageLabelVisible={false}
                    isLineNumbersVisible={true}
                    isMinimapVisible={true}
                    isReadOnly={false}
                    onChange={[Function]}
                  >
                    <MockedComponent />
                  </CodeEditor>
                </div>
              </div>
            </GenerateId>
          </FormGroup>
          <ActionListGroup>
            <div
              className="pf-c-action-list__group"
            >
              <Button
                key="triggerCloudEventButton"
                onClick={[Function]}
                variant="primary"
              >
                <ButtonBase
                  innerRef={null}
                  onClick={[Function]}
                  variant="primary"
                >
                  <button
                    aria-disabled={false}
                    aria-label={null}
                    className="pf-c-button pf-m-primary"
                    data-ouia-component-id="OUIA-Generated-Button-primary-1"
                    data-ouia-component-type="PF4/Button"
                    data-ouia-safe={true}
                    disabled={false}
                    onClick={[Function]}
                    role={null}
                    type="button"
                  >
                    Trigger
                  </button>
                </ButtonBase>
              </Button>
              <Button
                key="resetCloudEventFormButton"
                onClick={[Function]}
                variant="secondary"
              >
                <ButtonBase
                  innerRef={null}
                  onClick={[Function]}
                  variant="secondary"
                >
                  <button
                    aria-disabled={false}
                    aria-label={null}
                    className="pf-c-button pf-m-secondary"
                    data-ouia-component-id="OUIA-Generated-Button-secondary-1"
                    data-ouia-component-type="PF4/Button"
                    data-ouia-safe={true}
                    disabled={false}
                    onClick={[Function]}
                    role={null}
                    type="button"
                  >
                    Reset
                  </button>
                </ButtonBase>
              </Button>
            </div>
          </ActionListGroup>
        </form>
      </FormBase>
    </Form>
  </div>
</CloudEventForm>
`;

exports[`CloudEventForm tests Snapshot - send cloud event -  default values 1`] = `
<CloudEventForm
  defaultValues={
    Object {
      "cloudEventSource": "/test/source",
      "instanceId": "1234",
    }
  }
  driver={
    Object {
      "triggerCloudEvent": [MockFunction],
    }
  }
>
  <div
    data-ouia-component-type="workflow-form"
    data-ouia-safe={true}
  >
    <Form
      isHorizontal={true}
    >
      <FormBase
        innerRef={null}
        isHorizontal={true}
      >
        <form
          className="pf-c-form pf-m-horizontal"
          noValidate={true}
        >
          <FormGroup
            fieldId="endpoint"
            helperTextInvalidIcon={
              <ExclamationCircleIcon
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />
            }
            isRequired={true}
            label="Event Endpoint"
            labelIcon={
              <MockedCloudEventFieldLabelIcon
                fieldId="endpoint"
                helpMessage="Sets the endpoint and method where the CloudEvent should be triggered."
              />
            }
            validated="default"
          >
            <GenerateId
              prefix="pf-random-id-"
            >
              <div
                className="pf-c-form__group"
              >
                <div
                  className="pf-c-form__group-label"
                >
                  <label
                    className="pf-c-form__label"
                    htmlFor="endpoint"
                  >
                    <span
                      className="pf-c-form__label-text"
                    >
                      Event Endpoint
                    </span>
                    <span
                      aria-hidden="true"
                      className="pf-c-form__label-required"
                    >
                       
                      *
                    </span>
                  </label>
                   
                  <MockedCloudEventFieldLabelIcon
                    fieldId="endpoint"
                    helpMessage="Sets the endpoint and method where the CloudEvent should be triggered."
                  />
                </div>
                <div
                  className="pf-c-form__group-control"
                >
                  <InputGroup>
                    <div
                      className="pf-c-input-group"
                    >
                      <Select
                        aria-describedby=""
                        aria-invalid={false}
                        aria-label=""
                        aria-labelledby=""
                        chipGroupComponent={null}
                        className=""
                        clearSelectionsAriaLabel="Clear all"
                        createText="Create"
                        customBadgeText={null}
                        customContent={null}
                        direction="down"
                        favorites={Array []}
                        favoritesLabel="Favorites"
                        hasInlineFilter={false}
                        hasPlaceholderStyle={false}
                        id="method"
                        inlineFilterPlaceholderText={null}
                        inputAutoComplete="off"
                        inputIdPrefix=""
                        isCreatable={false}
                        isCreateOptionOnTop={false}
                        isCreateSelectOptionObject={false}
                        isDisabled={false}
                        isFlipEnabled={true}
                        isGrouped={false}
                        isInputFilterPersisted={false}
                        isInputValuePersisted={false}
                        isOpen={false}
                        isPlain={false}
                        key=".0"
                        menuAppendTo="inline"
                        noResultsFoundText="No results found"
                        onClear={[Function]}
                        onCreateOption={[Function]}
                        onFilter={null}
                        onSelect={[Function]}
                        onToggle={[Function]}
                        onTypeaheadInputChanged={null}
                        ouiaSafe={true}
                        placeholderText=""
                        position="left"
                        removeFindDomNode={false}
                        removeSelectionAriaLabel="Remove"
                        selections="POST"
                        shouldResetOnSelect={true}
                        toggleAriaLabel="Options menu"
                        toggleIcon={null}
                        toggleId={null}
                        toggleIndicator={null}
                        typeAheadAriaDescribedby=""
                        typeAheadAriaLabel=""
                        validated="default"
                        variant="single"
                        width="100px"
                        zIndex={9999}
                      >
                        <GenerateId
                          prefix="pf-random-id-"
                        >
                          <div
                            className="pf-c-select"
                            data-ouia-component-id="OUIA-Generated-Select-single-4"
                            data-ouia-component-type="PF4/Select"
                            data-ouia-safe={true}
                            style={
                              Object {
                                "width": "100px",
                              }
                            }
                          >
                            <ForwardRef
                              aria-label="Options menu"
                              aria-labelledby=" pf-select-toggle-id-5"
                              handleTypeaheadKeys={[Function]}
                              hasClearButton={false}
                              hasFooter={false}
                              hasPlaceholderStyle={false}
                              id="pf-select-toggle-id-5"
                              isDisabled={false}
                              isOpen={false}
                              isPlain={false}
                              menuRef={
                                Object {
                                  "current": null,
                                }
                              }
                              moveFocusToLastMenuItem={[Function]}
                              onClickTypeaheadToggleButton={[Function]}
                              onClose={[Function]}
                              onEnter={[Function]}
                              onToggle={[Function]}
                              parentRef={
                                Object {
                                  "current": <div
                                    class="pf-c-select"
                                    data-ouia-component-id="OUIA-Generated-Select-single-4"
                                    data-ouia-component-type="PF4/Select"
                                    data-ouia-safe="true"
                                    style="width: 100px;"
                                  >
                                    <button
                                      aria-expanded="false"
                                      aria-haspopup="listbox"
                                      aria-label="Options menu"
                                      aria-labelledby=" pf-select-toggle-id-5"
                                      class="pf-c-select__toggle"
                                      id="pf-select-toggle-id-5"
                                      type="button"
                                    >
                                      <div
                                        class="pf-c-select__toggle-wrapper"
                                      >
                                        <span
                                          class="pf-c-select__toggle-text"
                                        >
                                          POST
                                        </span>
                                      </div>
                                      <span
                                        class="pf-c-select__toggle-arrow"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          fill="currentColor"
                                          height="1em"
                                          role="img"
                                          style="vertical-align: -0.125em;"
                                          viewBox="0 0 320 512"
                                          width="1em"
                                        >
                                          <path
                                            d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                          />
                                        </svg>
                                      </span>
                                    </button>
                                  </div>,
                                }
                              }
                              toggleIndicator={null}
                              variant="single"
                            >
                              <SelectToggle
                                aria-label="Options menu"
                                aria-labelledby=" pf-select-toggle-id-5"
                                className=""
                                handleTypeaheadKeys={[Function]}
                                hasClearButton={false}
                                hasFooter={false}
                                hasPlaceholderStyle={false}
                                id="pf-select-toggle-id-5"
                                innerRef={null}
                                isActive={false}
                                isDisabled={false}
                                isOpen={false}
                                isPlain={false}
                                menuRef={
                                  Object {
                                    "current": null,
                                  }
                                }
                                moveFocusToLastMenuItem={[Function]}
                                onClickTypeaheadToggleButton={[Function]}
                                onClose={[Function]}
                                onEnter={[Function]}
                                onToggle={[Function]}
                                parentRef={
                                  Object {
                                    "current": <div
                                      class="pf-c-select"
                                      data-ouia-component-id="OUIA-Generated-Select-single-4"
                                      data-ouia-component-type="PF4/Select"
                                      data-ouia-safe="true"
                                      style="width: 100px;"
                                    >
                                      <button
                                        aria-expanded="false"
                                        aria-haspopup="listbox"
                                        aria-label="Options menu"
                                        aria-labelledby=" pf-select-toggle-id-5"
                                        class="pf-c-select__toggle"
                                        id="pf-select-toggle-id-5"
                                        type="button"
                                      >
                                        <div
                                          class="pf-c-select__toggle-wrapper"
                                        >
                                          <span
                                            class="pf-c-select__toggle-text"
                                          >
                                            POST
                                          </span>
                                        </div>
                                        <span
                                          class="pf-c-select__toggle-arrow"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style="vertical-align: -0.125em;"
                                            viewBox="0 0 320 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                            />
                                          </svg>
                                        </span>
                                      </button>
                                    </div>,
                                  }
                                }
                                toggleIndicator={null}
                                type="button"
                                variant="single"
                              >
                                <button
                                  aria-expanded={false}
                                  aria-haspopup="listbox"
                                  aria-label="Options menu"
                                  aria-labelledby=" pf-select-toggle-id-5"
                                  className="pf-c-select__toggle"
                                  disabled={false}
                                  id="pf-select-toggle-id-5"
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  type="button"
                                >
                                  <div
                                    className="pf-c-select__toggle-wrapper"
                                  >
                                    <span
                                      className="pf-c-select__toggle-text"
                                    >
                                      POST
                                    </span>
                                  </div>
                                  <span
                                    className="pf-c-select__toggle-arrow"
                                  >
                                    <CaretDownIcon
                                      color="currentColor"
                                      noVerticalAlign={false}
                                      size="sm"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        aria-labelledby={null}
                                        fill="currentColor"
                                        height="1em"
                                        role="img"
                                        style={
                                          Object {
                                            "verticalAlign": "-0.125em",
                                          }
                                        }
                                        viewBox="0 0 320 512"
                                        width="1em"
                                      >
                                        <path
                                          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                        />
                                      </svg>
                                    </CaretDownIcon>
                                  </span>
                                </button>
                              </SelectToggle>
                            </ForwardRef>
                          </div>
                        </GenerateId>
                      </Select>
                      <TextInput
                        aria-describedby="method"
                        id="endpoint"
                        isRequired={true}
                        key=".1"
                        onChange={[Function]}
                        validated="default"
                        value="/"
                      >
                        <TextInputBase
                          aria-describedby="method"
                          aria-label={null}
                          className=""
                          id="endpoint"
                          innerRef={null}
                          isDisabled={false}
                          isIconSprite={false}
                          isLeftTruncated={false}
                          isReadOnly={false}
                          isRequired={true}
                          onChange={[Function]}
                          ouiaSafe={true}
                          type="text"
                          validated="default"
                          value="/"
                        >
                          <input
                            aria-describedby="method"
                            aria-invalid={false}
                            aria-label={null}
                            className="pf-c-form-control"
                            data-ouia-component-id="OUIA-Generated-TextInputBase-13"
                            data-ouia-component-type="PF4/TextInput"
                            data-ouia-safe={true}
                            disabled={false}
                            id="endpoint"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            required={true}
                            type="text"
                            value="/"
                          />
                        </TextInputBase>
                      </TextInput>
                    </div>
                  </InputGroup>
                </div>
              </div>
            </GenerateId>
          </FormGroup>
          <FormGroup
            fieldId="eventType"
            helperTextInvalidIcon={
              <ExclamationCircleIcon
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />
            }
            isRequired={true}
            label="Event Type"
            labelIcon={
              <MockedCloudEventFieldLabelIcon
                cloudEventHeader="type"
                fieldId="eventType"
                helpMessage="Sets the type of the cloud event."
              />
            }
            validated="default"
          >
            <GenerateId
              prefix="pf-random-id-"
            >
              <div
                className="pf-c-form__group"
              >
                <div
                  className="pf-c-form__group-label"
                >
                  <label
                    className="pf-c-form__label"
                    htmlFor="eventType"
                  >
                    <span
                      className="pf-c-form__label-text"
                    >
                      Event Type
                    </span>
                    <span
                      aria-hidden="true"
                      className="pf-c-form__label-required"
                    >
                       
                      *
                    </span>
                  </label>
                   
                  <MockedCloudEventFieldLabelIcon
                    cloudEventHeader="type"
                    fieldId="eventType"
                    helpMessage="Sets the type of the cloud event."
                  />
                </div>
                <div
                  className="pf-c-form__group-control"
                >
                  <TextInput
                    id="eventType"
                    isRequired={true}
                    onChange={[Function]}
                    type="text"
                    validated="default"
                    value=""
                  >
                    <TextInputBase
                      aria-label={null}
                      className=""
                      id="eventType"
                      innerRef={null}
                      isDisabled={false}
                      isIconSprite={false}
                      isLeftTruncated={false}
                      isReadOnly={false}
                      isRequired={true}
                      onChange={[Function]}
                      ouiaSafe={true}
                      type="text"
                      validated="default"
                      value=""
                    >
                      <input
                        aria-invalid={false}
                        aria-label={null}
                        className="pf-c-form-control"
                        data-ouia-component-id="OUIA-Generated-TextInputBase-14"
                        data-ouia-component-type="PF4/TextInput"
                        data-ouia-safe={true}
                        disabled={false}
                        id="eventType"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        required={true}
                        type="text"
                        value=""
                      />
                    </TextInputBase>
                  </TextInput>
                </div>
              </div>
            </GenerateId>
          </FormGroup>
          <FormGroup
            fieldId="eventSource"
            label="Event Source"
            labelIcon={
              <MockedCloudEventFieldLabelIcon
                cloudEventHeader="source"
                fieldId="eventSource"
                helpMessage="Sets the source of the cloud event."
              />
            }
          >
            <GenerateId
              prefix="pf-random-id-"
            >
              <div
                className="pf-c-form__group"
              >
                <div
                  className="pf-c-form__group-label"
                >
                  <label
                    className="pf-c-form__label"
                    htmlFor="eventSource"
                  >
                    <span
                      className="pf-c-form__label-text"
                    >
                      Event Source
                    </span>
                  </label>
                   
                  <MockedCloudEventFieldLabelIcon
                    cloudEventHeader="source"
                    fieldId="eventSource"
                    helpMessage="Sets the source of the cloud event."
                  />
                </div>
                <div
                  className="pf-c-form__group-control"
                >
                  <TextInput
                    id="eventSource"
                    isRequired={true}
                    onChange={[Function]}
                    type="text"
                    value="/test/source"
                  >
                    <TextInputBase
                      aria-label={null}
                      className=""
                      id="eventSource"
                      innerRef={null}
                      isDisabled={false}
                      isIconSprite={false}
                      isLeftTruncated={false}
                      isReadOnly={false}
                      isRequired={true}
                      onChange={[Function]}
                      ouiaSafe={true}
                      type="text"
                      validated="default"
                      value="/test/source"
                    >
                      <input
                        aria-invalid={false}
                        aria-label={null}
                        className="pf-c-form-control"
                        data-ouia-component-id="OUIA-Generated-TextInputBase-15"
                        data-ouia-component-type="PF4/TextInput"
                        data-ouia-safe={true}
                        disabled={false}
                        id="eventSource"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        required={true}
                        type="text"
                        value="/test/source"
                      />
                    </TextInputBase>
                  </TextInput>
                </div>
              </div>
            </GenerateId>
          </FormGroup>
          <FormGroup
            fieldId="instanceId"
            label="Instance Id"
            labelIcon={
              <MockedCloudEventFieldLabelIcon
                cloudEventHeader="kogitoprocrefid"
                fieldId="instanceId"
                helpMessage="Sets the Service Workflow instance Id the cloud event will interact with."
              />
            }
          >
            <GenerateId
              prefix="pf-random-id-"
            >
              <div
                className="pf-c-form__group"
              >
                <div
                  className="pf-c-form__group-label"
                >
                  <label
                    className="pf-c-form__label"
                    htmlFor="instanceId"
                  >
                    <span
                      className="pf-c-form__label-text"
                    >
                      Instance Id
                    </span>
                  </label>
                   
                  <MockedCloudEventFieldLabelIcon
                    cloudEventHeader="kogitoprocrefid"
                    fieldId="instanceId"
                    helpMessage="Sets the Service Workflow instance Id the cloud event will interact with."
                  />
                </div>
                <div
                  className="pf-c-form__group-control"
                >
                  <TextInput
                    id="instanceId"
                    isRequired={true}
                    onChange={[Function]}
                    type="text"
                    value="1234"
                  >
                    <TextInputBase
                      aria-label={null}
                      className=""
                      id="instanceId"
                      innerRef={null}
                      isDisabled={false}
                      isIconSprite={false}
                      isLeftTruncated={false}
                      isReadOnly={false}
                      isRequired={true}
                      onChange={[Function]}
                      ouiaSafe={true}
                      type="text"
                      validated="default"
                      value="1234"
                    >
                      <input
                        aria-invalid={false}
                        aria-label={null}
                        className="pf-c-form-control"
                        data-ouia-component-id="OUIA-Generated-TextInputBase-16"
                        data-ouia-component-type="PF4/TextInput"
                        data-ouia-safe={true}
                        disabled={false}
                        id="instanceId"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        required={true}
                        type="text"
                        value="1234"
                      />
                    </TextInputBase>
                  </TextInput>
                </div>
              </div>
            </GenerateId>
          </FormGroup>
          <FormGroup
            fieldId="customHeaders"
            label="Event Custom Headers"
            labelIcon={
              <MockedCloudEventFieldLabelIcon
                fieldId="customHeaders"
                helpMessage={
                  <div>
                    <p>
                      Sets the custom headers that will be added into the Cloud Event.
                    </p>
                    <p>
                      Press the
                       
                      <span
                        className="pf-u-link-color"
                      >
                        Add Header
                      </span>
                       button to start adding new headers.
                    </p>
                    <p>
                      Headers with empty Name won't be added into the Cloud Event.
                    </p>
                  </div>
                }
              />
            }
          >
            <GenerateId
              prefix="pf-random-id-"
            >
              <div
                className="pf-c-form__group"
              >
                <div
                  className="pf-c-form__group-label"
                >
                  <label
                    className="pf-c-form__label"
                    htmlFor="customHeaders"
                  >
                    <span
                      className="pf-c-form__label-text"
                    >
                      Event Custom Headers
                    </span>
                  </label>
                   
                  <MockedCloudEventFieldLabelIcon
                    fieldId="customHeaders"
                    helpMessage={
                      <div>
                        <p>
                          Sets the custom headers that will be added into the Cloud Event.
                        </p>
                        <p>
                          Press the
                           
                          <span
                            className="pf-u-link-color"
                          >
                            Add Header
                          </span>
                           button to start adding new headers.
                        </p>
                        <p>
                          Headers with empty Name won't be added into the Cloud Event.
                        </p>
                      </div>
                    }
                  />
                </div>
                <div
                  className="pf-c-form__group-control"
                >
                  <ForwardRef />
                </div>
              </div>
            </GenerateId>
          </FormGroup>
          <FormGroup
            fieldId="eventData"
            helperTextInvalidIcon={
              <ExclamationCircleIcon
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />
            }
            isHelperTextBeforeField={true}
            label="Event Data"
            labelIcon={
              <MockedCloudEventFieldLabelIcon
                fieldId="eventData"
                helpMessage="Sets the content of the cloud event in JSON format."
              />
            }
            validated="default"
          >
            <GenerateId
              prefix="pf-random-id-"
            >
              <div
                className="pf-c-form__group"
              >
                <div
                  className="pf-c-form__group-label"
                >
                  <label
                    className="pf-c-form__label"
                    htmlFor="eventData"
                  >
                    <span
                      className="pf-c-form__label-text"
                    >
                      Event Data
                    </span>
                  </label>
                   
                  <MockedCloudEventFieldLabelIcon
                    fieldId="eventData"
                    helpMessage="Sets the content of the cloud event in JSON format."
                  />
                </div>
                <div
                  className="pf-c-form__group-control"
                >
                  <CodeEditor
                    code=""
                    height="300px"
                    isCopyEnabled={false}
                    isDarkTheme={false}
                    isLanguageLabelVisible={false}
                    isLineNumbersVisible={true}
                    isMinimapVisible={true}
                    isReadOnly={false}
                    onChange={[Function]}
                  >
                    <MockedComponent />
                  </CodeEditor>
                </div>
              </div>
            </GenerateId>
          </FormGroup>
          <ActionListGroup>
            <div
              className="pf-c-action-list__group"
            >
              <Button
                key="triggerCloudEventButton"
                onClick={[Function]}
                variant="primary"
              >
                <ButtonBase
                  innerRef={null}
                  onClick={[Function]}
                  variant="primary"
                >
                  <button
                    aria-disabled={false}
                    aria-label={null}
                    className="pf-c-button pf-m-primary"
                    data-ouia-component-id="OUIA-Generated-Button-primary-4"
                    data-ouia-component-type="PF4/Button"
                    data-ouia-safe={true}
                    disabled={false}
                    onClick={[Function]}
                    role={null}
                    type="button"
                  >
                    Trigger
                  </button>
                </ButtonBase>
              </Button>
              <Button
                key="resetCloudEventFormButton"
                onClick={[Function]}
                variant="secondary"
              >
                <ButtonBase
                  innerRef={null}
                  onClick={[Function]}
                  variant="secondary"
                >
                  <button
                    aria-disabled={false}
                    aria-label={null}
                    className="pf-c-button pf-m-secondary"
                    data-ouia-component-id="OUIA-Generated-Button-secondary-4"
                    data-ouia-component-type="PF4/Button"
                    data-ouia-safe={true}
                    disabled={false}
                    onClick={[Function]}
                    role={null}
                    type="button"
                  >
                    Reset
                  </button>
                </ButtonBase>
              </Button>
            </div>
          </ActionListGroup>
        </form>
      </FormBase>
    </Form>
  </div>
</CloudEventForm>
`;

exports[`CloudEventForm tests Snapshot - send cloud event 1`] = `
<CloudEventForm
  driver={
    Object {
      "triggerCloudEvent": [MockFunction],
    }
  }
>
  <div
    data-ouia-component-type="workflow-form"
    data-ouia-safe={true}
  >
    <Form
      isHorizontal={true}
    >
      <FormBase
        innerRef={null}
        isHorizontal={true}
      >
        <form
          className="pf-c-form pf-m-horizontal"
          noValidate={true}
        >
          <FormGroup
            fieldId="endpoint"
            helperTextInvalidIcon={
              <ExclamationCircleIcon
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />
            }
            isRequired={true}
            label="Event Endpoint"
            labelIcon={
              <MockedCloudEventFieldLabelIcon
                fieldId="endpoint"
                helpMessage="Sets the endpoint and method where the CloudEvent should be triggered."
              />
            }
            validated="default"
          >
            <GenerateId
              prefix="pf-random-id-"
            >
              <div
                className="pf-c-form__group"
              >
                <div
                  className="pf-c-form__group-label"
                >
                  <label
                    className="pf-c-form__label"
                    htmlFor="endpoint"
                  >
                    <span
                      className="pf-c-form__label-text"
                    >
                      Event Endpoint
                    </span>
                    <span
                      aria-hidden="true"
                      className="pf-c-form__label-required"
                    >
                       
                      *
                    </span>
                  </label>
                   
                  <MockedCloudEventFieldLabelIcon
                    fieldId="endpoint"
                    helpMessage="Sets the endpoint and method where the CloudEvent should be triggered."
                  />
                </div>
                <div
                  className="pf-c-form__group-control"
                >
                  <InputGroup>
                    <div
                      className="pf-c-input-group"
                    >
                      <Select
                        aria-describedby=""
                        aria-invalid={false}
                        aria-label=""
                        aria-labelledby=""
                        chipGroupComponent={null}
                        className=""
                        clearSelectionsAriaLabel="Clear all"
                        createText="Create"
                        customBadgeText={null}
                        customContent={null}
                        direction="down"
                        favorites={Array []}
                        favoritesLabel="Favorites"
                        hasInlineFilter={false}
                        hasPlaceholderStyle={false}
                        id="method"
                        inlineFilterPlaceholderText={null}
                        inputAutoComplete="off"
                        inputIdPrefix=""
                        isCreatable={false}
                        isCreateOptionOnTop={false}
                        isCreateSelectOptionObject={false}
                        isDisabled={false}
                        isFlipEnabled={true}
                        isGrouped={false}
                        isInputFilterPersisted={false}
                        isInputValuePersisted={false}
                        isOpen={false}
                        isPlain={false}
                        key=".0"
                        menuAppendTo="inline"
                        noResultsFoundText="No results found"
                        onClear={[Function]}
                        onCreateOption={[Function]}
                        onFilter={null}
                        onSelect={[Function]}
                        onToggle={[Function]}
                        onTypeaheadInputChanged={null}
                        ouiaSafe={true}
                        placeholderText=""
                        position="left"
                        removeFindDomNode={false}
                        removeSelectionAriaLabel="Remove"
                        selections="POST"
                        shouldResetOnSelect={true}
                        toggleAriaLabel="Options menu"
                        toggleIcon={null}
                        toggleId={null}
                        toggleIndicator={null}
                        typeAheadAriaDescribedby=""
                        typeAheadAriaLabel=""
                        validated="default"
                        variant="single"
                        width="100px"
                        zIndex={9999}
                      >
                        <GenerateId
                          prefix="pf-random-id-"
                        >
                          <div
                            className="pf-c-select"
                            data-ouia-component-id="OUIA-Generated-Select-single-3"
                            data-ouia-component-type="PF4/Select"
                            data-ouia-safe={true}
                            style={
                              Object {
                                "width": "100px",
                              }
                            }
                          >
                            <ForwardRef
                              aria-label="Options menu"
                              aria-labelledby=" pf-select-toggle-id-3"
                              handleTypeaheadKeys={[Function]}
                              hasClearButton={false}
                              hasFooter={false}
                              hasPlaceholderStyle={false}
                              id="pf-select-toggle-id-3"
                              isDisabled={false}
                              isOpen={false}
                              isPlain={false}
                              menuRef={
                                Object {
                                  "current": null,
                                }
                              }
                              moveFocusToLastMenuItem={[Function]}
                              onClickTypeaheadToggleButton={[Function]}
                              onClose={[Function]}
                              onEnter={[Function]}
                              onToggle={[Function]}
                              parentRef={
                                Object {
                                  "current": <div
                                    class="pf-c-select"
                                    data-ouia-component-id="OUIA-Generated-Select-single-3"
                                    data-ouia-component-type="PF4/Select"
                                    data-ouia-safe="true"
                                    style="width: 100px;"
                                  >
                                    <button
                                      aria-expanded="false"
                                      aria-haspopup="listbox"
                                      aria-label="Options menu"
                                      aria-labelledby=" pf-select-toggle-id-3"
                                      class="pf-c-select__toggle"
                                      id="pf-select-toggle-id-3"
                                      type="button"
                                    >
                                      <div
                                        class="pf-c-select__toggle-wrapper"
                                      >
                                        <span
                                          class="pf-c-select__toggle-text"
                                        >
                                          POST
                                        </span>
                                      </div>
                                      <span
                                        class="pf-c-select__toggle-arrow"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          fill="currentColor"
                                          height="1em"
                                          role="img"
                                          style="vertical-align: -0.125em;"
                                          viewBox="0 0 320 512"
                                          width="1em"
                                        >
                                          <path
                                            d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                          />
                                        </svg>
                                      </span>
                                    </button>
                                  </div>,
                                }
                              }
                              toggleIndicator={null}
                              variant="single"
                            >
                              <SelectToggle
                                aria-label="Options menu"
                                aria-labelledby=" pf-select-toggle-id-3"
                                className=""
                                handleTypeaheadKeys={[Function]}
                                hasClearButton={false}
                                hasFooter={false}
                                hasPlaceholderStyle={false}
                                id="pf-select-toggle-id-3"
                                innerRef={null}
                                isActive={false}
                                isDisabled={false}
                                isOpen={false}
                                isPlain={false}
                                menuRef={
                                  Object {
                                    "current": null,
                                  }
                                }
                                moveFocusToLastMenuItem={[Function]}
                                onClickTypeaheadToggleButton={[Function]}
                                onClose={[Function]}
                                onEnter={[Function]}
                                onToggle={[Function]}
                                parentRef={
                                  Object {
                                    "current": <div
                                      class="pf-c-select"
                                      data-ouia-component-id="OUIA-Generated-Select-single-3"
                                      data-ouia-component-type="PF4/Select"
                                      data-ouia-safe="true"
                                      style="width: 100px;"
                                    >
                                      <button
                                        aria-expanded="false"
                                        aria-haspopup="listbox"
                                        aria-label="Options menu"
                                        aria-labelledby=" pf-select-toggle-id-3"
                                        class="pf-c-select__toggle"
                                        id="pf-select-toggle-id-3"
                                        type="button"
                                      >
                                        <div
                                          class="pf-c-select__toggle-wrapper"
                                        >
                                          <span
                                            class="pf-c-select__toggle-text"
                                          >
                                            POST
                                          </span>
                                        </div>
                                        <span
                                          class="pf-c-select__toggle-arrow"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style="vertical-align: -0.125em;"
                                            viewBox="0 0 320 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                            />
                                          </svg>
                                        </span>
                                      </button>
                                    </div>,
                                  }
                                }
                                toggleIndicator={null}
                                type="button"
                                variant="single"
                              >
                                <button
                                  aria-expanded={false}
                                  aria-haspopup="listbox"
                                  aria-label="Options menu"
                                  aria-labelledby=" pf-select-toggle-id-3"
                                  className="pf-c-select__toggle"
                                  disabled={false}
                                  id="pf-select-toggle-id-3"
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  type="button"
                                >
                                  <div
                                    className="pf-c-select__toggle-wrapper"
                                  >
                                    <span
                                      className="pf-c-select__toggle-text"
                                    >
                                      POST
                                    </span>
                                  </div>
                                  <span
                                    className="pf-c-select__toggle-arrow"
                                  >
                                    <CaretDownIcon
                                      color="currentColor"
                                      noVerticalAlign={false}
                                      size="sm"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        aria-labelledby={null}
                                        fill="currentColor"
                                        height="1em"
                                        role="img"
                                        style={
                                          Object {
                                            "verticalAlign": "-0.125em",
                                          }
                                        }
                                        viewBox="0 0 320 512"
                                        width="1em"
                                      >
                                        <path
                                          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                        />
                                      </svg>
                                    </CaretDownIcon>
                                  </span>
                                </button>
                              </SelectToggle>
                            </ForwardRef>
                          </div>
                        </GenerateId>
                      </Select>
                      <TextInput
                        aria-describedby="method"
                        id="endpoint"
                        isRequired={true}
                        key=".1"
                        onChange={[Function]}
                        validated="default"
                        value="/"
                      >
                        <TextInputBase
                          aria-describedby="method"
                          aria-label={null}
                          className=""
                          id="endpoint"
                          innerRef={null}
                          isDisabled={false}
                          isIconSprite={false}
                          isLeftTruncated={false}
                          isReadOnly={false}
                          isRequired={true}
                          onChange={[Function]}
                          ouiaSafe={true}
                          type="text"
                          validated="default"
                          value="/"
                        >
                          <input
                            aria-describedby="method"
                            aria-invalid={false}
                            aria-label={null}
                            className="pf-c-form-control"
                            data-ouia-component-id="OUIA-Generated-TextInputBase-9"
                            data-ouia-component-type="PF4/TextInput"
                            data-ouia-safe={true}
                            disabled={false}
                            id="endpoint"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            required={true}
                            type="text"
                            value="/"
                          />
                        </TextInputBase>
                      </TextInput>
                    </div>
                  </InputGroup>
                </div>
              </div>
            </GenerateId>
          </FormGroup>
          <FormGroup
            fieldId="eventType"
            helperTextInvalidIcon={
              <ExclamationCircleIcon
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />
            }
            isRequired={true}
            label="Event Type"
            labelIcon={
              <MockedCloudEventFieldLabelIcon
                cloudEventHeader="type"
                fieldId="eventType"
                helpMessage="Sets the type of the cloud event."
              />
            }
            validated="default"
          >
            <GenerateId
              prefix="pf-random-id-"
            >
              <div
                className="pf-c-form__group"
              >
                <div
                  className="pf-c-form__group-label"
                >
                  <label
                    className="pf-c-form__label"
                    htmlFor="eventType"
                  >
                    <span
                      className="pf-c-form__label-text"
                    >
                      Event Type
                    </span>
                    <span
                      aria-hidden="true"
                      className="pf-c-form__label-required"
                    >
                       
                      *
                    </span>
                  </label>
                   
                  <MockedCloudEventFieldLabelIcon
                    cloudEventHeader="type"
                    fieldId="eventType"
                    helpMessage="Sets the type of the cloud event."
                  />
                </div>
                <div
                  className="pf-c-form__group-control"
                >
                  <TextInput
                    id="eventType"
                    isRequired={true}
                    onChange={[Function]}
                    type="text"
                    validated="default"
                    value=""
                  >
                    <TextInputBase
                      aria-label={null}
                      className=""
                      id="eventType"
                      innerRef={null}
                      isDisabled={false}
                      isIconSprite={false}
                      isLeftTruncated={false}
                      isReadOnly={false}
                      isRequired={true}
                      onChange={[Function]}
                      ouiaSafe={true}
                      type="text"
                      validated="default"
                      value=""
                    >
                      <input
                        aria-invalid={false}
                        aria-label={null}
                        className="pf-c-form-control"
                        data-ouia-component-id="OUIA-Generated-TextInputBase-10"
                        data-ouia-component-type="PF4/TextInput"
                        data-ouia-safe={true}
                        disabled={false}
                        id="eventType"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        required={true}
                        type="text"
                        value=""
                      />
                    </TextInputBase>
                  </TextInput>
                </div>
              </div>
            </GenerateId>
          </FormGroup>
          <FormGroup
            fieldId="eventSource"
            label="Event Source"
            labelIcon={
              <MockedCloudEventFieldLabelIcon
                cloudEventHeader="source"
                fieldId="eventSource"
                helpMessage="Sets the source of the cloud event."
              />
            }
          >
            <GenerateId
              prefix="pf-random-id-"
            >
              <div
                className="pf-c-form__group"
              >
                <div
                  className="pf-c-form__group-label"
                >
                  <label
                    className="pf-c-form__label"
                    htmlFor="eventSource"
                  >
                    <span
                      className="pf-c-form__label-text"
                    >
                      Event Source
                    </span>
                  </label>
                   
                  <MockedCloudEventFieldLabelIcon
                    cloudEventHeader="source"
                    fieldId="eventSource"
                    helpMessage="Sets the source of the cloud event."
                  />
                </div>
                <div
                  className="pf-c-form__group-control"
                >
                  <TextInput
                    id="eventSource"
                    isRequired={true}
                    onChange={[Function]}
                    type="text"
                    value="/from/form"
                  >
                    <TextInputBase
                      aria-label={null}
                      className=""
                      id="eventSource"
                      innerRef={null}
                      isDisabled={false}
                      isIconSprite={false}
                      isLeftTruncated={false}
                      isReadOnly={false}
                      isRequired={true}
                      onChange={[Function]}
                      ouiaSafe={true}
                      type="text"
                      validated="default"
                      value="/from/form"
                    >
                      <input
                        aria-invalid={false}
                        aria-label={null}
                        className="pf-c-form-control"
                        data-ouia-component-id="OUIA-Generated-TextInputBase-11"
                        data-ouia-component-type="PF4/TextInput"
                        data-ouia-safe={true}
                        disabled={false}
                        id="eventSource"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        required={true}
                        type="text"
                        value="/from/form"
                      />
                    </TextInputBase>
                  </TextInput>
                </div>
              </div>
            </GenerateId>
          </FormGroup>
          <FormGroup
            fieldId="instanceId"
            label="Instance Id"
            labelIcon={
              <MockedCloudEventFieldLabelIcon
                cloudEventHeader="kogitoprocrefid"
                fieldId="instanceId"
                helpMessage="Sets the Service Workflow instance Id the cloud event will interact with."
              />
            }
          >
            <GenerateId
              prefix="pf-random-id-"
            >
              <div
                className="pf-c-form__group"
              >
                <div
                  className="pf-c-form__group-label"
                >
                  <label
                    className="pf-c-form__label"
                    htmlFor="instanceId"
                  >
                    <span
                      className="pf-c-form__label-text"
                    >
                      Instance Id
                    </span>
                  </label>
                   
                  <MockedCloudEventFieldLabelIcon
                    cloudEventHeader="kogitoprocrefid"
                    fieldId="instanceId"
                    helpMessage="Sets the Service Workflow instance Id the cloud event will interact with."
                  />
                </div>
                <div
                  className="pf-c-form__group-control"
                >
                  <TextInput
                    id="instanceId"
                    isRequired={true}
                    onChange={[Function]}
                    type="text"
                    value=""
                  >
                    <TextInputBase
                      aria-label={null}
                      className=""
                      id="instanceId"
                      innerRef={null}
                      isDisabled={false}
                      isIconSprite={false}
                      isLeftTruncated={false}
                      isReadOnly={false}
                      isRequired={true}
                      onChange={[Function]}
                      ouiaSafe={true}
                      type="text"
                      validated="default"
                      value=""
                    >
                      <input
                        aria-invalid={false}
                        aria-label={null}
                        className="pf-c-form-control"
                        data-ouia-component-id="OUIA-Generated-TextInputBase-12"
                        data-ouia-component-type="PF4/TextInput"
                        data-ouia-safe={true}
                        disabled={false}
                        id="instanceId"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        required={true}
                        type="text"
                        value=""
                      />
                    </TextInputBase>
                  </TextInput>
                </div>
              </div>
            </GenerateId>
          </FormGroup>
          <FormGroup
            fieldId="customHeaders"
            label="Event Custom Headers"
            labelIcon={
              <MockedCloudEventFieldLabelIcon
                fieldId="customHeaders"
                helpMessage={
                  <div>
                    <p>
                      Sets the custom headers that will be added into the Cloud Event.
                    </p>
                    <p>
                      Press the
                       
                      <span
                        className="pf-u-link-color"
                      >
                        Add Header
                      </span>
                       button to start adding new headers.
                    </p>
                    <p>
                      Headers with empty Name won't be added into the Cloud Event.
                    </p>
                  </div>
                }
              />
            }
          >
            <GenerateId
              prefix="pf-random-id-"
            >
              <div
                className="pf-c-form__group"
              >
                <div
                  className="pf-c-form__group-label"
                >
                  <label
                    className="pf-c-form__label"
                    htmlFor="customHeaders"
                  >
                    <span
                      className="pf-c-form__label-text"
                    >
                      Event Custom Headers
                    </span>
                  </label>
                   
                  <MockedCloudEventFieldLabelIcon
                    fieldId="customHeaders"
                    helpMessage={
                      <div>
                        <p>
                          Sets the custom headers that will be added into the Cloud Event.
                        </p>
                        <p>
                          Press the
                           
                          <span
                            className="pf-u-link-color"
                          >
                            Add Header
                          </span>
                           button to start adding new headers.
                        </p>
                        <p>
                          Headers with empty Name won't be added into the Cloud Event.
                        </p>
                      </div>
                    }
                  />
                </div>
                <div
                  className="pf-c-form__group-control"
                >
                  <ForwardRef />
                </div>
              </div>
            </GenerateId>
          </FormGroup>
          <FormGroup
            fieldId="eventData"
            helperTextInvalidIcon={
              <ExclamationCircleIcon
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />
            }
            isHelperTextBeforeField={true}
            label="Event Data"
            labelIcon={
              <MockedCloudEventFieldLabelIcon
                fieldId="eventData"
                helpMessage="Sets the content of the cloud event in JSON format."
              />
            }
            validated="default"
          >
            <GenerateId
              prefix="pf-random-id-"
            >
              <div
                className="pf-c-form__group"
              >
                <div
                  className="pf-c-form__group-label"
                >
                  <label
                    className="pf-c-form__label"
                    htmlFor="eventData"
                  >
                    <span
                      className="pf-c-form__label-text"
                    >
                      Event Data
                    </span>
                  </label>
                   
                  <MockedCloudEventFieldLabelIcon
                    fieldId="eventData"
                    helpMessage="Sets the content of the cloud event in JSON format."
                  />
                </div>
                <div
                  className="pf-c-form__group-control"
                >
                  <CodeEditor
                    code=""
                    height="300px"
                    isCopyEnabled={false}
                    isDarkTheme={false}
                    isLanguageLabelVisible={false}
                    isLineNumbersVisible={true}
                    isMinimapVisible={true}
                    isReadOnly={false}
                    onChange={[Function]}
                  >
                    <MockedComponent />
                  </CodeEditor>
                </div>
              </div>
            </GenerateId>
          </FormGroup>
          <ActionListGroup>
            <div
              className="pf-c-action-list__group"
            >
              <Button
                key="triggerCloudEventButton"
                onClick={[Function]}
                variant="primary"
              >
                <ButtonBase
                  innerRef={null}
                  onClick={[Function]}
                  variant="primary"
                >
                  <button
                    aria-disabled={false}
                    aria-label={null}
                    className="pf-c-button pf-m-primary"
                    data-ouia-component-id="OUIA-Generated-Button-primary-3"
                    data-ouia-component-type="PF4/Button"
                    data-ouia-safe={true}
                    disabled={false}
                    onClick={[Function]}
                    role={null}
                    type="button"
                  >
                    Trigger
                  </button>
                </ButtonBase>
              </Button>
              <Button
                key="resetCloudEventFormButton"
                onClick={[Function]}
                variant="secondary"
              >
                <ButtonBase
                  innerRef={null}
                  onClick={[Function]}
                  variant="secondary"
                >
                  <button
                    aria-disabled={false}
                    aria-label={null}
                    className="pf-c-button pf-m-secondary"
                    data-ouia-component-id="OUIA-Generated-Button-secondary-3"
                    data-ouia-component-type="PF4/Button"
                    data-ouia-safe={true}
                    disabled={false}
                    onClick={[Function]}
                    role={null}
                    type="button"
                  >
                    Reset
                  </button>
                </ButtonBase>
              </Button>
            </div>
          </ActionListGroup>
        </form>
      </FormBase>
    </Form>
  </div>
</CloudEventForm>
`;
