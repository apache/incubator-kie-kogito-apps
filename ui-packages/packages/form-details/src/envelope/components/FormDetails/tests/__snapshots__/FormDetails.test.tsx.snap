// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`form details tests render form details - config 1`] = `
<FormDetails
  driver={MockedFormDetailsDriver {}}
  formData={
    Object {
      "lastModified": 2020-07-11T18:30:00.000Z,
      "name": "form1",
      "type": "html",
    }
  }
  isEnvelopeConnectedToChannel={true}
  targetOrigin="http://localhost:9000"
>
  <div
    data-ouia-component-type="form-details"
    data-ouia-safe={true}
  >
    <Drawer
      isStatic={true}
    >
      <div
        className="pf-c-drawer pf-m-static"
      >
        <DrawerContent
          panelContent={
            <DrawerPanelContent
              defaultSize="800px"
              isResizable={true}
              onResize={[Function]}
            >
              <DrawerHead
                style={
                  Object {
                    "height": "100%",
                  }
                }
              >
                <span>
                  <MockedFormDisplayerContainer
                    formContent={
                      Object {
                        "configuration": Object {
                          "resources": Object {
                            "scripts": Object {},
                            "styles": Object {},
                          },
                          "schema": "{\\"$schema\\":\\"http://json-schema.org/draft-07/schema#\\",\\"type\\":\\"object\\",\\"properties\\":{\\"approve\\":{\\"type\\":\\"boolean\\",\\"output\\":true},\\"candidate\\":{\\"type\\":\\"object\\",\\"properties\\":{\\"email\\":{\\"type\\":\\"string\\"},\\"name\\":{\\"type\\":\\"string\\"},\\"salary\\":{\\"type\\":\\"integer\\"},\\"skills\\":{\\"type\\":\\"string\\"}},\\"input\\":true}}}",
                        },
                        "formInfo": Object {
                          "lastModified": 2020-07-11T18:30:00.000Z,
                          "name": "form1",
                          "type": "HTML",
                        },
                        "source": "html source code",
                      }
                    }
                    targetOrigin="http://localhost:9000"
                  />
                </span>
              </DrawerHead>
            </DrawerPanelContent>
          }
        >
          <DrawerMain>
            <div
              className="pf-c-drawer__main"
            >
              <div
                className="pf-c-drawer__content"
              >
                <Tabs
                  activeKey={1}
                  component="div"
                  hasBorderBottom={true}
                  isBox={false}
                  isFilled={true}
                  isSecondary={false}
                  isVertical={false}
                  leftScrollAriaLabel="Scroll left"
                  mountOnEnter={false}
                  onSelect={[Function]}
                  onToggle={[Function]}
                  ouiaSafe={true}
                  rightScrollAriaLabel="Scroll right"
                  unmountOnExit={false}
                  variant="default"
                >
                  <div
                    className="pf-c-tabs pf-m-fill"
                    data-ouia-component-id="OUIA-Generated-Tabs-2"
                    data-ouia-component-type="PF4/Tabs"
                    data-ouia-safe={true}
                    onSelect={[Function]}
                  >
                    <ul
                      className="pf-c-tabs__list"
                      onScroll={[Function]}
                      role="tablist"
                    >
                      <Tab
                        aria-labelledby="source-tab"
                        eventKey={0}
                        id="source-tab"
                        key=".0"
                        title={
                          <TabTitleText>
                            Source
                          </TabTitleText>
                        }
                      >
                        <TabBase
                          aria-labelledby="source-tab"
                          eventKey={0}
                          id="source-tab"
                          innerRef={null}
                          title={
                            <TabTitleText>
                              Source
                            </TabTitleText>
                          }
                        >
                          <li
                            className="pf-c-tabs__item"
                            role="presentation"
                          >
                            <TabButton
                              aria-controls="pf-tab-section-0-source-tab"
                              aria-labelledby="source-tab"
                              aria-selected={false}
                              className="pf-c-tabs__link"
                              id="pf-tab-0-source-tab"
                              onClick={[Function]}
                              parentInnerRef={null}
                              role="tab"
                            >
                              <button
                                aria-controls="pf-tab-section-0-source-tab"
                                aria-labelledby="source-tab"
                                aria-selected={false}
                                className="pf-c-tabs__link"
                                data-ouia-component-type="PF4/TabButton"
                                data-ouia-safe={true}
                                id="pf-tab-0-source-tab"
                                onClick={[Function]}
                                role="tab"
                                type="button"
                              >
                                <TabTitleText>
                                  <span
                                    className="pf-c-tabs__item-text"
                                  >
                                    Source
                                  </span>
                                </TabTitleText>
                              </button>
                            </TabButton>
                          </li>
                        </TabBase>
                      </Tab>
                      <Tab
                        aria-labelledby="config-tab"
                        eventKey={1}
                        id="config-tab"
                        key=".1"
                        title={
                          <TabTitleText>
                            Connections
                          </TabTitleText>
                        }
                      >
                        <TabBase
                          aria-labelledby="config-tab"
                          eventKey={1}
                          id="config-tab"
                          innerRef={null}
                          title={
                            <TabTitleText>
                              Connections
                            </TabTitleText>
                          }
                        >
                          <li
                            className="pf-c-tabs__item pf-m-current"
                            role="presentation"
                          >
                            <TabButton
                              aria-controls="pf-tab-section-1-config-tab"
                              aria-labelledby="config-tab"
                              aria-selected={true}
                              className="pf-c-tabs__link"
                              id="pf-tab-1-config-tab"
                              onClick={[Function]}
                              parentInnerRef={null}
                              role="tab"
                            >
                              <button
                                aria-controls="pf-tab-section-1-config-tab"
                                aria-labelledby="config-tab"
                                aria-selected={true}
                                className="pf-c-tabs__link"
                                data-ouia-component-type="PF4/TabButton"
                                data-ouia-safe={true}
                                id="pf-tab-1-config-tab"
                                onClick={[Function]}
                                role="tab"
                                type="button"
                              >
                                <TabTitleText>
                                  <span
                                    className="pf-c-tabs__item-text"
                                  >
                                    Connections
                                  </span>
                                </TabTitleText>
                              </button>
                            </TabButton>
                          </li>
                        </TabBase>
                      </Tab>
                    </ul>
                  </div>
                  <ForwardRef
                    activeKey={1}
                    child={
                      <Tab
                        aria-labelledby="source-tab"
                        eventKey={0}
                        id="source-tab"
                        title={
                          <TabTitleText>
                            Source
                          </TabTitleText>
                        }
                      >
                        <DrawerContentBody
                          style={
                            Object {
                              "background": "var(--pf-c-page__main-section--BackgroundColor)",
                              "padding": "0px",
                            }
                          }
                        />
                      </Tab>
                    }
                    id="source-tab"
                    key="0"
                  >
                    <TabContentBase
                      activeKey={1}
                      child={
                        <Tab
                          aria-labelledby="source-tab"
                          eventKey={0}
                          id="source-tab"
                          title={
                            <TabTitleText>
                              Source
                            </TabTitleText>
                          }
                        >
                          <DrawerContentBody
                            style={
                              Object {
                                "background": "var(--pf-c-page__main-section--BackgroundColor)",
                                "padding": "0px",
                              }
                            }
                          />
                        </Tab>
                      }
                      id="source-tab"
                      innerRef={null}
                    >
                      <section
                        aria-labelledby="pf-tab-0-source-tab"
                        className="pf-c-tab-content"
                        data-ouia-component-type="PF4/TabContent"
                        data-ouia-safe={true}
                        hidden={true}
                        id="pf-tab-section-0-source-tab"
                        role="tabpanel"
                        tabIndex={0}
                      >
                        <DrawerContentBody
                          style={
                            Object {
                              "background": "var(--pf-c-page__main-section--BackgroundColor)",
                              "padding": "0px",
                            }
                          }
                        >
                          <div
                            className="pf-c-drawer__body"
                            style={
                              Object {
                                "background": "var(--pf-c-page__main-section--BackgroundColor)",
                                "padding": "0px",
                              }
                            }
                          />
                        </DrawerContentBody>
                      </section>
                    </TabContentBase>
                  </ForwardRef>
                  <ForwardRef
                    activeKey={1}
                    child={
                      <Tab
                        aria-labelledby="config-tab"
                        eventKey={1}
                        id="config-tab"
                        title={
                          <TabTitleText>
                            Connections
                          </TabTitleText>
                        }
                      >
                        <DrawerContentBody
                          style={
                            Object {
                              "background": "var(--pf-c-page__main-section--BackgroundColor)",
                              "padding": "0px",
                            }
                          }
                        >
                          <ForwardRef
                            code="{
  \\"scripts\\": {},
  \\"styles\\": {}
}"
                            formContent={
                              Object {
                                "configuration": Object {
                                  "resources": Object {
                                    "scripts": Object {},
                                    "styles": Object {},
                                  },
                                  "schema": "{\\"$schema\\":\\"http://json-schema.org/draft-07/schema#\\",\\"type\\":\\"object\\",\\"properties\\":{\\"approve\\":{\\"type\\":\\"boolean\\",\\"output\\":true},\\"candidate\\":{\\"type\\":\\"object\\",\\"properties\\":{\\"email\\":{\\"type\\":\\"string\\"},\\"name\\":{\\"type\\":\\"string\\"},\\"salary\\":{\\"type\\":\\"integer\\"},\\"skills\\":{\\"type\\":\\"string\\"}},\\"input\\":true}}}",
                                },
                                "formInfo": Object {
                                  "lastModified": 2020-07-11T18:30:00.000Z,
                                  "name": "form1",
                                  "type": "HTML",
                                },
                                "source": "html source code",
                              }
                            }
                            isConfig={true}
                            saveFormContent={[Function]}
                            setFormContent={[Function]}
                          />
                        </DrawerContentBody>
                      </Tab>
                    }
                    id="config-tab"
                    key="1"
                  >
                    <TabContentBase
                      activeKey={1}
                      child={
                        <Tab
                          aria-labelledby="config-tab"
                          eventKey={1}
                          id="config-tab"
                          title={
                            <TabTitleText>
                              Connections
                            </TabTitleText>
                          }
                        >
                          <DrawerContentBody
                            style={
                              Object {
                                "background": "var(--pf-c-page__main-section--BackgroundColor)",
                                "padding": "0px",
                              }
                            }
                          >
                            <ForwardRef
                              code="{
  \\"scripts\\": {},
  \\"styles\\": {}
}"
                              formContent={
                                Object {
                                  "configuration": Object {
                                    "resources": Object {
                                      "scripts": Object {},
                                      "styles": Object {},
                                    },
                                    "schema": "{\\"$schema\\":\\"http://json-schema.org/draft-07/schema#\\",\\"type\\":\\"object\\",\\"properties\\":{\\"approve\\":{\\"type\\":\\"boolean\\",\\"output\\":true},\\"candidate\\":{\\"type\\":\\"object\\",\\"properties\\":{\\"email\\":{\\"type\\":\\"string\\"},\\"name\\":{\\"type\\":\\"string\\"},\\"salary\\":{\\"type\\":\\"integer\\"},\\"skills\\":{\\"type\\":\\"string\\"}},\\"input\\":true}}}",
                                  },
                                  "formInfo": Object {
                                    "lastModified": 2020-07-11T18:30:00.000Z,
                                    "name": "form1",
                                    "type": "HTML",
                                  },
                                  "source": "html source code",
                                }
                              }
                              isConfig={true}
                              saveFormContent={[Function]}
                              setFormContent={[Function]}
                            />
                          </DrawerContentBody>
                        </Tab>
                      }
                      id="config-tab"
                      innerRef={null}
                    >
                      <section
                        aria-labelledby="pf-tab-1-config-tab"
                        className="pf-c-tab-content"
                        data-ouia-component-type="PF4/TabContent"
                        data-ouia-safe={true}
                        hidden={false}
                        id="pf-tab-section-1-config-tab"
                        role="tabpanel"
                        tabIndex={0}
                      >
                        <DrawerContentBody
                          style={
                            Object {
                              "background": "var(--pf-c-page__main-section--BackgroundColor)",
                              "padding": "0px",
                            }
                          }
                        >
                          <div
                            className="pf-c-drawer__body"
                            style={
                              Object {
                                "background": "var(--pf-c-page__main-section--BackgroundColor)",
                                "padding": "0px",
                              }
                            }
                          >
                            <ForwardRef
                              code="{
  \\"scripts\\": {},
  \\"styles\\": {}
}"
                              formContent={
                                Object {
                                  "configuration": Object {
                                    "resources": Object {
                                      "scripts": Object {},
                                      "styles": Object {},
                                    },
                                    "schema": "{\\"$schema\\":\\"http://json-schema.org/draft-07/schema#\\",\\"type\\":\\"object\\",\\"properties\\":{\\"approve\\":{\\"type\\":\\"boolean\\",\\"output\\":true},\\"candidate\\":{\\"type\\":\\"object\\",\\"properties\\":{\\"email\\":{\\"type\\":\\"string\\"},\\"name\\":{\\"type\\":\\"string\\"},\\"salary\\":{\\"type\\":\\"integer\\"},\\"skills\\":{\\"type\\":\\"string\\"}},\\"input\\":true}}}",
                                  },
                                  "formInfo": Object {
                                    "lastModified": 2020-07-11T18:30:00.000Z,
                                    "name": "form1",
                                    "type": "HTML",
                                  },
                                  "source": "html source code",
                                }
                              }
                              isConfig={true}
                              saveFormContent={[Function]}
                              setFormContent={[Function]}
                            />
                          </div>
                        </DrawerContentBody>
                      </section>
                    </TabContentBase>
                  </ForwardRef>
                </Tabs>
              </div>
              <DrawerPanelContent
                defaultSize="800px"
                isResizable={true}
                onResize={[Function]}
              >
                <GenerateId
                  prefix="pf-drawer-panel-"
                >
                  <div
                    className="pf-c-drawer__panel pf-m-resizable"
                    hidden={false}
                    id="pf-drawer-panel-1"
                    onTransitionEnd={[Function]}
                    style={
                      Object {
                        "--pf-c-drawer__panel--md--FlexBasis": "800px",
                      }
                    }
                  >
                    <div
                      aria-controls="pf-drawer-panel-1"
                      aria-label="Resize"
                      aria-orientation="vertical"
                      aria-valuemax={100}
                      aria-valuemin={0}
                      aria-valuenow={0}
                      className="pf-c-drawer__splitter pf-m-vertical"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      onTouchStart={[Function]}
                      role="separator"
                      tabIndex={0}
                    >
                      <div
                        aria-hidden={true}
                        className="pf-c-drawer__splitter-handle"
                      />
                    </div>
                    <div
                      className="pf-c-drawer__panel-main"
                    >
                      <DrawerHead
                        style={
                          Object {
                            "height": "100%",
                          }
                        }
                      >
                        <DrawerPanelBody
                          hasNoPadding={false}
                        >
                          <div
                            className="pf-c-drawer__body"
                          >
                            <div
                              className="pf-c-drawer__head"
                              style={
                                Object {
                                  "height": "100%",
                                }
                              }
                            >
                              <span>
                                <MockedFormDisplayerContainer
                                  formContent={
                                    Object {
                                      "configuration": Object {
                                        "resources": Object {
                                          "scripts": Object {},
                                          "styles": Object {},
                                        },
                                        "schema": "{\\"$schema\\":\\"http://json-schema.org/draft-07/schema#\\",\\"type\\":\\"object\\",\\"properties\\":{\\"approve\\":{\\"type\\":\\"boolean\\",\\"output\\":true},\\"candidate\\":{\\"type\\":\\"object\\",\\"properties\\":{\\"email\\":{\\"type\\":\\"string\\"},\\"name\\":{\\"type\\":\\"string\\"},\\"salary\\":{\\"type\\":\\"integer\\"},\\"skills\\":{\\"type\\":\\"string\\"}},\\"input\\":true}}}",
                                      },
                                      "formInfo": Object {
                                        "lastModified": 2020-07-11T18:30:00.000Z,
                                        "name": "form1",
                                        "type": "HTML",
                                      },
                                      "source": "html source code",
                                    }
                                  }
                                  targetOrigin="http://localhost:9000"
                                />
                              </span>
                            </div>
                          </div>
                        </DrawerPanelBody>
                      </DrawerHead>
                    </div>
                  </div>
                </GenerateId>
              </DrawerPanelContent>
            </div>
          </DrawerMain>
        </DrawerContent>
      </div>
    </Drawer>
  </div>
</FormDetails>
`;

exports[`form details tests render form details - source 1`] = `
<FormDetails
  driver={MockedFormDetailsDriver {}}
  formData={
    Object {
      "lastModified": 2020-07-11T18:30:00.000Z,
      "name": "form1",
      "type": "HTML",
    }
  }
  isEnvelopeConnectedToChannel={true}
  targetOrigin="http://localhost:9000"
>
  <div
    data-ouia-component-type="form-details"
    data-ouia-safe={true}
  >
    <Drawer
      isStatic={true}
    >
      <div
        className="pf-c-drawer pf-m-static"
      >
        <DrawerContent
          panelContent={
            <DrawerPanelContent
              defaultSize="800px"
              isResizable={true}
              onResize={[Function]}
            >
              <DrawerHead
                style={
                  Object {
                    "height": "100%",
                  }
                }
              >
                <span>
                  <MockedFormDisplayerContainer
                    formContent={
                      Object {
                        "configuration": Object {
                          "resources": Object {
                            "scripts": Object {},
                            "styles": Object {},
                          },
                          "schema": "{\\"$schema\\":\\"http://json-schema.org/draft-07/schema#\\",\\"type\\":\\"object\\",\\"properties\\":{\\"approve\\":{\\"type\\":\\"boolean\\",\\"output\\":true},\\"candidate\\":{\\"type\\":\\"object\\",\\"properties\\":{\\"email\\":{\\"type\\":\\"string\\"},\\"name\\":{\\"type\\":\\"string\\"},\\"salary\\":{\\"type\\":\\"integer\\"},\\"skills\\":{\\"type\\":\\"string\\"}},\\"input\\":true}}}",
                        },
                        "formInfo": Object {
                          "lastModified": 2020-07-11T18:30:00.000Z,
                          "name": "form1",
                          "type": "HTML",
                        },
                        "source": "html source code",
                      }
                    }
                    targetOrigin="http://localhost:9000"
                  />
                </span>
              </DrawerHead>
            </DrawerPanelContent>
          }
        >
          <DrawerMain>
            <div
              className="pf-c-drawer__main"
            >
              <div
                className="pf-c-drawer__content"
              >
                <Tabs
                  activeKey={0}
                  component="div"
                  hasBorderBottom={true}
                  isBox={false}
                  isFilled={true}
                  isSecondary={false}
                  isVertical={false}
                  leftScrollAriaLabel="Scroll left"
                  mountOnEnter={false}
                  onSelect={[Function]}
                  onToggle={[Function]}
                  ouiaSafe={true}
                  rightScrollAriaLabel="Scroll right"
                  unmountOnExit={false}
                  variant="default"
                >
                  <div
                    className="pf-c-tabs pf-m-fill"
                    data-ouia-component-id="OUIA-Generated-Tabs-1"
                    data-ouia-component-type="PF4/Tabs"
                    data-ouia-safe={true}
                    onSelect={[Function]}
                  >
                    <ul
                      className="pf-c-tabs__list"
                      onScroll={[Function]}
                      role="tablist"
                    >
                      <Tab
                        aria-labelledby="source-tab"
                        eventKey={0}
                        id="source-tab"
                        key=".0"
                        title={
                          <TabTitleText>
                            Source
                          </TabTitleText>
                        }
                      >
                        <TabBase
                          aria-labelledby="source-tab"
                          eventKey={0}
                          id="source-tab"
                          innerRef={null}
                          title={
                            <TabTitleText>
                              Source
                            </TabTitleText>
                          }
                        >
                          <li
                            className="pf-c-tabs__item pf-m-current"
                            role="presentation"
                          >
                            <TabButton
                              aria-controls="pf-tab-section-0-source-tab"
                              aria-labelledby="source-tab"
                              aria-selected={true}
                              className="pf-c-tabs__link"
                              id="pf-tab-0-source-tab"
                              onClick={[Function]}
                              parentInnerRef={null}
                              role="tab"
                            >
                              <button
                                aria-controls="pf-tab-section-0-source-tab"
                                aria-labelledby="source-tab"
                                aria-selected={true}
                                className="pf-c-tabs__link"
                                data-ouia-component-type="PF4/TabButton"
                                data-ouia-safe={true}
                                id="pf-tab-0-source-tab"
                                onClick={[Function]}
                                role="tab"
                                type="button"
                              >
                                <TabTitleText>
                                  <span
                                    className="pf-c-tabs__item-text"
                                  >
                                    Source
                                  </span>
                                </TabTitleText>
                              </button>
                            </TabButton>
                          </li>
                        </TabBase>
                      </Tab>
                      <Tab
                        aria-labelledby="config-tab"
                        eventKey={1}
                        id="config-tab"
                        key=".1"
                        title={
                          <TabTitleText>
                            Connections
                          </TabTitleText>
                        }
                      >
                        <TabBase
                          aria-labelledby="config-tab"
                          eventKey={1}
                          id="config-tab"
                          innerRef={null}
                          title={
                            <TabTitleText>
                              Connections
                            </TabTitleText>
                          }
                        >
                          <li
                            className="pf-c-tabs__item"
                            role="presentation"
                          >
                            <TabButton
                              aria-controls="pf-tab-section-1-config-tab"
                              aria-labelledby="config-tab"
                              aria-selected={false}
                              className="pf-c-tabs__link"
                              id="pf-tab-1-config-tab"
                              onClick={[Function]}
                              parentInnerRef={null}
                              role="tab"
                            >
                              <button
                                aria-controls="pf-tab-section-1-config-tab"
                                aria-labelledby="config-tab"
                                aria-selected={false}
                                className="pf-c-tabs__link"
                                data-ouia-component-type="PF4/TabButton"
                                data-ouia-safe={true}
                                id="pf-tab-1-config-tab"
                                onClick={[Function]}
                                role="tab"
                                type="button"
                              >
                                <TabTitleText>
                                  <span
                                    className="pf-c-tabs__item-text"
                                  >
                                    Connections
                                  </span>
                                </TabTitleText>
                              </button>
                            </TabButton>
                          </li>
                        </TabBase>
                      </Tab>
                    </ul>
                  </div>
                  <ForwardRef
                    activeKey={0}
                    child={
                      <Tab
                        aria-labelledby="source-tab"
                        eventKey={0}
                        id="source-tab"
                        title={
                          <TabTitleText>
                            Source
                          </TabTitleText>
                        }
                      >
                        <DrawerContentBody
                          style={
                            Object {
                              "background": "var(--pf-c-page__main-section--BackgroundColor)",
                              "padding": "0px",
                            }
                          }
                        >
                          <ForwardRef
                            code="html source code"
                            formContent={
                              Object {
                                "configuration": Object {
                                  "resources": Object {
                                    "scripts": Object {},
                                    "styles": Object {},
                                  },
                                  "schema": "{\\"$schema\\":\\"http://json-schema.org/draft-07/schema#\\",\\"type\\":\\"object\\",\\"properties\\":{\\"approve\\":{\\"type\\":\\"boolean\\",\\"output\\":true},\\"candidate\\":{\\"type\\":\\"object\\",\\"properties\\":{\\"email\\":{\\"type\\":\\"string\\"},\\"name\\":{\\"type\\":\\"string\\"},\\"salary\\":{\\"type\\":\\"integer\\"},\\"skills\\":{\\"type\\":\\"string\\"}},\\"input\\":true}}}",
                                },
                                "formInfo": Object {
                                  "lastModified": 2020-07-11T18:30:00.000Z,
                                  "name": "form1",
                                  "type": "HTML",
                                },
                                "source": "html source code",
                              }
                            }
                            formType="HTML"
                            isSource={true}
                            saveFormContent={[Function]}
                            setFormContent={[Function]}
                          />
                        </DrawerContentBody>
                      </Tab>
                    }
                    id="source-tab"
                    key="0"
                  >
                    <TabContentBase
                      activeKey={0}
                      child={
                        <Tab
                          aria-labelledby="source-tab"
                          eventKey={0}
                          id="source-tab"
                          title={
                            <TabTitleText>
                              Source
                            </TabTitleText>
                          }
                        >
                          <DrawerContentBody
                            style={
                              Object {
                                "background": "var(--pf-c-page__main-section--BackgroundColor)",
                                "padding": "0px",
                              }
                            }
                          >
                            <ForwardRef
                              code="html source code"
                              formContent={
                                Object {
                                  "configuration": Object {
                                    "resources": Object {
                                      "scripts": Object {},
                                      "styles": Object {},
                                    },
                                    "schema": "{\\"$schema\\":\\"http://json-schema.org/draft-07/schema#\\",\\"type\\":\\"object\\",\\"properties\\":{\\"approve\\":{\\"type\\":\\"boolean\\",\\"output\\":true},\\"candidate\\":{\\"type\\":\\"object\\",\\"properties\\":{\\"email\\":{\\"type\\":\\"string\\"},\\"name\\":{\\"type\\":\\"string\\"},\\"salary\\":{\\"type\\":\\"integer\\"},\\"skills\\":{\\"type\\":\\"string\\"}},\\"input\\":true}}}",
                                  },
                                  "formInfo": Object {
                                    "lastModified": 2020-07-11T18:30:00.000Z,
                                    "name": "form1",
                                    "type": "HTML",
                                  },
                                  "source": "html source code",
                                }
                              }
                              formType="HTML"
                              isSource={true}
                              saveFormContent={[Function]}
                              setFormContent={[Function]}
                            />
                          </DrawerContentBody>
                        </Tab>
                      }
                      id="source-tab"
                      innerRef={null}
                    >
                      <section
                        aria-labelledby="pf-tab-0-source-tab"
                        className="pf-c-tab-content"
                        data-ouia-component-type="PF4/TabContent"
                        data-ouia-safe={true}
                        hidden={false}
                        id="pf-tab-section-0-source-tab"
                        role="tabpanel"
                        tabIndex={0}
                      >
                        <DrawerContentBody
                          style={
                            Object {
                              "background": "var(--pf-c-page__main-section--BackgroundColor)",
                              "padding": "0px",
                            }
                          }
                        >
                          <div
                            className="pf-c-drawer__body"
                            style={
                              Object {
                                "background": "var(--pf-c-page__main-section--BackgroundColor)",
                                "padding": "0px",
                              }
                            }
                          >
                            <ForwardRef
                              code="html source code"
                              formContent={
                                Object {
                                  "configuration": Object {
                                    "resources": Object {
                                      "scripts": Object {},
                                      "styles": Object {},
                                    },
                                    "schema": "{\\"$schema\\":\\"http://json-schema.org/draft-07/schema#\\",\\"type\\":\\"object\\",\\"properties\\":{\\"approve\\":{\\"type\\":\\"boolean\\",\\"output\\":true},\\"candidate\\":{\\"type\\":\\"object\\",\\"properties\\":{\\"email\\":{\\"type\\":\\"string\\"},\\"name\\":{\\"type\\":\\"string\\"},\\"salary\\":{\\"type\\":\\"integer\\"},\\"skills\\":{\\"type\\":\\"string\\"}},\\"input\\":true}}}",
                                  },
                                  "formInfo": Object {
                                    "lastModified": 2020-07-11T18:30:00.000Z,
                                    "name": "form1",
                                    "type": "HTML",
                                  },
                                  "source": "html source code",
                                }
                              }
                              formType="HTML"
                              isSource={true}
                              saveFormContent={[Function]}
                              setFormContent={[Function]}
                            />
                          </div>
                        </DrawerContentBody>
                      </section>
                    </TabContentBase>
                  </ForwardRef>
                  <ForwardRef
                    activeKey={0}
                    child={
                      <Tab
                        aria-labelledby="config-tab"
                        eventKey={1}
                        id="config-tab"
                        title={
                          <TabTitleText>
                            Connections
                          </TabTitleText>
                        }
                      >
                        <DrawerContentBody
                          style={
                            Object {
                              "background": "var(--pf-c-page__main-section--BackgroundColor)",
                              "padding": "0px",
                            }
                          }
                        />
                      </Tab>
                    }
                    id="config-tab"
                    key="1"
                  >
                    <TabContentBase
                      activeKey={0}
                      child={
                        <Tab
                          aria-labelledby="config-tab"
                          eventKey={1}
                          id="config-tab"
                          title={
                            <TabTitleText>
                              Connections
                            </TabTitleText>
                          }
                        >
                          <DrawerContentBody
                            style={
                              Object {
                                "background": "var(--pf-c-page__main-section--BackgroundColor)",
                                "padding": "0px",
                              }
                            }
                          />
                        </Tab>
                      }
                      id="config-tab"
                      innerRef={null}
                    >
                      <section
                        aria-labelledby="pf-tab-1-config-tab"
                        className="pf-c-tab-content"
                        data-ouia-component-type="PF4/TabContent"
                        data-ouia-safe={true}
                        hidden={true}
                        id="pf-tab-section-1-config-tab"
                        role="tabpanel"
                        tabIndex={0}
                      >
                        <DrawerContentBody
                          style={
                            Object {
                              "background": "var(--pf-c-page__main-section--BackgroundColor)",
                              "padding": "0px",
                            }
                          }
                        >
                          <div
                            className="pf-c-drawer__body"
                            style={
                              Object {
                                "background": "var(--pf-c-page__main-section--BackgroundColor)",
                                "padding": "0px",
                              }
                            }
                          />
                        </DrawerContentBody>
                      </section>
                    </TabContentBase>
                  </ForwardRef>
                </Tabs>
              </div>
              <DrawerPanelContent
                defaultSize="800px"
                isResizable={true}
                onResize={[Function]}
              >
                <GenerateId
                  prefix="pf-drawer-panel-"
                >
                  <div
                    className="pf-c-drawer__panel pf-m-resizable"
                    hidden={false}
                    id="pf-drawer-panel-0"
                    onTransitionEnd={[Function]}
                    style={
                      Object {
                        "--pf-c-drawer__panel--md--FlexBasis": "800px",
                      }
                    }
                  >
                    <div
                      aria-controls="pf-drawer-panel-0"
                      aria-label="Resize"
                      aria-orientation="vertical"
                      aria-valuemax={100}
                      aria-valuemin={0}
                      aria-valuenow={0}
                      className="pf-c-drawer__splitter pf-m-vertical"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      onTouchStart={[Function]}
                      role="separator"
                      tabIndex={0}
                    >
                      <div
                        aria-hidden={true}
                        className="pf-c-drawer__splitter-handle"
                      />
                    </div>
                    <div
                      className="pf-c-drawer__panel-main"
                    >
                      <DrawerHead
                        style={
                          Object {
                            "height": "100%",
                          }
                        }
                      >
                        <DrawerPanelBody
                          hasNoPadding={false}
                        >
                          <div
                            className="pf-c-drawer__body"
                          >
                            <div
                              className="pf-c-drawer__head"
                              style={
                                Object {
                                  "height": "100%",
                                }
                              }
                            >
                              <span>
                                <MockedFormDisplayerContainer
                                  formContent={
                                    Object {
                                      "configuration": Object {
                                        "resources": Object {
                                          "scripts": Object {},
                                          "styles": Object {},
                                        },
                                        "schema": "{\\"$schema\\":\\"http://json-schema.org/draft-07/schema#\\",\\"type\\":\\"object\\",\\"properties\\":{\\"approve\\":{\\"type\\":\\"boolean\\",\\"output\\":true},\\"candidate\\":{\\"type\\":\\"object\\",\\"properties\\":{\\"email\\":{\\"type\\":\\"string\\"},\\"name\\":{\\"type\\":\\"string\\"},\\"salary\\":{\\"type\\":\\"integer\\"},\\"skills\\":{\\"type\\":\\"string\\"}},\\"input\\":true}}}",
                                      },
                                      "formInfo": Object {
                                        "lastModified": 2020-07-11T18:30:00.000Z,
                                        "name": "form1",
                                        "type": "HTML",
                                      },
                                      "source": "html source code",
                                    }
                                  }
                                  targetOrigin="http://localhost:9000"
                                />
                              </span>
                            </div>
                          </div>
                        </DrawerPanelBody>
                      </DrawerHead>
                    </div>
                  </div>
                </GenerateId>
              </DrawerPanelContent>
            </div>
          </DrawerMain>
        </DrawerContent>
      </div>
    </Drawer>
  </div>
</FormDetails>
`;
