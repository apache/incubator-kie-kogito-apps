// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ManagementConsole tests Snapshot test with default props 1`] = `
<ManagementConsole
  apolloClient={[MockFunction]}
  userContext={
    Object {
      "getCurrentUser": [MockFunction],
    }
  }
>
  <ApolloProvider
    client={[MockFunction]}
  >
    <KogitoAppContextProvider
      userContext={
        Object {
          "getCurrentUser": [MockFunction],
        }
      }
    >
      <ProcessListContextProvider
        apolloClient={[MockFunction]}
      >
        <ProcessDetailsContextProvider
          apolloClient={[MockFunction]}
        >
          <JobsManagementContextProvider
            apolloClient={[MockFunction]}
          >
            <BrowserRouter>
              <Router
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <Switch>
                  <Route
                    computedMatch={
                      Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      }
                    }
                    location={
                      Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      }
                    }
                    path="/"
                    render={[Function]}
                  >
                    <PageLayout
                      BrandAltText="Management Console Logo"
                      BrandClick={[Function]}
                      BrandSrc="managementConsoleLogo.svg"
                      PageNav={
                        <ManagementConsoleNav
                          pathname="/"
                        />
                      }
                      ouiaId="management-console"
                      pageNavOpen={true}
                      withHeader={true}
                    >
                      <MockedComponent />
                    </PageLayout>
                  </Route>
                </Switch>
              </Router>
            </BrowserRouter>
          </JobsManagementContextProvider>
        </ProcessDetailsContextProvider>
      </ProcessListContextProvider>
    </KogitoAppContextProvider>
  </ApolloProvider>
</ManagementConsole>
`;
