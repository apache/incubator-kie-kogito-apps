// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WebApp - ProcessDetailsContainer tests Snapshot test with default values 1`] = `
<ProcessDetailsContainer
  processInstance={Object {}}
>
  <ForwardRef
    data-ouia-component-type="process-details-container"
    data-ouia-safe={true}
    driver={
      ProcessDetailsGatewayApiImpl {
        "_ProcessDetailsState": Object {
          "id": "",
        },
        "cancelJob": [Function],
        "getProcessDiagram": [Function],
        "handleProcessAbort": [Function],
        "handleProcessVariableUpdate": [Function],
        "listeners": Array [
          Object {
            "onOpen": [Function],
          },
        ],
        "queries": Object {
          "getJobs": [MockFunction],
          "getProcessDetails": [MockFunction],
          "getSVG": [MockFunction],
          "getTriggerableNodes": [MockFunction],
          "handleNodeInstanceCancel": [MockFunction],
          "handleNodeInstanceRetrigger": [MockFunction],
          "handleNodeTrigger": [MockFunction],
          "handleProcessAbort": [MockFunction],
          "handleProcessRetry": [MockFunction],
          "handleProcessSkip": [MockFunction],
          "handleProcessVariableUpdate": [MockFunction],
          "jobCancel": [MockFunction],
          "rescheduleJob": [MockFunction],
        },
        "rescheduleJob": [Function],
      }
    }
    pluralProcessLabel="processes"
    processInstance={Object {}}
    showSwfDiagram={false}
    singularProcessLabel="process"
    targetOrigin="http://localhost"
  >
    <ForwardRef(RefForwardingEmbeddedEnvelope)
      apiImpl={
        ProcessDetailsChannelApiImpl {
          "driver": ProcessDetailsGatewayApiImpl {
            "_ProcessDetailsState": Object {
              "id": "",
            },
            "cancelJob": [Function],
            "getProcessDiagram": [Function],
            "handleProcessAbort": [Function],
            "handleProcessVariableUpdate": [Function],
            "listeners": Array [
              Object {
                "onOpen": [Function],
              },
            ],
            "queries": Object {
              "getJobs": [MockFunction],
              "getProcessDetails": [MockFunction],
              "getSVG": [MockFunction],
              "getTriggerableNodes": [MockFunction],
              "handleNodeInstanceCancel": [MockFunction],
              "handleNodeInstanceRetrigger": [MockFunction],
              "handleNodeTrigger": [MockFunction],
              "handleProcessAbort": [MockFunction],
              "handleProcessRetry": [MockFunction],
              "handleProcessSkip": [MockFunction],
              "handleProcessVariableUpdate": [MockFunction],
              "jobCancel": [MockFunction],
              "rescheduleJob": [MockFunction],
            },
            "rescheduleJob": [Function],
          },
        }
      }
      config={
        Object {
          "containerType": "div",
        }
      }
      origin="http://localhost"
      pollInit={[Function]}
      refDelegate={[Function]}
    >
      <div />
    </ForwardRef(RefForwardingEmbeddedEnvelope)>
  </ForwardRef>
</ProcessDetailsContainer>
`;
