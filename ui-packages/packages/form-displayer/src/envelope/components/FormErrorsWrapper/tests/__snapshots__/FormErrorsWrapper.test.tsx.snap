// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FormErrorsWrapper tests Snapshot 1`] = `
<FormErrorsWrapper
  error={[Error: Test error]}
>
  <Bullseye
    data-ouia-component-type="form-errors-wrapper"
    data-ouia-safe={true}
  >
    <div
      className="pf-l-bullseye"
      data-ouia-component-type="form-errors-wrapper"
      data-ouia-safe={true}
    >
      <EmptyState
        variant="full"
      >
        <div
          className="pf-c-empty-state"
        >
          <div
            className="pf-c-empty-state__content"
          >
            <EmptyStateIcon
              icon={[Function]}
            >
              <ExclamationCircleIcon
                aria-hidden="true"
                className="pf-c-empty-state__icon"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              >
                <svg
                  aria-hidden="true"
                  aria-labelledby={null}
                  className="pf-c-empty-state__icon"
                  fill="currentColor"
                  height="1em"
                  role="img"
                  style={
                    Object {
                      "verticalAlign": "-0.125em",
                    }
                  }
                  viewBox="0 0 512 512"
                  width="1em"
                >
                  <path
                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                  />
                </svg>
              </ExclamationCircleIcon>
            </EmptyStateIcon>
            <Title
              headingLevel="h4"
              size="lg"
            >
              <h4
                className="pf-c-title pf-m-lg"
                data-ouia-component-id="OUIA-Generated-Title-1"
                data-ouia-component-type="PF4/Title"
                data-ouia-safe={true}
              >
                Error displaying form:
              </h4>
            </Title>
            <EmptyStateBody>
              <div
                className="pf-c-empty-state__body"
              >
                Error: Test error
                .
                 
                <Button
                  isInline={true}
                  onClick={[Function]}
                  variant="link"
                >
                  <ButtonBase
                    innerRef={null}
                    isInline={true}
                    onClick={[Function]}
                    variant="link"
                  >
                    <button
                      aria-disabled={false}
                      aria-label={null}
                      className="pf-c-button pf-m-link pf-m-inline"
                      data-ouia-component-id="OUIA-Generated-Button-link-1"
                      data-ouia-component-type="PF4/Button"
                      data-ouia-safe={true}
                      disabled={false}
                      onClick={[Function]}
                      role={null}
                      type="button"
                    >
                      See more details
                    </button>
                  </ButtonBase>
                </Button>
              </div>
            </EmptyStateBody>
          </div>
        </div>
      </EmptyState>
    </div>
  </Bullseye>
</FormErrorsWrapper>
`;

exports[`FormErrorsWrapper tests Snapshot 2`] = `
<FormErrorsWrapper
  error={[Error: Test error]}
>
  <Bullseye
    data-ouia-component-type="form-errors-wrapper"
    data-ouia-safe={true}
  >
    <div
      className="pf-l-bullseye"
      data-ouia-component-type="form-errors-wrapper"
      data-ouia-safe={true}
    >
      <EmptyState
        variant="full"
      >
        <div
          className="pf-c-empty-state"
        >
          <div
            className="pf-c-empty-state__content"
          >
            <EmptyStateIcon
              icon={[Function]}
            >
              <ExclamationCircleIcon
                aria-hidden="true"
                className="pf-c-empty-state__icon"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              >
                <svg
                  aria-hidden="true"
                  aria-labelledby={null}
                  className="pf-c-empty-state__icon"
                  fill="currentColor"
                  height="1em"
                  role="img"
                  style={
                    Object {
                      "verticalAlign": "-0.125em",
                    }
                  }
                  viewBox="0 0 512 512"
                  width="1em"
                >
                  <path
                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                  />
                </svg>
              </ExclamationCircleIcon>
            </EmptyStateIcon>
            <Title
              headingLevel="h4"
              size="lg"
            >
              <h4
                className="pf-c-title pf-m-lg"
                data-ouia-component-id="OUIA-Generated-Title-1"
                data-ouia-component-type="PF4/Title"
                data-ouia-safe={true}
              >
                Error displaying form:
              </h4>
            </Title>
            <EmptyStateBody>
              <div
                className="pf-c-empty-state__body"
              >
                Error: Test error
                .
                 
                <Button
                  isInline={true}
                  onClick={[Function]}
                  variant="link"
                >
                  <ButtonBase
                    innerRef={null}
                    isInline={true}
                    onClick={[Function]}
                    variant="link"
                  >
                    <button
                      aria-disabled={false}
                      aria-label={null}
                      className="pf-c-button pf-m-link pf-m-inline"
                      data-ouia-component-id="OUIA-Generated-Button-link-1"
                      data-ouia-component-type="PF4/Button"
                      data-ouia-safe={true}
                      disabled={false}
                      onClick={[Function]}
                      role={null}
                      type="button"
                    >
                      See more details
                    </button>
                  </ButtonBase>
                </Button>
              </div>
            </EmptyStateBody>
            <EmptyStateBody>
              <div
                className="pf-c-empty-state__body"
              >
                <ClipboardCopy
                  additionalActions={null}
                  clickTip="Successfully copied to clipboard!"
                  entryDelay={300}
                  exitDelay={1500}
                  hoverTip="Copy to clipboard"
                  isCode={true}
                  isExpanded={true}
                  isReadOnly={false}
                  maxWidth="150px"
                  onChange={[Function]}
                  onCopy={[Function]}
                  ouiaSafe={true}
                  position="top"
                  removeFindDomNode={false}
                  textAriaLabel="Copyable input"
                  toggleAriaLabel="Show content"
                  variant="expansion"
                >
                  <div
                    className="pf-c-clipboard-copy pf-m-expanded"
                    data-ouia-component-type="PF4/ClipboardCopy"
                    data-ouia-safe={true}
                  >
                    <GenerateId
                      prefix=""
                    >
                      <div
                        className="pf-c-clipboard-copy__group"
                      >
                        <ClipboardCopyToggle
                          aria-label="Show content"
                          contentId="content-0"
                          id="toggle-0"
                          isExpanded={true}
                          onClick={[Function]}
                          textId="text-input-0"
                        >
                          <Button
                            aria-controls="toggle-0 content-0"
                            aria-expanded={true}
                            aria-label="Show content"
                            aria-labelledby="toggle-0 text-input-0"
                            id="toggle-0"
                            onClick={[Function]}
                            type="button"
                            variant="control"
                          >
                            <ButtonBase
                              aria-controls="toggle-0 content-0"
                              aria-expanded={true}
                              aria-label="Show content"
                              aria-labelledby="toggle-0 text-input-0"
                              id="toggle-0"
                              innerRef={null}
                              onClick={[Function]}
                              type="button"
                              variant="control"
                            >
                              <button
                                aria-controls="toggle-0 content-0"
                                aria-disabled={false}
                                aria-expanded={true}
                                aria-label="Show content"
                                aria-labelledby="toggle-0 text-input-0"
                                className="pf-c-button pf-m-control"
                                data-ouia-component-id="OUIA-Generated-Button-control-1"
                                data-ouia-component-type="PF4/Button"
                                data-ouia-safe={true}
                                disabled={false}
                                id="toggle-0"
                                onClick={[Function]}
                                role={null}
                                type="button"
                              >
                                <AngleDownIcon
                                  aria-hidden="true"
                                  color="currentColor"
                                  noVerticalAlign={false}
                                  size="sm"
                                >
                                  <svg
                                    aria-hidden="true"
                                    aria-labelledby={null}
                                    fill="currentColor"
                                    height="1em"
                                    role="img"
                                    style={
                                      Object {
                                        "verticalAlign": "-0.125em",
                                      }
                                    }
                                    viewBox="0 0 320 512"
                                    width="1em"
                                  >
                                    <path
                                      d="M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z"
                                    />
                                  </svg>
                                </AngleDownIcon>
                              </button>
                            </ButtonBase>
                          </Button>
                        </ClipboardCopyToggle>
                        <TextInput
                          aria-label="Copyable input"
                          id="text-input-0"
                          isReadOnly={true}
                          onChange={[Function]}
                          value={
                            <div
                              className="kogito-form-displayer-error-wrapper__align-left"
                            >
                              Error: Test error
    at Object.&lt;anonymous&gt; (/Users/saravanabalajisrinivasan/Documents/My-repos/my-kogito-apps/kogito-apps/ui-packages/packages/form-displayer/src/envelope/components/FormErrorsWrapper/tests/FormErrorsWrapper.test.tsx:39:19)
    at Object.asyncJestTest (/Users/saravanabalajisrinivasan/Documents/My-repos/my-kogito-apps/kogito-apps/ui-packages/node_modules/.pnpm/jest-jasmine2@26.6.3/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)
    at /Users/saravanabalajisrinivasan/Documents/My-repos/my-kogito-apps/kogito-apps/ui-packages/node_modules/.pnpm/jest-jasmine2@26.6.3/node_modules/jest-jasmine2/build/queueRunner.js:45:12
    at new Promise (&lt;anonymous&gt;)
    at mapper (/Users/saravanabalajisrinivasan/Documents/My-repos/my-kogito-apps/kogito-apps/ui-packages/node_modules/.pnpm/jest-jasmine2@26.6.3/node_modules/jest-jasmine2/build/queueRunner.js:28:19)
    at /Users/saravanabalajisrinivasan/Documents/My-repos/my-kogito-apps/kogito-apps/ui-packages/node_modules/.pnpm/jest-jasmine2@26.6.3/node_modules/jest-jasmine2/build/queueRunner.js:75:41
                            </div>
                          }
                        >
                          <TextInputBase
                            aria-label="Copyable input"
                            className=""
                            id="text-input-0"
                            innerRef={null}
                            isDisabled={false}
                            isIconSprite={false}
                            isLeftTruncated={false}
                            isReadOnly={true}
                            isRequired={false}
                            onChange={[Function]}
                            ouiaSafe={true}
                            type="text"
                            validated="default"
                            value={
                              <div
                                className="kogito-form-displayer-error-wrapper__align-left"
                              >
                                Error: Test error
    at Object.&lt;anonymous&gt; (/Users/saravanabalajisrinivasan/Documents/My-repos/my-kogito-apps/kogito-apps/ui-packages/packages/form-displayer/src/envelope/components/FormErrorsWrapper/tests/FormErrorsWrapper.test.tsx:39:19)
    at Object.asyncJestTest (/Users/saravanabalajisrinivasan/Documents/My-repos/my-kogito-apps/kogito-apps/ui-packages/node_modules/.pnpm/jest-jasmine2@26.6.3/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)
    at /Users/saravanabalajisrinivasan/Documents/My-repos/my-kogito-apps/kogito-apps/ui-packages/node_modules/.pnpm/jest-jasmine2@26.6.3/node_modules/jest-jasmine2/build/queueRunner.js:45:12
    at new Promise (&lt;anonymous&gt;)
    at mapper (/Users/saravanabalajisrinivasan/Documents/My-repos/my-kogito-apps/kogito-apps/ui-packages/node_modules/.pnpm/jest-jasmine2@26.6.3/node_modules/jest-jasmine2/build/queueRunner.js:28:19)
    at /Users/saravanabalajisrinivasan/Documents/My-repos/my-kogito-apps/kogito-apps/ui-packages/node_modules/.pnpm/jest-jasmine2@26.6.3/node_modules/jest-jasmine2/build/queueRunner.js:75:41
                              </div>
                            }
                          >
                            <input
                              aria-invalid={false}
                              aria-label="Copyable input"
                              className="pf-c-form-control"
                              data-ouia-component-id="OUIA-Generated-TextInputBase-1"
                              data-ouia-component-type="PF4/TextInput"
                              data-ouia-safe={true}
                              disabled={false}
                              id="text-input-0"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              readOnly={true}
                              required={false}
                              type="text"
                              value={
                                <div
                                  className="kogito-form-displayer-error-wrapper__align-left"
                                >
                                  Error: Test error
    at Object.&lt;anonymous&gt; (/Users/saravanabalajisrinivasan/Documents/My-repos/my-kogito-apps/kogito-apps/ui-packages/packages/form-displayer/src/envelope/components/FormErrorsWrapper/tests/FormErrorsWrapper.test.tsx:39:19)
    at Object.asyncJestTest (/Users/saravanabalajisrinivasan/Documents/My-repos/my-kogito-apps/kogito-apps/ui-packages/node_modules/.pnpm/jest-jasmine2@26.6.3/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)
    at /Users/saravanabalajisrinivasan/Documents/My-repos/my-kogito-apps/kogito-apps/ui-packages/node_modules/.pnpm/jest-jasmine2@26.6.3/node_modules/jest-jasmine2/build/queueRunner.js:45:12
    at new Promise (&lt;anonymous&gt;)
    at mapper (/Users/saravanabalajisrinivasan/Documents/My-repos/my-kogito-apps/kogito-apps/ui-packages/node_modules/.pnpm/jest-jasmine2@26.6.3/node_modules/jest-jasmine2/build/queueRunner.js:28:19)
    at /Users/saravanabalajisrinivasan/Documents/My-repos/my-kogito-apps/kogito-apps/ui-packages/node_modules/.pnpm/jest-jasmine2@26.6.3/node_modules/jest-jasmine2/build/queueRunner.js:75:41
                                </div>
                              }
                            />
                          </TextInputBase>
                        </TextInput>
                        <ClipboardCopyButton
                          aria-label="Copy to clipboard"
                          entryDelay={300}
                          exitDelay={1500}
                          id="copy-button-0"
                          maxWidth="150px"
                          onClick={[Function]}
                          onTooltipHidden={[Function]}
                          position="top"
                          removeFindDomNode={false}
                          textId="text-input-0"
                        >
                          <Tooltip
                            aria="none"
                            aria-live="polite"
                            content={
                              <div>
                                Copy to clipboard
                              </div>
                            }
                            entryDelay={300}
                            exitDelay={1500}
                            maxWidth="150px"
                            onTooltipHidden={[Function]}
                            position="top"
                            removeFindDomNode={false}
                            trigger="mouseenter focus click"
                          >
                            <Popper
                              appendTo={[Function]}
                              distance={15}
                              enableFlip={true}
                              flipBehavior={
                                Array [
                                  "top",
                                  "right",
                                  "bottom",
                                  "left",
                                  "top",
                                  "right",
                                  "bottom",
                                ]
                              }
                              isVisible={false}
                              onBlur={[Function]}
                              onDocumentClick={[Function]}
                              onDocumentKeyDown={[Function]}
                              onFocus={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onPopperMouseEnter={[Function]}
                              onPopperMouseLeave={[Function]}
                              onTriggerEnter={[Function]}
                              placement="top"
                              popper={
                                <div
                                  aria-live="polite"
                                  className="pf-c-tooltip"
                                  id="pf-tooltip-1"
                                  role="tooltip"
                                  style={
                                    Object {
                                      "maxWidth": "150px",
                                      "opacity": 0,
                                      "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                    }
                                  }
                                >
                                  <TooltipArrow />
                                  <TooltipContent
                                    isLeftAligned={false}
                                  >
                                    <div>
                                      Copy to clipboard
                                    </div>
                                  </TooltipContent>
                                </div>
                              }
                              popperMatchesTriggerWidth={false}
                              positionModifiers={
                                Object {
                                  "bottom": "pf-m-bottom",
                                  "bottom-end": "pf-m-bottom-right",
                                  "bottom-start": "pf-m-bottom-left",
                                  "left": "pf-m-left",
                                  "left-end": "pf-m-left-bottom",
                                  "left-start": "pf-m-left-top",
                                  "right": "pf-m-right",
                                  "right-end": "pf-m-right-bottom",
                                  "right-start": "pf-m-right-top",
                                  "top": "pf-m-top",
                                  "top-end": "pf-m-top-right",
                                  "top-start": "pf-m-top-left",
                                }
                              }
                              removeFindDomNode={false}
                              trigger={
                                <Button
                                  aria-label="Copy to clipboard"
                                  aria-labelledby="copy-button-0 text-input-0"
                                  id="copy-button-0"
                                  onClick={[Function]}
                                  type="button"
                                  variant="control"
                                >
                                  <CopyIcon
                                    color="currentColor"
                                    noVerticalAlign={false}
                                    size="sm"
                                  />
                                </Button>
                              }
                              zIndex={9999}
                            >
                              <FindRefWrapper
                                onFoundRef={[Function]}
                              >
                                <Button
                                  aria-label="Copy to clipboard"
                                  aria-labelledby="copy-button-0 text-input-0"
                                  id="copy-button-0"
                                  onClick={[Function]}
                                  type="button"
                                  variant="control"
                                >
                                  <ButtonBase
                                    aria-label="Copy to clipboard"
                                    aria-labelledby="copy-button-0 text-input-0"
                                    id="copy-button-0"
                                    innerRef={null}
                                    onClick={[Function]}
                                    type="button"
                                    variant="control"
                                  >
                                    <button
                                      aria-disabled={false}
                                      aria-label="Copy to clipboard"
                                      aria-labelledby="copy-button-0 text-input-0"
                                      className="pf-c-button pf-m-control"
                                      data-ouia-component-id="OUIA-Generated-Button-control-2"
                                      data-ouia-component-type="PF4/Button"
                                      data-ouia-safe={true}
                                      disabled={false}
                                      id="copy-button-0"
                                      onClick={[Function]}
                                      role={null}
                                      type="button"
                                    >
                                      <CopyIcon
                                        color="currentColor"
                                        noVerticalAlign={false}
                                        size="sm"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          aria-labelledby={null}
                                          fill="currentColor"
                                          height="1em"
                                          role="img"
                                          style={
                                            Object {
                                              "verticalAlign": "-0.125em",
                                            }
                                          }
                                          viewBox="0 0 448 512"
                                          width="1em"
                                        >
                                          <path
                                            d="M320 448v40c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24V120c0-13.255 10.745-24 24-24h72v296c0 30.879 25.121 56 56 56h168zm0-344V0H152c-13.255 0-24 10.745-24 24v368c0 13.255 10.745 24 24 24h272c13.255 0 24-10.745 24-24V128H344c-13.2 0-24-10.8-24-24zm120.971-31.029L375.029 7.029A24 24 0 0 0 358.059 0H352v96h96v-6.059a24 24 0 0 0-7.029-16.97z"
                                          />
                                        </svg>
                                      </CopyIcon>
                                    </button>
                                  </ButtonBase>
                                </Button>
                              </FindRefWrapper>
                            </Popper>
                          </Tooltip>
                        </ClipboardCopyButton>
                      </div>
                      <ClipboardCopyExpanded
                        className=""
                        id="content-0"
                        isCode={true}
                        isReadOnly={false}
                        onChange={[Function]}
                      >
                        <div
                          className="pf-c-clipboard-copy__expandable-content"
                          contentEditable={true}
                          id="content-0"
                          onInput={[Function]}
                          suppressContentEditableWarning={true}
                        >
                          <pre>
                            <div
                              className="kogito-form-displayer-error-wrapper__align-left"
                            >
                              Error: Test error
    at Object.&lt;anonymous&gt; (/Users/saravanabalajisrinivasan/Documents/My-repos/my-kogito-apps/kogito-apps/ui-packages/packages/form-displayer/src/envelope/components/FormErrorsWrapper/tests/FormErrorsWrapper.test.tsx:39:19)
    at Object.asyncJestTest (/Users/saravanabalajisrinivasan/Documents/My-repos/my-kogito-apps/kogito-apps/ui-packages/node_modules/.pnpm/jest-jasmine2@26.6.3/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)
    at /Users/saravanabalajisrinivasan/Documents/My-repos/my-kogito-apps/kogito-apps/ui-packages/node_modules/.pnpm/jest-jasmine2@26.6.3/node_modules/jest-jasmine2/build/queueRunner.js:45:12
    at new Promise (&lt;anonymous&gt;)
    at mapper (/Users/saravanabalajisrinivasan/Documents/My-repos/my-kogito-apps/kogito-apps/ui-packages/node_modules/.pnpm/jest-jasmine2@26.6.3/node_modules/jest-jasmine2/build/queueRunner.js:28:19)
    at /Users/saravanabalajisrinivasan/Documents/My-repos/my-kogito-apps/kogito-apps/ui-packages/node_modules/.pnpm/jest-jasmine2@26.6.3/node_modules/jest-jasmine2/build/queueRunner.js:75:41
                            </div>
                          </pre>
                        </div>
                      </ClipboardCopyExpanded>
                    </GenerateId>
                  </div>
                </ClipboardCopy>
              </div>
            </EmptyStateBody>
          </div>
        </div>
      </EmptyState>
    </div>
  </Bullseye>
</FormErrorsWrapper>
`;
