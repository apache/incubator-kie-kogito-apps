// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Outcomes renders a list of simple outcomes as cards 1`] = `
<Outcomes
  listView={true}
  onExplanationClick={[MockFunction]}
  outcomes={
    Array [
      Object {
        "evaluationStatus": "SUCCEEDED",
        "hasErrors": false,
        "messages": Array [],
        "outcomeId": "_12268B68-94A1-4960-B4C8-0B6071AFDE58",
        "outcomeName": "Mortgage Approval",
        "outcomeResult": Object {
          "components": null,
          "name": "Mortgage Approval",
          "typeRef": "boolean",
          "value": true,
        },
      },
      Object {
        "evaluationStatus": "SUCCEEDED",
        "hasErrors": false,
        "messages": Array [],
        "outcomeId": "_9CFF8C35-4EB3-451E-874C-DB27A5A424C0",
        "outcomeName": "Risk Score",
        "outcomeResult": Object {
          "components": null,
          "name": "Risk Score",
          "typeRef": "number",
          "value": 21.7031851958099,
        },
      },
      Object {
        "evaluationStatus": "SUCCEEDED",
        "hasErrors": false,
        "messages": Array [],
        "outcomeId": "_d361c79e-8c06-4504-bdb2-d6b90b915166",
        "outcomeName": "Client Score",
        "outcomeResult": Object {
          "components": null,
          "name": "Client Score",
          "typeRef": "number",
          "value": null,
        },
      },
    ]
  }
>
  <section
    className="outcomes"
  >
    <Gallery
      className="outcome-cards"
      hasGutter={true}
    >
      <div
        className="pf-l-gallery pf-m-gutter outcome-cards"
      >
        <GalleryItem
          key="0"
        >
          <div>
            <OutcomeCard
              onExplanation={[MockFunction]}
              outcome={
                Object {
                  "evaluationStatus": "SUCCEEDED",
                  "hasErrors": false,
                  "messages": Array [],
                  "outcomeId": "_12268B68-94A1-4960-B4C8-0B6071AFDE58",
                  "outcomeName": "Mortgage Approval",
                  "outcomeResult": Object {
                    "components": null,
                    "name": "Mortgage Approval",
                    "typeRef": "boolean",
                    "value": true,
                  },
                }
              }
            >
              <Card
                className="outcome-cards__card outcome-cards__card--list-view"
                isHoverable={true}
              >
                <article
                  className="pf-c-card pf-m-hoverable outcome-cards__card outcome-cards__card--list-view"
                  data-ouia-component-id="OUIA-Generated-Card-1"
                  data-ouia-component-type="PF4/Card"
                  data-ouia-safe={true}
                  id=""
                >
                  <CardHeader>
                    <div
                      className="pf-c-card__header"
                    >
                      <Title
                        className="outcome-cards__card__title"
                        headingLevel="h4"
                        size="xl"
                      >
                        <h4
                          className="pf-c-title pf-m-xl outcome-cards__card__title"
                        >
                          Mortgage Approval
                        </h4>
                      </Title>
                    </div>
                  </CardHeader>
                  <CardBody>
                    <div
                      className="pf-c-card__body"
                    >
                      <OutcomeProperty
                        hidePropertyName={true}
                        key="Mortgage Approval"
                        property={
                          Object {
                            "components": null,
                            "name": "Mortgage Approval",
                            "typeRef": "boolean",
                            "value": true,
                          }
                        }
                      >
                        <div
                          className="outcome__property__value--bigger"
                        >
                          <FormattedValue
                            value={true}
                          >
                            <span
                              className="formatted-value formatted-value--capitalize"
                            >
                              true
                            </span>
                          </FormattedValue>
                        </div>
                      </OutcomeProperty>
                    </div>
                  </CardBody>
                  <CardFooter>
                    <div
                      className="pf-c-card__footer"
                    >
                      <Button
                        className="outcome-cards__card__explanation-link"
                        isInline={true}
                        onClick={[Function]}
                        variant="link"
                      >
                        <button
                          aria-disabled={false}
                          aria-label={null}
                          className="pf-c-button pf-m-link pf-m-inline outcome-cards__card__explanation-link"
                          data-ouia-component-id="OUIA-Generated-Button-link-1"
                          data-ouia-component-type="PF4/Button"
                          data-ouia-safe={true}
                          disabled={false}
                          onClick={[Function]}
                          role={null}
                          type="button"
                        >
                          View Details 
                          <LongArrowAltRightIcon
                            color="currentColor"
                            noVerticalAlign={false}
                            size="sm"
                          >
                            <svg
                              aria-hidden={true}
                              aria-labelledby={null}
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style={
                                Object {
                                  "verticalAlign": "-0.125em",
                                }
                              }
                              viewBox="0 0 448 512"
                              width="1em"
                            >
                              <path
                                d="M313.941 216H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12h301.941v46.059c0 21.382 25.851 32.09 40.971 16.971l86.059-86.059c9.373-9.373 9.373-24.569 0-33.941l-86.059-86.059c-15.119-15.119-40.971-4.411-40.971 16.971V216z"
                              />
                            </svg>
                          </LongArrowAltRightIcon>
                        </button>
                      </Button>
                    </div>
                  </CardFooter>
                </article>
              </Card>
            </OutcomeCard>
          </div>
        </GalleryItem>
        <GalleryItem
          key="1"
        >
          <div>
            <OutcomeCard
              onExplanation={[MockFunction]}
              outcome={
                Object {
                  "evaluationStatus": "SUCCEEDED",
                  "hasErrors": false,
                  "messages": Array [],
                  "outcomeId": "_9CFF8C35-4EB3-451E-874C-DB27A5A424C0",
                  "outcomeName": "Risk Score",
                  "outcomeResult": Object {
                    "components": null,
                    "name": "Risk Score",
                    "typeRef": "number",
                    "value": 21.7031851958099,
                  },
                }
              }
            >
              <Card
                className="outcome-cards__card outcome-cards__card--list-view"
                isHoverable={true}
              >
                <article
                  className="pf-c-card pf-m-hoverable outcome-cards__card outcome-cards__card--list-view"
                  data-ouia-component-id="OUIA-Generated-Card-2"
                  data-ouia-component-type="PF4/Card"
                  data-ouia-safe={true}
                  id=""
                >
                  <CardHeader>
                    <div
                      className="pf-c-card__header"
                    >
                      <Title
                        className="outcome-cards__card__title"
                        headingLevel="h4"
                        size="xl"
                      >
                        <h4
                          className="pf-c-title pf-m-xl outcome-cards__card__title"
                        >
                          Risk Score
                        </h4>
                      </Title>
                    </div>
                  </CardHeader>
                  <CardBody>
                    <div
                      className="pf-c-card__body"
                    >
                      <OutcomeProperty
                        hidePropertyName={true}
                        key="Risk Score"
                        property={
                          Object {
                            "components": null,
                            "name": "Risk Score",
                            "typeRef": "number",
                            "value": 21.7031851958099,
                          }
                        }
                      >
                        <div
                          className="outcome__property__value--bigger"
                        >
                          <FormattedValue
                            value={21.7031851958099}
                          >
                            <span
                              className="formatted-value"
                            >
                              21.7031851958099
                            </span>
                          </FormattedValue>
                        </div>
                      </OutcomeProperty>
                    </div>
                  </CardBody>
                  <CardFooter>
                    <div
                      className="pf-c-card__footer"
                    >
                      <Button
                        className="outcome-cards__card__explanation-link"
                        isInline={true}
                        onClick={[Function]}
                        variant="link"
                      >
                        <button
                          aria-disabled={false}
                          aria-label={null}
                          className="pf-c-button pf-m-link pf-m-inline outcome-cards__card__explanation-link"
                          data-ouia-component-id="OUIA-Generated-Button-link-2"
                          data-ouia-component-type="PF4/Button"
                          data-ouia-safe={true}
                          disabled={false}
                          onClick={[Function]}
                          role={null}
                          type="button"
                        >
                          View Details 
                          <LongArrowAltRightIcon
                            color="currentColor"
                            noVerticalAlign={false}
                            size="sm"
                          >
                            <svg
                              aria-hidden={true}
                              aria-labelledby={null}
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style={
                                Object {
                                  "verticalAlign": "-0.125em",
                                }
                              }
                              viewBox="0 0 448 512"
                              width="1em"
                            >
                              <path
                                d="M313.941 216H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12h301.941v46.059c0 21.382 25.851 32.09 40.971 16.971l86.059-86.059c9.373-9.373 9.373-24.569 0-33.941l-86.059-86.059c-15.119-15.119-40.971-4.411-40.971 16.971V216z"
                              />
                            </svg>
                          </LongArrowAltRightIcon>
                        </button>
                      </Button>
                    </div>
                  </CardFooter>
                </article>
              </Card>
            </OutcomeCard>
          </div>
        </GalleryItem>
        <GalleryItem
          key="2"
        >
          <div>
            <OutcomeCard
              onExplanation={[MockFunction]}
              outcome={
                Object {
                  "evaluationStatus": "SUCCEEDED",
                  "hasErrors": false,
                  "messages": Array [],
                  "outcomeId": "_d361c79e-8c06-4504-bdb2-d6b90b915166",
                  "outcomeName": "Client Score",
                  "outcomeResult": Object {
                    "components": null,
                    "name": "Client Score",
                    "typeRef": "number",
                    "value": null,
                  },
                }
              }
            >
              <Card
                className="outcome-cards__card outcome-cards__card--list-view"
                isHoverable={true}
              >
                <article
                  className="pf-c-card pf-m-hoverable outcome-cards__card outcome-cards__card--list-view"
                  data-ouia-component-id="OUIA-Generated-Card-3"
                  data-ouia-component-type="PF4/Card"
                  data-ouia-safe={true}
                  id=""
                >
                  <CardHeader>
                    <div
                      className="pf-c-card__header"
                    >
                      <Title
                        className="outcome-cards__card__title"
                        headingLevel="h4"
                        size="xl"
                      >
                        <h4
                          className="pf-c-title pf-m-xl outcome-cards__card__title"
                        >
                          Client Score
                        </h4>
                      </Title>
                    </div>
                  </CardHeader>
                  <CardBody>
                    <div
                      className="pf-c-card__body"
                    >
                      <OutcomeProperty
                        hidePropertyName={true}
                        key="Client Score"
                        property={
                          Object {
                            "components": null,
                            "name": "Client Score",
                            "typeRef": "number",
                            "value": null,
                          }
                        }
                      >
                        <div
                          className="outcome__property__value--bigger"
                        >
                          <FormattedValue
                            value={null}
                          >
                            <span
                              className="formatted-value"
                            >
                              <em>
                                Null
                              </em>
                            </span>
                          </FormattedValue>
                        </div>
                      </OutcomeProperty>
                    </div>
                  </CardBody>
                  <CardFooter>
                    <div
                      className="pf-c-card__footer"
                    >
                      <Button
                        className="outcome-cards__card__explanation-link"
                        isInline={true}
                        onClick={[Function]}
                        variant="link"
                      >
                        <button
                          aria-disabled={false}
                          aria-label={null}
                          className="pf-c-button pf-m-link pf-m-inline outcome-cards__card__explanation-link"
                          data-ouia-component-id="OUIA-Generated-Button-link-3"
                          data-ouia-component-type="PF4/Button"
                          data-ouia-safe={true}
                          disabled={false}
                          onClick={[Function]}
                          role={null}
                          type="button"
                        >
                          View Details 
                          <LongArrowAltRightIcon
                            color="currentColor"
                            noVerticalAlign={false}
                            size="sm"
                          >
                            <svg
                              aria-hidden={true}
                              aria-labelledby={null}
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style={
                                Object {
                                  "verticalAlign": "-0.125em",
                                }
                              }
                              viewBox="0 0 448 512"
                              width="1em"
                            >
                              <path
                                d="M313.941 216H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12h301.941v46.059c0 21.382 25.851 32.09 40.971 16.971l86.059-86.059c9.373-9.373 9.373-24.569 0-33.941l-86.059-86.059c-15.119-15.119-40.971-4.411-40.971 16.971V216z"
                              />
                            </svg>
                          </LongArrowAltRightIcon>
                        </button>
                      </Button>
                    </div>
                  </CardFooter>
                </article>
              </Card>
            </OutcomeCard>
          </div>
        </GalleryItem>
      </div>
    </Gallery>
  </section>
</Outcomes>
`;

exports[`Outcomes renders a recommendation outcome as a list of cards 1`] = `
<Outcomes
  listView={true}
  onExplanationClick={[MockFunction]}
  outcomes={
    Array [
      Object {
        "evaluationStatus": "SUCCEEDED",
        "hasErrors": false,
        "messages": Array [],
        "outcomeId": "432343443",
        "outcomeName": "Recommended Loan Products",
        "outcomeResult": Object {
          "components": Array [
            Array [
              Object {
                "components": null,
                "name": "Product",
                "typeRef": "string",
                "value": "Lender B - ARM5/1-Standard",
              },
              Object {
                "components": null,
                "name": "Recommendation",
                "typeRef": "string",
                "value": "Good",
              },
              Object {
                "components": null,
                "name": "Note Amount",
                "typeRef": "string",
                "value": "$273,775.90",
              },
              Object {
                "components": null,
                "name": "Interest Rate",
                "typeRef": "string",
                "value": "3.8",
              },
              Object {
                "components": null,
                "name": "Monthly Payment",
                "typeRef": "string",
                "value": "$1,267.90",
              },
              Object {
                "components": null,
                "name": "Cash to Close",
                "typeRef": "string",
                "value": "$1,267.90",
              },
              Object {
                "components": null,
                "name": "Required Credit Score",
                "typeRef": "number",
                "value": 720,
              },
            ],
            Array [
              Object {
                "components": null,
                "name": "Product",
                "typeRef": "string",
                "value": "Lender C - Fixed30-Standard",
              },
              Object {
                "components": null,
                "name": "Recommendation",
                "typeRef": "string",
                "value": "Best",
              },
              Object {
                "components": null,
                "name": "Note Amount",
                "typeRef": "string",
                "value": "$274,599.40",
              },
              Object {
                "components": null,
                "name": "Interest Rate",
                "typeRef": "string",
                "value": "3.88",
              },
              Object {
                "components": null,
                "name": "Monthly Payment",
                "typeRef": "string",
                "value": "$1,291.27",
              },
              Object {
                "components": null,
                "name": "Cash to Close",
                "typeRef": "string",
                "value": "$75,491.99",
              },
              Object {
                "components": null,
                "name": "Required Credit Score",
                "typeRef": "number",
                "value": 680,
              },
            ],
          ],
          "name": "Recommended Loan Products",
          "typeRef": "tProducts",
          "value": null,
        },
      },
    ]
  }
>
  <section
    className="outcomes"
  >
    <Gallery
      className="outcome-cards"
      hasGutter={true}
    >
      <div
        className="pf-l-gallery pf-m-gutter outcome-cards"
      >
        <GalleryItem
          key="21"
        >
          <div>
            <OutcomeCard
              onExplanation={[MockFunction]}
              outcome={
                Object {
                  "evaluationStatus": "SUCCEEDED",
                  "hasErrors": false,
                  "messages": Array [],
                  "outcomeId": "432343443",
                  "outcomeName": "Recommended Loan Products",
                  "outcomeResult": Object {
                    "components": Array [
                      Array [
                        Object {
                          "components": null,
                          "name": "Product",
                          "typeRef": "string",
                          "value": "Lender B - ARM5/1-Standard",
                        },
                        Object {
                          "components": null,
                          "name": "Recommendation",
                          "typeRef": "string",
                          "value": "Good",
                        },
                        Object {
                          "components": null,
                          "name": "Note Amount",
                          "typeRef": "string",
                          "value": "$273,775.90",
                        },
                        Object {
                          "components": null,
                          "name": "Interest Rate",
                          "typeRef": "string",
                          "value": "3.8",
                        },
                        Object {
                          "components": null,
                          "name": "Monthly Payment",
                          "typeRef": "string",
                          "value": "$1,267.90",
                        },
                        Object {
                          "components": null,
                          "name": "Cash to Close",
                          "typeRef": "string",
                          "value": "$1,267.90",
                        },
                        Object {
                          "components": null,
                          "name": "Required Credit Score",
                          "typeRef": "number",
                          "value": 720,
                        },
                      ],
                      Array [
                        Object {
                          "components": null,
                          "name": "Product",
                          "typeRef": "string",
                          "value": "Lender C - Fixed30-Standard",
                        },
                        Object {
                          "components": null,
                          "name": "Recommendation",
                          "typeRef": "string",
                          "value": "Best",
                        },
                        Object {
                          "components": null,
                          "name": "Note Amount",
                          "typeRef": "string",
                          "value": "$274,599.40",
                        },
                        Object {
                          "components": null,
                          "name": "Interest Rate",
                          "typeRef": "string",
                          "value": "3.88",
                        },
                        Object {
                          "components": null,
                          "name": "Monthly Payment",
                          "typeRef": "string",
                          "value": "$1,291.27",
                        },
                        Object {
                          "components": null,
                          "name": "Cash to Close",
                          "typeRef": "string",
                          "value": "$75,491.99",
                        },
                        Object {
                          "components": null,
                          "name": "Required Credit Score",
                          "typeRef": "number",
                          "value": 680,
                        },
                      ],
                    ],
                    "name": "Recommended Loan Products",
                    "typeRef": "tProducts",
                    "value": null,
                  },
                }
              }
              titleAsLabel={true}
            >
              <Card
                className="outcome-cards__card outcome-cards__card--list-view"
                isHoverable={true}
              >
                <article
                  className="pf-c-card pf-m-hoverable outcome-cards__card outcome-cards__card--list-view"
                  data-ouia-component-id="OUIA-Generated-Card-9"
                  data-ouia-component-type="PF4/Card"
                  data-ouia-safe={true}
                  id=""
                >
                  <CardHeader>
                    <div
                      className="pf-c-card__header"
                    >
                      <Label
                        className="outcome-cards__card__label"
                        color="blue"
                      >
                        <span
                          className="pf-c-label pf-m-blue outcome-cards__card__label"
                        >
                          <span
                            className="pf-c-label__content"
                          >
                            Recommended Loan Products
                          </span>
                        </span>
                      </Label>
                    </div>
                  </CardHeader>
                  <CardBody>
                    <div
                      className="pf-c-card__body"
                    >
                      <OutcomeSubList
                        subListItem={
                          Array [
                            Object {
                              "components": null,
                              "name": "Product",
                              "typeRef": "string",
                              "value": "Lender B - ARM5/1-Standard",
                            },
                            Object {
                              "components": null,
                              "name": "Recommendation",
                              "typeRef": "string",
                              "value": "Good",
                            },
                            Object {
                              "components": null,
                              "name": "Note Amount",
                              "typeRef": "string",
                              "value": "$273,775.90",
                            },
                            Object {
                              "components": null,
                              "name": "Interest Rate",
                              "typeRef": "string",
                              "value": "3.8",
                            },
                            Object {
                              "components": null,
                              "name": "Monthly Payment",
                              "typeRef": "string",
                              "value": "$1,267.90",
                            },
                            Object {
                              "components": null,
                              "name": "Cash to Close",
                              "typeRef": "string",
                              "value": "$1,267.90",
                            },
                            Object {
                              "components": null,
                              "name": "Required Credit Score",
                              "typeRef": "number",
                              "value": 720,
                            },
                          ]
                        }
                      >
                        <Split
                          className="outcome__property"
                          key="23"
                        >
                          <div
                            className="pf-l-split outcome__property"
                          >
                            <SplitItem
                              className="outcome__property__name"
                              key="property-name"
                            >
                              <div
                                className="pf-l-split__item outcome__property__name"
                              >
                                Product
                                :
                              </div>
                            </SplitItem>
                            <SplitItem
                              className="outcome__property__value"
                              key="property-value"
                            >
                              <div
                                className="pf-l-split__item outcome__property__value"
                              >
                                <FormattedValue
                                  value="Lender B - ARM5/1-Standard"
                                >
                                  <span
                                    className="formatted-value"
                                  >
                                    Lender B - ARM5/1-Standard
                                  </span>
                                </FormattedValue>
                              </div>
                            </SplitItem>
                          </div>
                        </Split>
                        <Split
                          className="outcome__property"
                          key="24"
                        >
                          <div
                            className="pf-l-split outcome__property"
                          >
                            <SplitItem
                              className="outcome__property__name"
                              key="property-name"
                            >
                              <div
                                className="pf-l-split__item outcome__property__name"
                              >
                                Recommendation
                                :
                              </div>
                            </SplitItem>
                            <SplitItem
                              className="outcome__property__value"
                              key="property-value"
                            >
                              <div
                                className="pf-l-split__item outcome__property__value"
                              >
                                <FormattedValue
                                  value="Good"
                                >
                                  <span
                                    className="formatted-value"
                                  >
                                    Good
                                  </span>
                                </FormattedValue>
                              </div>
                            </SplitItem>
                          </div>
                        </Split>
                        <Split
                          className="outcome__property"
                          key="25"
                        >
                          <div
                            className="pf-l-split outcome__property"
                          >
                            <SplitItem
                              className="outcome__property__name"
                              key="property-name"
                            >
                              <div
                                className="pf-l-split__item outcome__property__name"
                              >
                                Note Amount
                                :
                              </div>
                            </SplitItem>
                            <SplitItem
                              className="outcome__property__value"
                              key="property-value"
                            >
                              <div
                                className="pf-l-split__item outcome__property__value"
                              >
                                <FormattedValue
                                  value="$273,775.90"
                                >
                                  <span
                                    className="formatted-value"
                                  >
                                    $273,775.90
                                  </span>
                                </FormattedValue>
                              </div>
                            </SplitItem>
                          </div>
                        </Split>
                        <Split
                          className="outcome__property"
                          key="26"
                        >
                          <div
                            className="pf-l-split outcome__property"
                          >
                            <SplitItem
                              className="outcome__property__name"
                              key="property-name"
                            >
                              <div
                                className="pf-l-split__item outcome__property__name"
                              >
                                Interest Rate
                                :
                              </div>
                            </SplitItem>
                            <SplitItem
                              className="outcome__property__value"
                              key="property-value"
                            >
                              <div
                                className="pf-l-split__item outcome__property__value"
                              >
                                <FormattedValue
                                  value="3.8"
                                >
                                  <span
                                    className="formatted-value"
                                  >
                                    3.8
                                  </span>
                                </FormattedValue>
                              </div>
                            </SplitItem>
                          </div>
                        </Split>
                        <Split
                          className="outcome__property"
                          key="27"
                        >
                          <div
                            className="pf-l-split outcome__property"
                          >
                            <SplitItem
                              className="outcome__property__name"
                              key="property-name"
                            >
                              <div
                                className="pf-l-split__item outcome__property__name"
                              >
                                Monthly Payment
                                :
                              </div>
                            </SplitItem>
                            <SplitItem
                              className="outcome__property__value"
                              key="property-value"
                            >
                              <div
                                className="pf-l-split__item outcome__property__value"
                              >
                                <FormattedValue
                                  value="$1,267.90"
                                >
                                  <span
                                    className="formatted-value"
                                  >
                                    $1,267.90
                                  </span>
                                </FormattedValue>
                              </div>
                            </SplitItem>
                          </div>
                        </Split>
                        <Split
                          className="outcome__property"
                          key="28"
                        >
                          <div
                            className="pf-l-split outcome__property"
                          >
                            <SplitItem
                              className="outcome__property__name"
                              key="property-name"
                            >
                              <div
                                className="pf-l-split__item outcome__property__name"
                              >
                                Cash to Close
                                :
                              </div>
                            </SplitItem>
                            <SplitItem
                              className="outcome__property__value"
                              key="property-value"
                            >
                              <div
                                className="pf-l-split__item outcome__property__value"
                              >
                                <FormattedValue
                                  value="$1,267.90"
                                >
                                  <span
                                    className="formatted-value"
                                  >
                                    $1,267.90
                                  </span>
                                </FormattedValue>
                              </div>
                            </SplitItem>
                          </div>
                        </Split>
                        <Split
                          className="outcome__property"
                          key="29"
                        >
                          <div
                            className="pf-l-split outcome__property"
                          >
                            <SplitItem
                              className="outcome__property__name"
                              key="property-name"
                            >
                              <div
                                className="pf-l-split__item outcome__property__name"
                              >
                                Required Credit Score
                                :
                              </div>
                            </SplitItem>
                            <SplitItem
                              className="outcome__property__value"
                              key="property-value"
                            >
                              <div
                                className="pf-l-split__item outcome__property__value"
                              >
                                <FormattedValue
                                  value={720}
                                >
                                  <span
                                    className="formatted-value"
                                  >
                                    720
                                  </span>
                                </FormattedValue>
                              </div>
                            </SplitItem>
                          </div>
                        </Split>
                      </OutcomeSubList>
                    </div>
                  </CardBody>
                  <CardFooter>
                    <div
                      className="pf-c-card__footer"
                    >
                      <Button
                        className="outcome-cards__card__explanation-link"
                        isInline={true}
                        onClick={[Function]}
                        variant="link"
                      >
                        <button
                          aria-disabled={false}
                          aria-label={null}
                          className="pf-c-button pf-m-link pf-m-inline outcome-cards__card__explanation-link"
                          data-ouia-component-id="OUIA-Generated-Button-link-9"
                          data-ouia-component-type="PF4/Button"
                          data-ouia-safe={true}
                          disabled={false}
                          onClick={[Function]}
                          role={null}
                          type="button"
                        >
                          View Details 
                          <LongArrowAltRightIcon
                            color="currentColor"
                            noVerticalAlign={false}
                            size="sm"
                          >
                            <svg
                              aria-hidden={true}
                              aria-labelledby={null}
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style={
                                Object {
                                  "verticalAlign": "-0.125em",
                                }
                              }
                              viewBox="0 0 448 512"
                              width="1em"
                            >
                              <path
                                d="M313.941 216H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12h301.941v46.059c0 21.382 25.851 32.09 40.971 16.971l86.059-86.059c9.373-9.373 9.373-24.569 0-33.941l-86.059-86.059c-15.119-15.119-40.971-4.411-40.971 16.971V216z"
                              />
                            </svg>
                          </LongArrowAltRightIcon>
                        </button>
                      </Button>
                    </div>
                  </CardFooter>
                </article>
              </Card>
            </OutcomeCard>
          </div>
        </GalleryItem>
        <GalleryItem
          key="22"
        >
          <div>
            <OutcomeCard
              onExplanation={[MockFunction]}
              outcome={
                Object {
                  "evaluationStatus": "SUCCEEDED",
                  "hasErrors": false,
                  "messages": Array [],
                  "outcomeId": "432343443",
                  "outcomeName": "Recommended Loan Products",
                  "outcomeResult": Object {
                    "components": Array [
                      Array [
                        Object {
                          "components": null,
                          "name": "Product",
                          "typeRef": "string",
                          "value": "Lender B - ARM5/1-Standard",
                        },
                        Object {
                          "components": null,
                          "name": "Recommendation",
                          "typeRef": "string",
                          "value": "Good",
                        },
                        Object {
                          "components": null,
                          "name": "Note Amount",
                          "typeRef": "string",
                          "value": "$273,775.90",
                        },
                        Object {
                          "components": null,
                          "name": "Interest Rate",
                          "typeRef": "string",
                          "value": "3.8",
                        },
                        Object {
                          "components": null,
                          "name": "Monthly Payment",
                          "typeRef": "string",
                          "value": "$1,267.90",
                        },
                        Object {
                          "components": null,
                          "name": "Cash to Close",
                          "typeRef": "string",
                          "value": "$1,267.90",
                        },
                        Object {
                          "components": null,
                          "name": "Required Credit Score",
                          "typeRef": "number",
                          "value": 720,
                        },
                      ],
                      Array [
                        Object {
                          "components": null,
                          "name": "Product",
                          "typeRef": "string",
                          "value": "Lender C - Fixed30-Standard",
                        },
                        Object {
                          "components": null,
                          "name": "Recommendation",
                          "typeRef": "string",
                          "value": "Best",
                        },
                        Object {
                          "components": null,
                          "name": "Note Amount",
                          "typeRef": "string",
                          "value": "$274,599.40",
                        },
                        Object {
                          "components": null,
                          "name": "Interest Rate",
                          "typeRef": "string",
                          "value": "3.88",
                        },
                        Object {
                          "components": null,
                          "name": "Monthly Payment",
                          "typeRef": "string",
                          "value": "$1,291.27",
                        },
                        Object {
                          "components": null,
                          "name": "Cash to Close",
                          "typeRef": "string",
                          "value": "$75,491.99",
                        },
                        Object {
                          "components": null,
                          "name": "Required Credit Score",
                          "typeRef": "number",
                          "value": 680,
                        },
                      ],
                    ],
                    "name": "Recommended Loan Products",
                    "typeRef": "tProducts",
                    "value": null,
                  },
                }
              }
              titleAsLabel={true}
            >
              <Card
                className="outcome-cards__card outcome-cards__card--list-view"
                isHoverable={true}
              >
                <article
                  className="pf-c-card pf-m-hoverable outcome-cards__card outcome-cards__card--list-view"
                  data-ouia-component-id="OUIA-Generated-Card-10"
                  data-ouia-component-type="PF4/Card"
                  data-ouia-safe={true}
                  id=""
                >
                  <CardHeader>
                    <div
                      className="pf-c-card__header"
                    >
                      <Label
                        className="outcome-cards__card__label"
                        color="blue"
                      >
                        <span
                          className="pf-c-label pf-m-blue outcome-cards__card__label"
                        >
                          <span
                            className="pf-c-label__content"
                          >
                            Recommended Loan Products
                          </span>
                        </span>
                      </Label>
                    </div>
                  </CardHeader>
                  <CardBody>
                    <div
                      className="pf-c-card__body"
                    >
                      <OutcomeSubList
                        subListItem={
                          Array [
                            Object {
                              "components": null,
                              "name": "Product",
                              "typeRef": "string",
                              "value": "Lender C - Fixed30-Standard",
                            },
                            Object {
                              "components": null,
                              "name": "Recommendation",
                              "typeRef": "string",
                              "value": "Best",
                            },
                            Object {
                              "components": null,
                              "name": "Note Amount",
                              "typeRef": "string",
                              "value": "$274,599.40",
                            },
                            Object {
                              "components": null,
                              "name": "Interest Rate",
                              "typeRef": "string",
                              "value": "3.88",
                            },
                            Object {
                              "components": null,
                              "name": "Monthly Payment",
                              "typeRef": "string",
                              "value": "$1,291.27",
                            },
                            Object {
                              "components": null,
                              "name": "Cash to Close",
                              "typeRef": "string",
                              "value": "$75,491.99",
                            },
                            Object {
                              "components": null,
                              "name": "Required Credit Score",
                              "typeRef": "number",
                              "value": 680,
                            },
                          ]
                        }
                      >
                        <Split
                          className="outcome__property"
                          key="30"
                        >
                          <div
                            className="pf-l-split outcome__property"
                          >
                            <SplitItem
                              className="outcome__property__name"
                              key="property-name"
                            >
                              <div
                                className="pf-l-split__item outcome__property__name"
                              >
                                Product
                                :
                              </div>
                            </SplitItem>
                            <SplitItem
                              className="outcome__property__value"
                              key="property-value"
                            >
                              <div
                                className="pf-l-split__item outcome__property__value"
                              >
                                <FormattedValue
                                  value="Lender C - Fixed30-Standard"
                                >
                                  <span
                                    className="formatted-value"
                                  >
                                    Lender C - Fixed30-Standard
                                  </span>
                                </FormattedValue>
                              </div>
                            </SplitItem>
                          </div>
                        </Split>
                        <Split
                          className="outcome__property"
                          key="31"
                        >
                          <div
                            className="pf-l-split outcome__property"
                          >
                            <SplitItem
                              className="outcome__property__name"
                              key="property-name"
                            >
                              <div
                                className="pf-l-split__item outcome__property__name"
                              >
                                Recommendation
                                :
                              </div>
                            </SplitItem>
                            <SplitItem
                              className="outcome__property__value"
                              key="property-value"
                            >
                              <div
                                className="pf-l-split__item outcome__property__value"
                              >
                                <FormattedValue
                                  value="Best"
                                >
                                  <span
                                    className="formatted-value"
                                  >
                                    Best
                                  </span>
                                </FormattedValue>
                              </div>
                            </SplitItem>
                          </div>
                        </Split>
                        <Split
                          className="outcome__property"
                          key="32"
                        >
                          <div
                            className="pf-l-split outcome__property"
                          >
                            <SplitItem
                              className="outcome__property__name"
                              key="property-name"
                            >
                              <div
                                className="pf-l-split__item outcome__property__name"
                              >
                                Note Amount
                                :
                              </div>
                            </SplitItem>
                            <SplitItem
                              className="outcome__property__value"
                              key="property-value"
                            >
                              <div
                                className="pf-l-split__item outcome__property__value"
                              >
                                <FormattedValue
                                  value="$274,599.40"
                                >
                                  <span
                                    className="formatted-value"
                                  >
                                    $274,599.40
                                  </span>
                                </FormattedValue>
                              </div>
                            </SplitItem>
                          </div>
                        </Split>
                        <Split
                          className="outcome__property"
                          key="33"
                        >
                          <div
                            className="pf-l-split outcome__property"
                          >
                            <SplitItem
                              className="outcome__property__name"
                              key="property-name"
                            >
                              <div
                                className="pf-l-split__item outcome__property__name"
                              >
                                Interest Rate
                                :
                              </div>
                            </SplitItem>
                            <SplitItem
                              className="outcome__property__value"
                              key="property-value"
                            >
                              <div
                                className="pf-l-split__item outcome__property__value"
                              >
                                <FormattedValue
                                  value="3.88"
                                >
                                  <span
                                    className="formatted-value"
                                  >
                                    3.88
                                  </span>
                                </FormattedValue>
                              </div>
                            </SplitItem>
                          </div>
                        </Split>
                        <Split
                          className="outcome__property"
                          key="34"
                        >
                          <div
                            className="pf-l-split outcome__property"
                          >
                            <SplitItem
                              className="outcome__property__name"
                              key="property-name"
                            >
                              <div
                                className="pf-l-split__item outcome__property__name"
                              >
                                Monthly Payment
                                :
                              </div>
                            </SplitItem>
                            <SplitItem
                              className="outcome__property__value"
                              key="property-value"
                            >
                              <div
                                className="pf-l-split__item outcome__property__value"
                              >
                                <FormattedValue
                                  value="$1,291.27"
                                >
                                  <span
                                    className="formatted-value"
                                  >
                                    $1,291.27
                                  </span>
                                </FormattedValue>
                              </div>
                            </SplitItem>
                          </div>
                        </Split>
                        <Split
                          className="outcome__property"
                          key="35"
                        >
                          <div
                            className="pf-l-split outcome__property"
                          >
                            <SplitItem
                              className="outcome__property__name"
                              key="property-name"
                            >
                              <div
                                className="pf-l-split__item outcome__property__name"
                              >
                                Cash to Close
                                :
                              </div>
                            </SplitItem>
                            <SplitItem
                              className="outcome__property__value"
                              key="property-value"
                            >
                              <div
                                className="pf-l-split__item outcome__property__value"
                              >
                                <FormattedValue
                                  value="$75,491.99"
                                >
                                  <span
                                    className="formatted-value"
                                  >
                                    $75,491.99
                                  </span>
                                </FormattedValue>
                              </div>
                            </SplitItem>
                          </div>
                        </Split>
                        <Split
                          className="outcome__property"
                          key="36"
                        >
                          <div
                            className="pf-l-split outcome__property"
                          >
                            <SplitItem
                              className="outcome__property__name"
                              key="property-name"
                            >
                              <div
                                className="pf-l-split__item outcome__property__name"
                              >
                                Required Credit Score
                                :
                              </div>
                            </SplitItem>
                            <SplitItem
                              className="outcome__property__value"
                              key="property-value"
                            >
                              <div
                                className="pf-l-split__item outcome__property__value"
                              >
                                <FormattedValue
                                  value={680}
                                >
                                  <span
                                    className="formatted-value"
                                  >
                                    680
                                  </span>
                                </FormattedValue>
                              </div>
                            </SplitItem>
                          </div>
                        </Split>
                      </OutcomeSubList>
                    </div>
                  </CardBody>
                  <CardFooter>
                    <div
                      className="pf-c-card__footer"
                    >
                      <Button
                        className="outcome-cards__card__explanation-link"
                        isInline={true}
                        onClick={[Function]}
                        variant="link"
                      >
                        <button
                          aria-disabled={false}
                          aria-label={null}
                          className="pf-c-button pf-m-link pf-m-inline outcome-cards__card__explanation-link"
                          data-ouia-component-id="OUIA-Generated-Button-link-10"
                          data-ouia-component-type="PF4/Button"
                          data-ouia-safe={true}
                          disabled={false}
                          onClick={[Function]}
                          role={null}
                          type="button"
                        >
                          View Details 
                          <LongArrowAltRightIcon
                            color="currentColor"
                            noVerticalAlign={false}
                            size="sm"
                          >
                            <svg
                              aria-hidden={true}
                              aria-labelledby={null}
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style={
                                Object {
                                  "verticalAlign": "-0.125em",
                                }
                              }
                              viewBox="0 0 448 512"
                              width="1em"
                            >
                              <path
                                d="M313.941 216H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12h301.941v46.059c0 21.382 25.851 32.09 40.971 16.971l86.059-86.059c9.373-9.373 9.373-24.569 0-33.941l-86.059-86.059c-15.119-15.119-40.971-4.411-40.971 16.971V216z"
                              />
                            </svg>
                          </LongArrowAltRightIcon>
                        </button>
                      </Button>
                    </div>
                  </CardFooter>
                </article>
              </Card>
            </OutcomeCard>
          </div>
        </GalleryItem>
      </div>
    </Gallery>
  </section>
</Outcomes>
`;

exports[`Outcomes renders a single outcome without the list view 1`] = `
<Outcomes
  outcomes={
    Array [
      Object {
        "evaluationStatus": "SUCCEEDED",
        "hasErrors": false,
        "messages": Array [],
        "outcomeId": "_12268B68-94A1-4960-B4C8-0B6071AFDE58",
        "outcomeName": "Mortgage Approval",
        "outcomeResult": Object {
          "components": null,
          "name": "Mortgage Approval",
          "typeRef": "boolean",
          "value": true,
        },
      },
    ]
  }
>
  <section
    className="outcomes"
  >
    <LightCard
      key="54"
    >
      <Card
        className=""
        isHoverable={false}
      >
        <article
          className="pf-c-card"
          data-ouia-component-id="OUIA-Generated-Card-13"
          data-ouia-component-type="PF4/Card"
          data-ouia-safe={true}
          id=""
        >
          <CardBody>
            <div
              className="pf-c-card__body"
            >
              <OutcomeProperty
                hidePropertyName={false}
                key="Mortgage Approval"
                property={
                  Object {
                    "components": null,
                    "name": "Mortgage Approval",
                    "typeRef": "boolean",
                    "value": true,
                  }
                }
              >
                <Split
                  className="outcome__property"
                  key="55"
                >
                  <div
                    className="pf-l-split outcome__property"
                  >
                    <SplitItem
                      className="outcome__property__name"
                      key="property-name"
                    >
                      <div
                        className="pf-l-split__item outcome__property__name"
                      >
                        Mortgage Approval
                        :
                      </div>
                    </SplitItem>
                    <SplitItem
                      className="outcome__property__value"
                      key="property-value"
                    >
                      <div
                        className="pf-l-split__item outcome__property__value"
                      >
                        <FormattedValue
                          value={true}
                        >
                          <span
                            className="formatted-value formatted-value--capitalize"
                          >
                            true
                          </span>
                        </FormattedValue>
                      </div>
                    </SplitItem>
                  </div>
                </Split>
              </OutcomeProperty>
            </div>
          </CardBody>
        </article>
      </Card>
    </LightCard>
  </section>
</Outcomes>
`;

exports[`Outcomes renders a skipped decision with no outcome 1`] = `
<Outcomes
  listView={true}
  onExplanationClick={[MockFunction]}
  outcomes={
    Array [
      Object {
        "evaluationStatus": "SKIPPED",
        "hasErrors": false,
        "messages": Array [],
        "outcomeId": "_1CFF8C35-4EB2-351E-874C-DB27A2A424C0",
        "outcomeName": "Bank Score",
        "outcomeResult": Object {},
      },
    ]
  }
>
  <section
    className="outcomes"
  >
    <Gallery
      className="outcome-cards"
      hasGutter={true}
    >
      <div
        className="pf-l-gallery pf-m-gutter outcome-cards"
      >
        <GalleryItem
          key="53"
        >
          <div>
            <OutcomeCard
              onExplanation={[MockFunction]}
              outcome={
                Object {
                  "evaluationStatus": "SKIPPED",
                  "hasErrors": false,
                  "messages": Array [],
                  "outcomeId": "_1CFF8C35-4EB2-351E-874C-DB27A2A424C0",
                  "outcomeName": "Bank Score",
                  "outcomeResult": Object {},
                }
              }
            >
              <Card
                className="outcome-cards__card outcome-cards__card--list-view"
                isHoverable={true}
              >
                <article
                  className="pf-c-card pf-m-hoverable outcome-cards__card outcome-cards__card--list-view"
                  data-ouia-component-id="OUIA-Generated-Card-12"
                  data-ouia-component-type="PF4/Card"
                  data-ouia-safe={true}
                  id=""
                >
                  <CardHeader>
                    <div
                      className="pf-c-card__header"
                    >
                      <Title
                        className="outcome-cards__card__title"
                        headingLevel="h4"
                        size="xl"
                      >
                        <h4
                          className="pf-c-title pf-m-xl outcome-cards__card__title"
                        >
                          Bank Score
                        </h4>
                      </Title>
                    </div>
                  </CardHeader>
                  <CardBody>
                    <div
                      className="pf-c-card__body"
                    >
                      <EvaluationStatus
                        status="SKIPPED"
                      >
                        <Label
                          color="red"
                          icon={
                            <FastForwardIcon
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                            />
                          }
                        >
                          <span
                            className="pf-c-label pf-m-red"
                          >
                            <span
                              className="pf-c-label__content"
                            >
                              <span
                                className="pf-c-label__icon"
                              >
                                <FastForwardIcon
                                  color="currentColor"
                                  noVerticalAlign={false}
                                  size="sm"
                                >
                                  <svg
                                    aria-hidden={true}
                                    aria-labelledby={null}
                                    fill="currentColor"
                                    height="1em"
                                    role="img"
                                    style={
                                      Object {
                                        "verticalAlign": "-0.125em",
                                      }
                                    }
                                    viewBox="0 0 512 512"
                                    width="1em"
                                  >
                                    <path
                                      d="M512 76v360c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12V284.1L276.5 440.6c-20.6 17.2-52.5 2.8-52.5-24.6V284.1L52.5 440.6C31.9 457.8 0 443.4 0 416V96c0-27.4 31.9-41.7 52.5-24.6L224 226.8V96c0-27.4 31.9-41.7 52.5-24.6L448 226.8V76c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12z"
                                    />
                                  </svg>
                                </FastForwardIcon>
                              </span>
                              <span>
                                Skipped
                              </span>
                            </span>
                          </span>
                        </Label>
                      </EvaluationStatus>
                      <span />
                    </div>
                  </CardBody>
                  <CardFooter>
                    <div
                      className="pf-c-card__footer"
                    >
                      <Button
                        className="outcome-cards__card__explanation-link"
                        isInline={true}
                        onClick={[Function]}
                        variant="link"
                      >
                        <button
                          aria-disabled={false}
                          aria-label={null}
                          className="pf-c-button pf-m-link pf-m-inline outcome-cards__card__explanation-link"
                          data-ouia-component-id="OUIA-Generated-Button-link-12"
                          data-ouia-component-type="PF4/Button"
                          data-ouia-safe={true}
                          disabled={false}
                          onClick={[Function]}
                          role={null}
                          type="button"
                        >
                          View Details 
                          <LongArrowAltRightIcon
                            color="currentColor"
                            noVerticalAlign={false}
                            size="sm"
                          >
                            <svg
                              aria-hidden={true}
                              aria-labelledby={null}
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style={
                                Object {
                                  "verticalAlign": "-0.125em",
                                }
                              }
                              viewBox="0 0 448 512"
                              width="1em"
                            >
                              <path
                                d="M313.941 216H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12h301.941v46.059c0 21.382 25.851 32.09 40.971 16.971l86.059-86.059c9.373-9.373 9.373-24.569 0-33.941l-86.059-86.059c-15.119-15.119-40.971-4.411-40.971 16.971V216z"
                              />
                            </svg>
                          </LongArrowAltRightIcon>
                        </button>
                      </Button>
                    </div>
                  </CardFooter>
                </article>
              </Card>
            </OutcomeCard>
          </div>
        </GalleryItem>
      </div>
    </Gallery>
  </section>
</Outcomes>
`;

exports[`Outcomes renders an outcome with a composed structure 1`] = `
<Outcomes
  listView={true}
  onExplanationClick={[MockFunction]}
  outcomes={
    Array [
      Object {
        "evaluationStatus": "SUCCEEDED",
        "hasErrors": false,
        "messages": Array [],
        "outcomeId": "849849489",
        "outcomeName": "Client Ratings",
        "outcomeResult": Object {
          "components": Array [
            Object {
              "components": Array [
                Object {
                  "components": null,
                  "name": "Loan Amount",
                  "typeRef": "number",
                  "value": 540000,
                },
                Object {
                  "components": null,
                  "name": "Repayment Rate",
                  "typeRef": "number",
                  "value": 900,
                },
                Object {
                  "components": null,
                  "name": "Loan Eligibility",
                  "typeRef": "boolean",
                  "value": true,
                },
              ],
              "name": "Rating Type A",
              "typeRef": "string",
              "value": null,
            },
            Object {
              "components": Array [
                Object {
                  "components": null,
                  "name": "Loan amount",
                  "typeRef": "number",
                  "value": 340000,
                },
                Object {
                  "components": null,
                  "name": "Repayment rate",
                  "typeRef": "number",
                  "value": 2000,
                },
                Object {
                  "components": Array [
                    Object {
                      "components": null,
                      "name": "Loan amount",
                      "typeRef": "number",
                      "value": 390000,
                    },
                    Object {
                      "components": null,
                      "name": "Repayment rate",
                      "typeRef": "number",
                      "value": 5000,
                    },
                  ],
                  "name": "Sub-Rating Type C",
                  "typeRef": "number",
                  "value": null,
                },
              ],
              "name": "Rating Type B",
              "typeRef": "number",
              "value": null,
            },
          ],
          "name": "Client Ratings",
          "typeRef": "tProducts",
          "value": null,
        },
      },
    ]
  }
>
  <section
    className="outcomes"
  >
    <Gallery
      className="outcome-cards"
      hasGutter={true}
    >
      <div
        className="pf-l-gallery pf-m-gutter outcome-cards"
      >
        <GalleryItem
          key="37"
        >
          <div>
            <OutcomeCard
              onExplanation={[MockFunction]}
              outcome={
                Object {
                  "evaluationStatus": "SUCCEEDED",
                  "hasErrors": false,
                  "messages": Array [],
                  "outcomeId": "849849489",
                  "outcomeName": "Client Ratings",
                  "outcomeResult": Object {
                    "components": Array [
                      Object {
                        "components": Array [
                          Object {
                            "components": null,
                            "name": "Loan Amount",
                            "typeRef": "number",
                            "value": 540000,
                          },
                          Object {
                            "components": null,
                            "name": "Repayment Rate",
                            "typeRef": "number",
                            "value": 900,
                          },
                          Object {
                            "components": null,
                            "name": "Loan Eligibility",
                            "typeRef": "boolean",
                            "value": true,
                          },
                        ],
                        "name": "Rating Type A",
                        "typeRef": "string",
                        "value": null,
                      },
                      Object {
                        "components": Array [
                          Object {
                            "components": null,
                            "name": "Loan amount",
                            "typeRef": "number",
                            "value": 340000,
                          },
                          Object {
                            "components": null,
                            "name": "Repayment rate",
                            "typeRef": "number",
                            "value": 2000,
                          },
                          Object {
                            "components": Array [
                              Object {
                                "components": null,
                                "name": "Loan amount",
                                "typeRef": "number",
                                "value": 390000,
                              },
                              Object {
                                "components": null,
                                "name": "Repayment rate",
                                "typeRef": "number",
                                "value": 5000,
                              },
                            ],
                            "name": "Sub-Rating Type C",
                            "typeRef": "number",
                            "value": null,
                          },
                        ],
                        "name": "Rating Type B",
                        "typeRef": "number",
                        "value": null,
                      },
                    ],
                    "name": "Client Ratings",
                    "typeRef": "tProducts",
                    "value": null,
                  },
                }
              }
            >
              <Card
                className="outcome-cards__card outcome-cards__card--list-view"
                isHoverable={true}
              >
                <article
                  className="pf-c-card pf-m-hoverable outcome-cards__card outcome-cards__card--list-view"
                  data-ouia-component-id="OUIA-Generated-Card-11"
                  data-ouia-component-type="PF4/Card"
                  data-ouia-safe={true}
                  id=""
                >
                  <CardHeader>
                    <div
                      className="pf-c-card__header"
                    >
                      <Title
                        className="outcome-cards__card__title"
                        headingLevel="h4"
                        size="xl"
                      >
                        <h4
                          className="pf-c-title pf-m-xl outcome-cards__card__title"
                        >
                          Client Ratings
                        </h4>
                      </Title>
                    </div>
                  </CardHeader>
                  <CardBody>
                    <div
                      className="pf-c-card__body"
                    >
                      <OutcomeComposed
                        compact={true}
                        key="Client Ratings"
                        name="Client Ratings"
                        outcome={
                          Object {
                            "components": Array [
                              Object {
                                "components": Array [
                                  Object {
                                    "components": null,
                                    "name": "Loan Amount",
                                    "typeRef": "number",
                                    "value": 540000,
                                  },
                                  Object {
                                    "components": null,
                                    "name": "Repayment Rate",
                                    "typeRef": "number",
                                    "value": 900,
                                  },
                                  Object {
                                    "components": null,
                                    "name": "Loan Eligibility",
                                    "typeRef": "boolean",
                                    "value": true,
                                  },
                                ],
                                "name": "Rating Type A",
                                "typeRef": "string",
                                "value": null,
                              },
                              Object {
                                "components": Array [
                                  Object {
                                    "components": null,
                                    "name": "Loan amount",
                                    "typeRef": "number",
                                    "value": 340000,
                                  },
                                  Object {
                                    "components": null,
                                    "name": "Repayment rate",
                                    "typeRef": "number",
                                    "value": 2000,
                                  },
                                  Object {
                                    "components": Array [
                                      Object {
                                        "components": null,
                                        "name": "Loan amount",
                                        "typeRef": "number",
                                        "value": 390000,
                                      },
                                      Object {
                                        "components": null,
                                        "name": "Repayment rate",
                                        "typeRef": "number",
                                        "value": 5000,
                                      },
                                    ],
                                    "name": "Sub-Rating Type C",
                                    "typeRef": "number",
                                    "value": null,
                                  },
                                ],
                                "name": "Rating Type B",
                                "typeRef": "number",
                                "value": null,
                              },
                            ],
                            "name": "Client Ratings",
                            "typeRef": "tProducts",
                            "value": null,
                          }
                        }
                      >
                        <div
                          className="outcome__title outcome__title--struct"
                          key="41"
                        >
                          <span
                            className="outcome__property__name"
                          >
                            Client Ratings
                          </span>
                        </div>
                        <div
                          className="outcome outcome--struct"
                          key="Client Ratings"
                        >
                          <div
                            className="outcome-item"
                            key="Rating Type A"
                          >
                            <OutcomeComposed
                              compact={true}
                              key="Rating Type A"
                              name="Client Ratings"
                              outcome={
                                Object {
                                  "components": Array [
                                    Object {
                                      "components": null,
                                      "name": "Loan Amount",
                                      "typeRef": "number",
                                      "value": 540000,
                                    },
                                    Object {
                                      "components": null,
                                      "name": "Repayment Rate",
                                      "typeRef": "number",
                                      "value": 900,
                                    },
                                    Object {
                                      "components": null,
                                      "name": "Loan Eligibility",
                                      "typeRef": "boolean",
                                      "value": true,
                                    },
                                  ],
                                  "name": "Rating Type A",
                                  "typeRef": "string",
                                  "value": null,
                                }
                              }
                            >
                              <div
                                className="outcome__title outcome__title--struct"
                                key="42"
                              >
                                <span
                                  className="outcome__property__name"
                                >
                                  Rating Type A
                                </span>
                              </div>
                              <div
                                className="outcome outcome--struct"
                                key="Rating Type A"
                              >
                                <div
                                  className="outcome-item"
                                  key="Loan Amount"
                                >
                                  <OutcomeProperty
                                    hidePropertyName={false}
                                    key="Loan Amount"
                                    property={
                                      Object {
                                        "components": null,
                                        "name": "Loan Amount",
                                        "typeRef": "number",
                                        "value": 540000,
                                      }
                                    }
                                  >
                                    <Split
                                      className="outcome__property"
                                      key="43"
                                    >
                                      <div
                                        className="pf-l-split outcome__property"
                                      >
                                        <SplitItem
                                          className="outcome__property__name"
                                          key="property-name"
                                        >
                                          <div
                                            className="pf-l-split__item outcome__property__name"
                                          >
                                            Loan Amount
                                            :
                                          </div>
                                        </SplitItem>
                                        <SplitItem
                                          className="outcome__property__value"
                                          key="property-value"
                                        >
                                          <div
                                            className="pf-l-split__item outcome__property__value"
                                          >
                                            <FormattedValue
                                              value={540000}
                                            >
                                              <span
                                                className="formatted-value"
                                              >
                                                540000
                                              </span>
                                            </FormattedValue>
                                          </div>
                                        </SplitItem>
                                      </div>
                                    </Split>
                                  </OutcomeProperty>
                                </div>
                                <div
                                  className="outcome-item"
                                  key="Repayment Rate"
                                >
                                  <OutcomeProperty
                                    hidePropertyName={false}
                                    key="Repayment Rate"
                                    property={
                                      Object {
                                        "components": null,
                                        "name": "Repayment Rate",
                                        "typeRef": "number",
                                        "value": 900,
                                      }
                                    }
                                  >
                                    <Split
                                      className="outcome__property"
                                      key="44"
                                    >
                                      <div
                                        className="pf-l-split outcome__property"
                                      >
                                        <SplitItem
                                          className="outcome__property__name"
                                          key="property-name"
                                        >
                                          <div
                                            className="pf-l-split__item outcome__property__name"
                                          >
                                            Repayment Rate
                                            :
                                          </div>
                                        </SplitItem>
                                        <SplitItem
                                          className="outcome__property__value"
                                          key="property-value"
                                        >
                                          <div
                                            className="pf-l-split__item outcome__property__value"
                                          >
                                            <FormattedValue
                                              value={900}
                                            >
                                              <span
                                                className="formatted-value"
                                              >
                                                900
                                              </span>
                                            </FormattedValue>
                                          </div>
                                        </SplitItem>
                                      </div>
                                    </Split>
                                  </OutcomeProperty>
                                </div>
                                <div
                                  className="outcome-item"
                                  key="Loan Eligibility"
                                >
                                  <OutcomeProperty
                                    hidePropertyName={false}
                                    key="Loan Eligibility"
                                    property={
                                      Object {
                                        "components": null,
                                        "name": "Loan Eligibility",
                                        "typeRef": "boolean",
                                        "value": true,
                                      }
                                    }
                                  >
                                    <Split
                                      className="outcome__property"
                                      key="45"
                                    >
                                      <div
                                        className="pf-l-split outcome__property"
                                      >
                                        <SplitItem
                                          className="outcome__property__name"
                                          key="property-name"
                                        >
                                          <div
                                            className="pf-l-split__item outcome__property__name"
                                          >
                                            Loan Eligibility
                                            :
                                          </div>
                                        </SplitItem>
                                        <SplitItem
                                          className="outcome__property__value"
                                          key="property-value"
                                        >
                                          <div
                                            className="pf-l-split__item outcome__property__value"
                                          >
                                            <FormattedValue
                                              value={true}
                                            >
                                              <span
                                                className="formatted-value formatted-value--capitalize"
                                              >
                                                true
                                              </span>
                                            </FormattedValue>
                                          </div>
                                        </SplitItem>
                                      </div>
                                    </Split>
                                  </OutcomeProperty>
                                </div>
                              </div>
                            </OutcomeComposed>
                          </div>
                          <div
                            className="outcome-item"
                            key="Rating Type B"
                          >
                            <OutcomeComposed
                              compact={true}
                              key="Rating Type B"
                              name="Client Ratings"
                              outcome={
                                Object {
                                  "components": Array [
                                    Object {
                                      "components": null,
                                      "name": "Loan amount",
                                      "typeRef": "number",
                                      "value": 340000,
                                    },
                                    Object {
                                      "components": null,
                                      "name": "Repayment rate",
                                      "typeRef": "number",
                                      "value": 2000,
                                    },
                                    Object {
                                      "components": Array [
                                        Object {
                                          "components": null,
                                          "name": "Loan amount",
                                          "typeRef": "number",
                                          "value": 390000,
                                        },
                                        Object {
                                          "components": null,
                                          "name": "Repayment rate",
                                          "typeRef": "number",
                                          "value": 5000,
                                        },
                                      ],
                                      "name": "Sub-Rating Type C",
                                      "typeRef": "number",
                                      "value": null,
                                    },
                                  ],
                                  "name": "Rating Type B",
                                  "typeRef": "number",
                                  "value": null,
                                }
                              }
                            >
                              <div
                                className="outcome__title outcome__title--struct"
                                key="47"
                              >
                                <span
                                  className="outcome__property__name"
                                >
                                  Rating Type B
                                </span>
                              </div>
                              <div
                                className="outcome outcome--struct"
                                key="Rating Type B"
                              >
                                <div
                                  className="outcome-item"
                                  key="Loan amount"
                                >
                                  <OutcomeProperty
                                    hidePropertyName={false}
                                    key="Loan amount"
                                    property={
                                      Object {
                                        "components": null,
                                        "name": "Loan amount",
                                        "typeRef": "number",
                                        "value": 340000,
                                      }
                                    }
                                  >
                                    <Split
                                      className="outcome__property"
                                      key="48"
                                    >
                                      <div
                                        className="pf-l-split outcome__property"
                                      >
                                        <SplitItem
                                          className="outcome__property__name"
                                          key="property-name"
                                        >
                                          <div
                                            className="pf-l-split__item outcome__property__name"
                                          >
                                            Loan amount
                                            :
                                          </div>
                                        </SplitItem>
                                        <SplitItem
                                          className="outcome__property__value"
                                          key="property-value"
                                        >
                                          <div
                                            className="pf-l-split__item outcome__property__value"
                                          >
                                            <FormattedValue
                                              value={340000}
                                            >
                                              <span
                                                className="formatted-value"
                                              >
                                                340000
                                              </span>
                                            </FormattedValue>
                                          </div>
                                        </SplitItem>
                                      </div>
                                    </Split>
                                  </OutcomeProperty>
                                </div>
                                <div
                                  className="outcome-item"
                                  key="Repayment rate"
                                >
                                  <OutcomeProperty
                                    hidePropertyName={false}
                                    key="Repayment rate"
                                    property={
                                      Object {
                                        "components": null,
                                        "name": "Repayment rate",
                                        "typeRef": "number",
                                        "value": 2000,
                                      }
                                    }
                                  >
                                    <Split
                                      className="outcome__property"
                                      key="49"
                                    >
                                      <div
                                        className="pf-l-split outcome__property"
                                      >
                                        <SplitItem
                                          className="outcome__property__name"
                                          key="property-name"
                                        >
                                          <div
                                            className="pf-l-split__item outcome__property__name"
                                          >
                                            Repayment rate
                                            :
                                          </div>
                                        </SplitItem>
                                        <SplitItem
                                          className="outcome__property__value"
                                          key="property-value"
                                        >
                                          <div
                                            className="pf-l-split__item outcome__property__value"
                                          >
                                            <FormattedValue
                                              value={2000}
                                            >
                                              <span
                                                className="formatted-value"
                                              >
                                                2000
                                              </span>
                                            </FormattedValue>
                                          </div>
                                        </SplitItem>
                                      </div>
                                    </Split>
                                  </OutcomeProperty>
                                </div>
                                <div
                                  className="outcome-item"
                                  key="Sub-Rating Type C"
                                >
                                  <OutcomeComposed
                                    compact={true}
                                    key="Sub-Rating Type C"
                                    name="Client Ratings"
                                    outcome={
                                      Object {
                                        "components": Array [
                                          Object {
                                            "components": null,
                                            "name": "Loan amount",
                                            "typeRef": "number",
                                            "value": 390000,
                                          },
                                          Object {
                                            "components": null,
                                            "name": "Repayment rate",
                                            "typeRef": "number",
                                            "value": 5000,
                                          },
                                        ],
                                        "name": "Sub-Rating Type C",
                                        "typeRef": "number",
                                        "value": null,
                                      }
                                    }
                                  >
                                    <div
                                      className="outcome__title outcome__title--struct"
                                      key="50"
                                    >
                                      <span
                                        className="outcome__property__name"
                                      >
                                        Sub-Rating Type C
                                      </span>
                                    </div>
                                    <div
                                      className="outcome outcome--struct"
                                      key="Sub-Rating Type C"
                                    >
                                      <div
                                        className="outcome-item"
                                        key="Loan amount"
                                      >
                                        <OutcomeProperty
                                          hidePropertyName={false}
                                          key="Loan amount"
                                          property={
                                            Object {
                                              "components": null,
                                              "name": "Loan amount",
                                              "typeRef": "number",
                                              "value": 390000,
                                            }
                                          }
                                        >
                                          <Split
                                            className="outcome__property"
                                            key="51"
                                          >
                                            <div
                                              className="pf-l-split outcome__property"
                                            >
                                              <SplitItem
                                                className="outcome__property__name"
                                                key="property-name"
                                              >
                                                <div
                                                  className="pf-l-split__item outcome__property__name"
                                                >
                                                  Loan amount
                                                  :
                                                </div>
                                              </SplitItem>
                                              <SplitItem
                                                className="outcome__property__value"
                                                key="property-value"
                                              >
                                                <div
                                                  className="pf-l-split__item outcome__property__value"
                                                >
                                                  <FormattedValue
                                                    value={390000}
                                                  >
                                                    <span
                                                      className="formatted-value"
                                                    >
                                                      390000
                                                    </span>
                                                  </FormattedValue>
                                                </div>
                                              </SplitItem>
                                            </div>
                                          </Split>
                                        </OutcomeProperty>
                                      </div>
                                      <div
                                        className="outcome-item"
                                        key="Repayment rate"
                                      >
                                        <OutcomeProperty
                                          hidePropertyName={false}
                                          key="Repayment rate"
                                          property={
                                            Object {
                                              "components": null,
                                              "name": "Repayment rate",
                                              "typeRef": "number",
                                              "value": 5000,
                                            }
                                          }
                                        >
                                          <Split
                                            className="outcome__property"
                                            key="52"
                                          >
                                            <div
                                              className="pf-l-split outcome__property"
                                            >
                                              <SplitItem
                                                className="outcome__property__name"
                                                key="property-name"
                                              >
                                                <div
                                                  className="pf-l-split__item outcome__property__name"
                                                >
                                                  Repayment rate
                                                  :
                                                </div>
                                              </SplitItem>
                                              <SplitItem
                                                className="outcome__property__value"
                                                key="property-value"
                                              >
                                                <div
                                                  className="pf-l-split__item outcome__property__value"
                                                >
                                                  <FormattedValue
                                                    value={5000}
                                                  >
                                                    <span
                                                      className="formatted-value"
                                                    >
                                                      5000
                                                    </span>
                                                  </FormattedValue>
                                                </div>
                                              </SplitItem>
                                            </div>
                                          </Split>
                                        </OutcomeProperty>
                                      </div>
                                    </div>
                                  </OutcomeComposed>
                                </div>
                              </div>
                            </OutcomeComposed>
                          </div>
                        </div>
                      </OutcomeComposed>
                    </div>
                  </CardBody>
                  <CardFooter>
                    <div
                      className="pf-c-card__footer"
                    >
                      <Button
                        className="outcome-cards__card__explanation-link"
                        isInline={true}
                        onClick={[Function]}
                        variant="link"
                      >
                        <button
                          aria-disabled={false}
                          aria-label={null}
                          className="pf-c-button pf-m-link pf-m-inline outcome-cards__card__explanation-link"
                          data-ouia-component-id="OUIA-Generated-Button-link-11"
                          data-ouia-component-type="PF4/Button"
                          data-ouia-safe={true}
                          disabled={false}
                          onClick={[Function]}
                          role={null}
                          type="button"
                        >
                          View Details 
                          <LongArrowAltRightIcon
                            color="currentColor"
                            noVerticalAlign={false}
                            size="sm"
                          >
                            <svg
                              aria-hidden={true}
                              aria-labelledby={null}
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style={
                                Object {
                                  "verticalAlign": "-0.125em",
                                }
                              }
                              viewBox="0 0 448 512"
                              width="1em"
                            >
                              <path
                                d="M313.941 216H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12h301.941v46.059c0 21.382 25.851 32.09 40.971 16.971l86.059-86.059c9.373-9.373 9.373-24.569 0-33.941l-86.059-86.059c-15.119-15.119-40.971-4.411-40.971 16.971V216z"
                              />
                            </svg>
                          </LongArrowAltRightIcon>
                        </button>
                      </Button>
                    </div>
                  </CardFooter>
                </article>
              </Card>
            </OutcomeCard>
          </div>
        </GalleryItem>
      </div>
    </Gallery>
  </section>
</Outcomes>
`;

exports[`Outcomes renders an outcome with a list of properties 1`] = `
<Outcomes
  listView={true}
  onExplanationClick={[MockFunction]}
  outcomes={
    Array [
      Object {
        "evaluationStatus": "SUCCEEDED",
        "hasErrors": false,
        "messages": Array [],
        "outcomeId": "_d361c79e-8c06-4504-bdb2-d6b90b915166",
        "outcomeName": "Last Transaction",
        "outcomeResult": Object {
          "components": Array [
            Object {
              "components": null,
              "name": "Auth Code",
              "typeRef": "tAuthCode",
              "value": "Authorized",
            },
            Object {
              "components": null,
              "name": "Amount",
              "typeRef": "number",
              "value": 10000,
            },
          ],
          "name": "Last Transaction",
          "typeRef": "tTransaction",
          "value": null,
        },
      },
    ]
  }
>
  <section
    className="outcomes"
  >
    <Gallery
      className="outcome-cards"
      hasGutter={true}
    >
      <div
        className="pf-l-gallery pf-m-gutter outcome-cards"
      >
        <GalleryItem
          key="6"
        >
          <div>
            <OutcomeCard
              onExplanation={[MockFunction]}
              outcome={
                Object {
                  "evaluationStatus": "SUCCEEDED",
                  "hasErrors": false,
                  "messages": Array [],
                  "outcomeId": "_d361c79e-8c06-4504-bdb2-d6b90b915166",
                  "outcomeName": "Last Transaction",
                  "outcomeResult": Object {
                    "components": Array [
                      Object {
                        "components": null,
                        "name": "Auth Code",
                        "typeRef": "tAuthCode",
                        "value": "Authorized",
                      },
                      Object {
                        "components": null,
                        "name": "Amount",
                        "typeRef": "number",
                        "value": 10000,
                      },
                    ],
                    "name": "Last Transaction",
                    "typeRef": "tTransaction",
                    "value": null,
                  },
                }
              }
            >
              <Card
                className="outcome-cards__card outcome-cards__card--list-view"
                isHoverable={true}
              >
                <article
                  className="pf-c-card pf-m-hoverable outcome-cards__card outcome-cards__card--list-view"
                  data-ouia-component-id="OUIA-Generated-Card-7"
                  data-ouia-component-type="PF4/Card"
                  data-ouia-safe={true}
                  id=""
                >
                  <CardHeader>
                    <div
                      className="pf-c-card__header"
                    >
                      <Title
                        className="outcome-cards__card__title"
                        headingLevel="h4"
                        size="xl"
                      >
                        <h4
                          className="pf-c-title pf-m-xl outcome-cards__card__title"
                        >
                          Last Transaction
                        </h4>
                      </Title>
                    </div>
                  </CardHeader>
                  <CardBody>
                    <div
                      className="pf-c-card__body"
                    >
                      <OutcomeComposed
                        compact={true}
                        key="Last Transaction"
                        name="Last Transaction"
                        outcome={
                          Object {
                            "components": Array [
                              Object {
                                "components": null,
                                "name": "Auth Code",
                                "typeRef": "tAuthCode",
                                "value": "Authorized",
                              },
                              Object {
                                "components": null,
                                "name": "Amount",
                                "typeRef": "number",
                                "value": 10000,
                              },
                            ],
                            "name": "Last Transaction",
                            "typeRef": "tTransaction",
                            "value": null,
                          }
                        }
                      >
                        <div
                          className="outcome__title outcome__title--struct"
                          key="8"
                        >
                          <span
                            className="outcome__property__name"
                          >
                            Last Transaction
                          </span>
                        </div>
                        <div
                          className="outcome outcome--struct"
                          key="Last Transaction"
                        >
                          <div
                            className="outcome-item"
                            key="Auth Code"
                          >
                            <OutcomeProperty
                              hidePropertyName={false}
                              key="Auth Code"
                              property={
                                Object {
                                  "components": null,
                                  "name": "Auth Code",
                                  "typeRef": "tAuthCode",
                                  "value": "Authorized",
                                }
                              }
                            >
                              <Split
                                className="outcome__property"
                                key="9"
                              >
                                <div
                                  className="pf-l-split outcome__property"
                                >
                                  <SplitItem
                                    className="outcome__property__name"
                                    key="property-name"
                                  >
                                    <div
                                      className="pf-l-split__item outcome__property__name"
                                    >
                                      Auth Code
                                      :
                                    </div>
                                  </SplitItem>
                                  <SplitItem
                                    className="outcome__property__value"
                                    key="property-value"
                                  >
                                    <div
                                      className="pf-l-split__item outcome__property__value"
                                    >
                                      <FormattedValue
                                        value="Authorized"
                                      >
                                        <span
                                          className="formatted-value"
                                        >
                                          Authorized
                                        </span>
                                      </FormattedValue>
                                    </div>
                                  </SplitItem>
                                </div>
                              </Split>
                            </OutcomeProperty>
                          </div>
                          <div
                            className="outcome-item"
                            key="Amount"
                          >
                            <OutcomeProperty
                              hidePropertyName={false}
                              key="Amount"
                              property={
                                Object {
                                  "components": null,
                                  "name": "Amount",
                                  "typeRef": "number",
                                  "value": 10000,
                                }
                              }
                            >
                              <Split
                                className="outcome__property"
                                key="10"
                              >
                                <div
                                  className="pf-l-split outcome__property"
                                >
                                  <SplitItem
                                    className="outcome__property__name"
                                    key="property-name"
                                  >
                                    <div
                                      className="pf-l-split__item outcome__property__name"
                                    >
                                      Amount
                                      :
                                    </div>
                                  </SplitItem>
                                  <SplitItem
                                    className="outcome__property__value"
                                    key="property-value"
                                  >
                                    <div
                                      className="pf-l-split__item outcome__property__value"
                                    >
                                      <FormattedValue
                                        value={10000}
                                      >
                                        <span
                                          className="formatted-value"
                                        >
                                          10000
                                        </span>
                                      </FormattedValue>
                                    </div>
                                  </SplitItem>
                                </div>
                              </Split>
                            </OutcomeProperty>
                          </div>
                        </div>
                      </OutcomeComposed>
                    </div>
                  </CardBody>
                  <CardFooter>
                    <div
                      className="pf-c-card__footer"
                    >
                      <Button
                        className="outcome-cards__card__explanation-link"
                        isInline={true}
                        onClick={[Function]}
                        variant="link"
                      >
                        <button
                          aria-disabled={false}
                          aria-label={null}
                          className="pf-c-button pf-m-link pf-m-inline outcome-cards__card__explanation-link"
                          data-ouia-component-id="OUIA-Generated-Button-link-7"
                          data-ouia-component-type="PF4/Button"
                          data-ouia-safe={true}
                          disabled={false}
                          onClick={[Function]}
                          role={null}
                          type="button"
                        >
                          View Details 
                          <LongArrowAltRightIcon
                            color="currentColor"
                            noVerticalAlign={false}
                            size="sm"
                          >
                            <svg
                              aria-hidden={true}
                              aria-labelledby={null}
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style={
                                Object {
                                  "verticalAlign": "-0.125em",
                                }
                              }
                              viewBox="0 0 448 512"
                              width="1em"
                            >
                              <path
                                d="M313.941 216H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12h301.941v46.059c0 21.382 25.851 32.09 40.971 16.971l86.059-86.059c9.373-9.373 9.373-24.569 0-33.941l-86.059-86.059c-15.119-15.119-40.971-4.411-40.971 16.971V216z"
                              />
                            </svg>
                          </LongArrowAltRightIcon>
                        </button>
                      </Button>
                    </div>
                  </CardFooter>
                </article>
              </Card>
            </OutcomeCard>
          </div>
        </GalleryItem>
      </div>
    </Gallery>
  </section>
</Outcomes>
`;

exports[`Outcomes renders an outcome with an array of values 1`] = `
<Outcomes
  listView={true}
  onExplanationClick={[MockFunction]}
  outcomes={
    Array [
      Object {
        "evaluationStatus": "SUCCEEDED",
        "hasErrors": false,
        "messages": Array [],
        "outcomeId": "_ff34378e-fe90-4c58-9f7f-b9ce5767a415",
        "outcomeName": "Merchant Blacklist",
        "outcomeResult": Object {
          "components": null,
          "name": "Merchant Blacklist",
          "typeRef": "string",
          "value": Array [
            "ILLICITCORP",
            "SLIMSHADY",
            "TAINTEDTHINGS",
          ],
        },
      },
    ]
  }
>
  <section
    className="outcomes"
  >
    <Gallery
      className="outcome-cards"
      hasGutter={true}
    >
      <div
        className="pf-l-gallery pf-m-gutter outcome-cards"
      >
        <GalleryItem
          key="11"
        >
          <div>
            <OutcomeCard
              onExplanation={[MockFunction]}
              outcome={
                Object {
                  "evaluationStatus": "SUCCEEDED",
                  "hasErrors": false,
                  "messages": Array [],
                  "outcomeId": "_ff34378e-fe90-4c58-9f7f-b9ce5767a415",
                  "outcomeName": "Merchant Blacklist",
                  "outcomeResult": Object {
                    "components": null,
                    "name": "Merchant Blacklist",
                    "typeRef": "string",
                    "value": Array [
                      "ILLICITCORP",
                      "SLIMSHADY",
                      "TAINTEDTHINGS",
                    ],
                  },
                }
              }
            >
              <Card
                className="outcome-cards__card outcome-cards__card--list-view"
                isHoverable={true}
              >
                <article
                  className="pf-c-card pf-m-hoverable outcome-cards__card outcome-cards__card--list-view"
                  data-ouia-component-id="OUIA-Generated-Card-8"
                  data-ouia-component-type="PF4/Card"
                  data-ouia-safe={true}
                  id=""
                >
                  <CardHeader>
                    <div
                      className="pf-c-card__header"
                    >
                      <Title
                        className="outcome-cards__card__title"
                        headingLevel="h4"
                        size="xl"
                      >
                        <h4
                          className="pf-c-title pf-m-xl outcome-cards__card__title"
                        >
                          Merchant Blacklist
                        </h4>
                      </Title>
                    </div>
                  </CardHeader>
                  <CardBody>
                    <div
                      className="pf-c-card__body"
                    >
                      <OutcomeProperty
                        hidePropertyName={true}
                        key="Merchant Blacklist"
                        property={
                          Object {
                            "components": null,
                            "name": "Merchant Blacklist",
                            "typeRef": "string",
                            "value": Array [
                              "ILLICITCORP",
                              "SLIMSHADY",
                              "TAINTEDTHINGS",
                            ],
                          }
                        }
                      >
                        <Split
                          className="outcome__property"
                          key="12"
                        >
                          <div
                            className="pf-l-split outcome__property"
                          >
                            <SplitItem
                              className="outcome__property__name"
                              key="property-name"
                            >
                              <div
                                className="pf-l-split__item outcome__property__name"
                              >
                                Result
                                :
                              </div>
                            </SplitItem>
                            <SplitItem
                              className="outcome__property__value"
                              key="property-value"
                            >
                              <div
                                className="pf-l-split__item outcome__property__value"
                              >
                                <FormattedValue
                                  value={
                                    Array [
                                      "ILLICITCORP",
                                      "SLIMSHADY",
                                      "TAINTEDTHINGS",
                                    ]
                                  }
                                >
                                  <span
                                    className="formatted-value"
                                  >
                                    <FormattedList
                                      valueList={
                                        Array [
                                          "ILLICITCORP",
                                          "SLIMSHADY",
                                          "TAINTEDTHINGS",
                                        ]
                                      }
                                    >
                                      <span
                                        className="formatted-list"
                                      >
                                        <FormattedValue
                                          key="14"
                                          value="ILLICITCORP"
                                        >
                                          <span
                                            className="formatted-value"
                                          >
                                            ILLICITCORP
                                          </span>
                                        </FormattedValue>
                                        <span
                                          key="15"
                                        >
                                          ,
                                          <br />
                                        </span>
                                        <FormattedValue
                                          key="17"
                                          value="SLIMSHADY"
                                        >
                                          <span
                                            className="formatted-value"
                                          >
                                            SLIMSHADY
                                          </span>
                                        </FormattedValue>
                                        <span
                                          key="18"
                                        >
                                          ,
                                          <br />
                                        </span>
                                        <FormattedValue
                                          key="20"
                                          value="TAINTEDTHINGS"
                                        >
                                          <span
                                            className="formatted-value"
                                          >
                                            TAINTEDTHINGS
                                          </span>
                                        </FormattedValue>
                                      </span>
                                    </FormattedList>
                                  </span>
                                </FormattedValue>
                              </div>
                            </SplitItem>
                          </div>
                        </Split>
                      </OutcomeProperty>
                    </div>
                  </CardBody>
                  <CardFooter>
                    <div
                      className="pf-c-card__footer"
                    >
                      <Button
                        className="outcome-cards__card__explanation-link"
                        isInline={true}
                        onClick={[Function]}
                        variant="link"
                      >
                        <button
                          aria-disabled={false}
                          aria-label={null}
                          className="pf-c-button pf-m-link pf-m-inline outcome-cards__card__explanation-link"
                          data-ouia-component-id="OUIA-Generated-Button-link-8"
                          data-ouia-component-type="PF4/Button"
                          data-ouia-safe={true}
                          disabled={false}
                          onClick={[Function]}
                          role={null}
                          type="button"
                        >
                          View Details 
                          <LongArrowAltRightIcon
                            color="currentColor"
                            noVerticalAlign={false}
                            size="sm"
                          >
                            <svg
                              aria-hidden={true}
                              aria-labelledby={null}
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style={
                                Object {
                                  "verticalAlign": "-0.125em",
                                }
                              }
                              viewBox="0 0 448 512"
                              width="1em"
                            >
                              <path
                                d="M313.941 216H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12h301.941v46.059c0 21.382 25.851 32.09 40.971 16.971l86.059-86.059c9.373-9.373 9.373-24.569 0-33.941l-86.059-86.059c-15.119-15.119-40.971-4.411-40.971 16.971V216z"
                              />
                            </svg>
                          </LongArrowAltRightIcon>
                        </button>
                      </Button>
                    </div>
                  </CardFooter>
                </article>
              </Card>
            </OutcomeCard>
          </div>
        </GalleryItem>
      </div>
    </Gallery>
  </section>
</Outcomes>
`;
