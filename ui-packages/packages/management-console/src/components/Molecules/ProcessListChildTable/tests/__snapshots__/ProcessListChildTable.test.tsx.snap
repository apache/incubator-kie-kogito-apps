// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Process List Child Table tests snapshot empty results 1`] = `
<EmptyState
  variant="full"
>
  <div
    className="pf-c-empty-state"
  >
    <div
      className="pf-c-empty-state__content"
    >
      <EmptyStateIcon
        color="var(--pf-global--info-color--100)"
        icon={[Function]}
      >
        <InfoCircleIcon
          aria-hidden="true"
          className="pf-c-empty-state__icon"
          color="var(--pf-global--info-color--100)"
          noVerticalAlign={false}
          size="sm"
        >
          <svg
            aria-hidden="true"
            aria-labelledby={null}
            className="pf-c-empty-state__icon"
            fill="var(--pf-global--info-color--100)"
            height="1em"
            role="img"
            style={
              Object {
                "verticalAlign": "-0.125em",
              }
            }
            viewBox="0 0 512 512"
            width="1em"
          >
            <path
              d="M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z"
            />
          </svg>
        </InfoCircleIcon>
      </EmptyStateIcon>
      <Title
        headingLevel="h5"
        size="lg"
      >
        <h5
          className="pf-c-title pf-m-lg"
        >
          No child process instances
        </h5>
      </Title>
      <EmptyStateBody>
        <div
          className="pf-c-empty-state__body"
        >
          This process has no related sub processes
        </div>
      </EmptyStateBody>
    </div>
  </div>
</EmptyState>
`;

exports[`Process List Child Table tests snapshot for error 1`] = `
<ServerErrors
  error={
    [Error: Network error: Error writing result to store for query:
 {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"getChildInstances"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"rootProcessInstanceId"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}},"directives":[]}],"directives":[],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"ProcessInstances"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"rootProcessInstanceId"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"equal"},"value":{"kind":"Variable","name":{"kind":"Name","value":"rootProcessInstanceId"}}}]}}]}}],"directives":[],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"},"arguments":[],"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"processId"},"arguments":[],"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"processName"},"arguments":[],"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"parentProcessInstanceId"},"arguments":[],"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"rootProcessInstanceId"},"arguments":[],"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"roles"},"arguments":[],"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"state"},"arguments":[],"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"start"},"arguments":[],"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"lastUpdate"},"arguments":[],"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"serviceUrl"},"arguments":[],"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"addons"},"arguments":[],"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"businessKey"},"arguments":[],"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"error"},"arguments":[],"directives":[],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodeDefinitionId"},"arguments":[],"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"message"},"arguments":[],"directives":[]}]}}]}}]}}],"loc":{"start":0,"end":486}}
Cannot read property 'ProcessInstances' of undefined]
  }
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "createHref": [Function],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "push": [Function],
      "replace": [Function],
    }
  }
  location={
    Object {
      "hash": "",
      "pathname": "/",
      "search": "",
      "state": undefined,
    }
  }
  match={
    Object {
      "isExact": true,
      "params": Object {},
      "path": "/",
      "url": "/",
    }
  }
  variant="large"
>
  <PageSection
    variant="light"
  >
    <section
      className="pf-c-page__main-section pf-m-light"
    >
      <Bullseye
        data-ouia-component-type="server-errors"
        data-ouia-safe={true}
      >
        <div
          className="pf-l-bullseye"
          data-ouia-component-type="server-errors"
          data-ouia-safe={true}
        >
          <EmptyState
            variant="full"
          >
            <div
              className="pf-c-empty-state"
            >
              <div
                className="pf-c-empty-state__content"
              >
                <EmptyStateIcon
                  color="var(--pf-global--danger-color--100)"
                  icon={[Function]}
                >
                  <ExclamationCircleIcon
                    aria-hidden="true"
                    className="pf-c-empty-state__icon"
                    color="var(--pf-global--danger-color--100)"
                    noVerticalAlign={false}
                    size="sm"
                  >
                    <svg
                      aria-hidden="true"
                      aria-labelledby={null}
                      className="pf-c-empty-state__icon"
                      fill="var(--pf-global--danger-color--100)"
                      height="1em"
                      role="img"
                      style={
                        Object {
                          "verticalAlign": "-0.125em",
                        }
                      }
                      viewBox="0 0 512 512"
                      width="1em"
                    >
                      <path
                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                      />
                    </svg>
                  </ExclamationCircleIcon>
                </EmptyStateIcon>
                <Title
                  headingLevel="h1"
                  size="4xl"
                >
                  <h1
                    className="pf-c-title pf-m-4xl"
                  >
                    Error fetching data
                  </h1>
                </Title>
                <EmptyStateBody>
                  <div
                    className="pf-c-empty-state__body"
                  >
                    An error occurred while accessing data.
                     
                    <Button
                      id="display-error"
                      isInline={true}
                      onClick={[Function]}
                      variant="link"
                    >
                      <button
                        aria-disabled={false}
                        aria-label={null}
                        className="pf-c-button pf-m-link pf-m-inline"
                        data-ouia-component-id="OUIA-Generated-Button-link-2"
                        data-ouia-component-type="PF4/Button"
                        data-ouia-safe={true}
                        disabled={false}
                        id="display-error"
                        onClick={[Function]}
                        role={null}
                        type="button"
                      >
                        See more details
                      </button>
                    </Button>
                  </div>
                </EmptyStateBody>
                <Button
                  id="goback-button"
                  onClick={[Function]}
                  variant="primary"
                >
                  <button
                    aria-disabled={false}
                    aria-label={null}
                    className="pf-c-button pf-m-primary"
                    data-ouia-component-id="OUIA-Generated-Button-primary-1"
                    data-ouia-component-type="PF4/Button"
                    data-ouia-safe={true}
                    disabled={false}
                    id="goback-button"
                    onClick={[Function]}
                    role={null}
                    type="button"
                  >
                    Go back
                  </button>
                </Button>
              </div>
            </div>
          </EmptyState>
        </div>
      </Bullseye>
    </section>
  </PageSection>
</ServerErrors>
`;

exports[`Process List Child Table tests snapshot of children in table 1`] = `
<ProcessListChildTable
  filters={
    Object {
      "businessKey": Array [],
      "status": Array [
        "ACTIVE",
      ],
    }
  }
  initData={
    Object {
      "ProcessInstances": Array [
        Object {
          "addons": Array [
            "jobs-management",
            "prometheus-monitoring",
            "process-management",
          ],
          "businessKey": "Tra234",
          "childProcessInstances": Array [
            Object {
              "addons": Array [
                "jobs-management",
                "prometheus-monitoring",
                "process-management",
              ],
              "businessKey": "T1234",
              "end": "2019-10-22T05:40:44.089Z",
              "endpoint": "http://localhost:4000",
              "error": Object {
                "message": "Something went wrong",
                "nodeDefinitionId": "_2140F05A-364F-40B3-BB7B-B12927065DF8",
              },
              "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
              "lastUpdate": "2019-10-22T03:40:44.089Z",
              "nodes": Array [],
              "parentProcessInstance": Object {
                "addons": Array [
                  "jobs-management",
                  "prometheus-monitoring",
                  "process-management",
                ],
                "businessKey": "Tra234",
                "childProcessInstances": Array [],
                "endpoint": "http://localhost:4000",
                "error": Object {
                  "message": "Something went wrong",
                  "nodeDefinitionId": "__a1e139d5-4e77-48c9-84ae-34578e9817n",
                },
                "id": "538f9feb-5a14-4096-b791-2055b38da7c6",
                "lastUpdate": "2019-10-22T03:40:44.089Z",
                "milestones": Array [],
                "nodes": Array [],
                "parentProcessInstance": null,
                "parentProcessInstanceId": null,
                "processId": "travels",
                "processName": "travels",
                "roles": Array [],
                "rootProcessInstanceId": null,
                "serviceUrl": "http://localhost:4000",
                "start": "2019-10-22T03:40:44.089Z",
                "state": "ACTIVE",
                "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Berlin\\",\\"country\\":\\"Germany\\",\\"street\\":\\"Bakers\\",\\"zipCode\\":\\"100200\\"},\\"email\\":\\"cristiano@redhat.com\\",\\"firstName\\":\\"Cristiano\\",\\"lastName\\":\\"Nicolai\\",\\"nationality\\":\\"German\\"}}",
              },
              "parentProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
              "processId": "travels",
              "processName": "travels",
              "roles": Array [],
              "rootProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
              "serviceUrl": "http://localhost:4000",
              "start": "2019-10-22T03:40:44.089Z",
              "state": "ACTIVE",
              "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"US\\",\\"street\\":\\"Bangalore\\",\\"zipCode\\":\\"560093\\"},\\"email\\":\\"ajaganat@redhat.com\\",\\"firstName\\":\\"Ajay\\",\\"lastName\\":\\"Jaganathan\\",\\"nationality\\":\\"US\\"}}",
            },
          ],
          "endpoint": "http://localhost:4000",
          "error": Object {
            "message": "Something went wrong",
            "nodeDefinitionId": "__a1e139d5-4e77-48c9-84ae-34578e9817n",
          },
          "id": "538f9feb-5a14-4096-b791-2055b38da7c6",
          "lastUpdate": "2019-10-22T03:40:44.089Z",
          "milestones": Array [],
          "nodes": Array [],
          "parentProcessInstance": null,
          "parentProcessInstanceId": null,
          "processId": "travels",
          "processName": "travels",
          "roles": Array [],
          "rootProcessInstanceId": null,
          "serviceUrl": "http://localhost:4000",
          "start": "2019-10-22T03:40:44.089Z",
          "state": "ACTIVE",
          "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Berlin\\",\\"country\\":\\"Germany\\",\\"street\\":\\"Bakers\\",\\"zipCode\\":\\"100200\\"},\\"email\\":\\"cristiano@redhat.com\\",\\"firstName\\":\\"Cristiano\\",\\"lastName\\":\\"Nicolai\\",\\"nationality\\":\\"German\\"}}",
        },
      ],
    }
  }
  parentProcessId="538f9feb-5a14-4096-b791-2055b38da7c6"
  selectedInstances={Array []}
  setInitData={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "ProcessInstances": Array [
              Object {
                "addons": Array [
                  "jobs-management",
                  "prometheus-monitoring",
                  "process-management",
                ],
                "businessKey": "Tra234",
                "childProcessInstances": Array [
                  Object {
                    "addons": Array [
                      "jobs-management",
                      "prometheus-monitoring",
                      "process-management",
                    ],
                    "businessKey": "T1234",
                    "error": Object {
                      "message": "Something went wrong",
                      "nodeDefinitionId": "_2140F05A-364F-40B3-BB7B-B12927065DF8",
                    },
                    "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
                    "isSelected": false,
                    "lastUpdate": "2019-10-22T03:40:44.089Z",
                    "parentProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
                    "processId": "travels",
                    "processName": "travels",
                    "roles": Array [],
                    "rootProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
                    "serviceUrl": "http://localhost:4000",
                    "start": "2019-10-22T03:40:44.089Z",
                    "state": "ACTIVE",
                  },
                ],
                "endpoint": "http://localhost:4000",
                "error": Object {
                  "message": "Something went wrong",
                  "nodeDefinitionId": "__a1e139d5-4e77-48c9-84ae-34578e9817n",
                },
                "id": "538f9feb-5a14-4096-b791-2055b38da7c6",
                "lastUpdate": "2019-10-22T03:40:44.089Z",
                "milestones": Array [],
                "nodes": Array [],
                "parentProcessInstance": null,
                "parentProcessInstanceId": null,
                "processId": "travels",
                "processName": "travels",
                "roles": Array [],
                "rootProcessInstanceId": null,
                "serviceUrl": "http://localhost:4000",
                "start": "2019-10-22T03:40:44.089Z",
                "state": "ACTIVE",
                "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Berlin\\",\\"country\\":\\"Germany\\",\\"street\\":\\"Bakers\\",\\"zipCode\\":\\"100200\\"},\\"email\\":\\"cristiano@redhat.com\\",\\"firstName\\":\\"Cristiano\\",\\"lastName\\":\\"Nicolai\\",\\"nationality\\":\\"German\\"}}",
              },
            ],
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  setSelectableInstances={
    [MockFunction] {
      "calls": Array [
        Array [
          [Function],
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  setSelectedInstances={[MockFunction]}
>
  <Table
    aria-label="Process List Child Table"
    borders={true}
    canSelectAll={true}
    canSortFavorites={true}
    cells={
      Array [
        Object {
          "title": "",
        },
        Object {
          "title": "Id",
        },
        Object {
          "title": "Status",
        },
        Object {
          "title": "Created",
        },
        Object {
          "title": "Last update",
        },
        Object {
          "title": "",
        },
      ]
    }
    className="kogito-management-console__compact-table"
    contentId="expanded-content"
    data-ouia-component-type="process-list-child-table"
    data-ouia-safe={true}
    dropdownDirection="down"
    dropdownPosition="right"
    expandId="expandable-toggle"
    gridBreakPoint="grid-md"
    isStickyHeader={false}
    ouiaSafe={true}
    role="grid"
    rowLabeledBy="simple-node"
    rows={
      Array [
        Object {
          "cells": Array [
            Object {
              "title": <React.Fragment>
                <Checkbox
                  aria-label="process-list-checkbox"
                  className=""
                  id="checkbox-e4448857-fa0c-403b-ad69-f0a353458b9d"
                  isChecked={false}
                  isDisabled={false}
                  isValid={true}
                  name="checkbox-e4448857-fa0c-403b-ad69-f0a353458b9d"
                  onChange={[Function]}
                />
              </React.Fragment>,
            },
            Object {
              "title": <React.Fragment>
                <Link
                  to={
                    Object {
                      "pathname": "/Process/e4448857-fa0c-403b-ad69-f0a353458b9d",
                      "state": Object {
                        "filters": Object {
                          "businessKey": Array [],
                          "status": Array [
                            "ACTIVE",
                          ],
                        },
                      },
                    }
                  }
                >
                  <div>
                    <strong>
                      <ItemDescriptor
                        itemDescription={
                          Object {
                            "description": "T1234",
                            "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
                            "name": "travels",
                          }
                        }
                      />
                    </strong>
                  </div>
                </Link>
                <EndpointLink
                  isLinkShown={false}
                  serviceUrl="http://localhost:4000"
                />
              </React.Fragment>,
            },
            Object {
              "title": <React.Fragment>
                <React.Fragment>
                  <OnRunningIcon
                    className="pf-u-mr-sm"
                    color="currentColor"
                    noVerticalAlign={false}
                    size="sm"
                  />
                  Active
                </React.Fragment>
              </React.Fragment>,
            },
            Object {
              "title": <t
                ago={false}
                calendar={false}
                decimal={false}
                element={null}
                filter={[Function]}
                fromNow={true}
                interval={60000}
                local={false}
                onChange={[Function]}
                titleFormat=""
                toNow={false}
                unit={null}
                unix={false}
                utc={false}
                withTitle={false}
              >
                2019-10-22T03:40:44.089Z
              </t>,
            },
            Object {
              "title": <span>
                 
                <HistoryIcon
                  className="pf-u-mr-sm"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Updated
                 
                <t
                  ago={false}
                  calendar={false}
                  decimal={false}
                  element={null}
                  filter={[Function]}
                  fromNow={true}
                  interval={60000}
                  local={false}
                  onChange={[Function]}
                  titleFormat=""
                  toNow={false}
                  unit={null}
                  unix={false}
                  utc={false}
                  withTitle={false}
                >
                  2019-10-22T03:40:44.089Z
                </t>
              </span>,
            },
            Object {
              "title": <MockedProcessListActionsKebab
                processInstance={
                  Object {
                    "addons": Array [
                      "jobs-management",
                      "prometheus-monitoring",
                      "process-management",
                    ],
                    "businessKey": "T1234",
                    "end": "2019-10-22T05:40:44.089Z",
                    "endpoint": "http://localhost:4000",
                    "error": Object {
                      "message": "Something went wrong",
                      "nodeDefinitionId": "_2140F05A-364F-40B3-BB7B-B12927065DF8",
                    },
                    "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
                    "lastUpdate": "2019-10-22T03:40:44.089Z",
                    "nodes": Array [],
                    "parentProcessInstance": Object {
                      "addons": Array [
                        "jobs-management",
                        "prometheus-monitoring",
                        "process-management",
                      ],
                      "businessKey": "Tra234",
                      "childProcessInstances": Array [],
                      "endpoint": "http://localhost:4000",
                      "error": Object {
                        "message": "Something went wrong",
                        "nodeDefinitionId": "__a1e139d5-4e77-48c9-84ae-34578e9817n",
                      },
                      "id": "538f9feb-5a14-4096-b791-2055b38da7c6",
                      "lastUpdate": "2019-10-22T03:40:44.089Z",
                      "milestones": Array [],
                      "nodes": Array [],
                      "parentProcessInstance": null,
                      "parentProcessInstanceId": null,
                      "processId": "travels",
                      "processName": "travels",
                      "roles": Array [],
                      "rootProcessInstanceId": null,
                      "serviceUrl": "http://localhost:4000",
                      "start": "2019-10-22T03:40:44.089Z",
                      "state": "ACTIVE",
                      "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Berlin\\",\\"country\\":\\"Germany\\",\\"street\\":\\"Bakers\\",\\"zipCode\\":\\"100200\\"},\\"email\\":\\"cristiano@redhat.com\\",\\"firstName\\":\\"Cristiano\\",\\"lastName\\":\\"Nicolai\\",\\"nationality\\":\\"German\\"}}",
                    },
                    "parentProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
                    "processId": "travels",
                    "processName": "travels",
                    "roles": Array [],
                    "rootProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
                    "serviceUrl": "http://localhost:4000",
                    "start": "2019-10-22T03:40:44.089Z",
                    "state": "ACTIVE",
                    "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"US\\",\\"street\\":\\"Bangalore\\",\\"zipCode\\":\\"560093\\"},\\"email\\":\\"ajaganat@redhat.com\\",\\"firstName\\":\\"Ajay\\",\\"lastName\\":\\"Jaganathan\\",\\"nationality\\":\\"US\\"}}",
                  }
                }
              />,
            },
          ],
        },
      ]
    }
    selectVariant="checkbox"
    variant="compact"
  >
    <Provider
      aria-label="Process List Child Table"
      borders={true}
      className="kogito-management-console__compact-table"
      columns={
        Array [
          Object {
            "cell": Object {
              "formatters": Array [
                [Function],
              ],
              "transforms": Array [
                [Function],
              ],
            },
            "data": undefined,
            "extraParams": Object {
              "actionResolver": undefined,
              "actions": undefined,
              "allRowsSelected": false,
              "areActionsDisabled": undefined,
              "canSelectAll": true,
              "canSortFavorites": true,
              "contentId": "expanded-content",
              "dropdownDirection": "down",
              "dropdownPosition": "right",
              "expandId": "expandable-toggle",
              "firstUserColumnIndex": 0,
              "onCollapse": undefined,
              "onExpand": undefined,
              "onFavorite": undefined,
              "onRowEdit": undefined,
              "onSelect": undefined,
              "onSort": undefined,
              "rowLabeledBy": "simple-node",
              "selectVariant": "checkbox",
              "sortBy": undefined,
            },
            "header": Object {
              "formatters": Array [],
              "label": "",
              "transforms": Array [
                [Function],
                [Function],
              ],
            },
            "property": "column-0",
            "props": Object {
              "data-key": 0,
              "data-label": "",
            },
          },
          Object {
            "cell": Object {
              "formatters": Array [
                [Function],
              ],
              "transforms": Array [
                [Function],
              ],
            },
            "data": undefined,
            "extraParams": Object {
              "actionResolver": undefined,
              "actions": undefined,
              "allRowsSelected": false,
              "areActionsDisabled": undefined,
              "canSelectAll": true,
              "canSortFavorites": true,
              "contentId": "expanded-content",
              "dropdownDirection": "down",
              "dropdownPosition": "right",
              "expandId": "expandable-toggle",
              "firstUserColumnIndex": 0,
              "onCollapse": undefined,
              "onExpand": undefined,
              "onFavorite": undefined,
              "onRowEdit": undefined,
              "onSelect": undefined,
              "onSort": undefined,
              "rowLabeledBy": "simple-node",
              "selectVariant": "checkbox",
              "sortBy": undefined,
            },
            "header": Object {
              "formatters": Array [],
              "label": "Id",
              "transforms": Array [
                [Function],
                [Function],
              ],
            },
            "property": "id",
            "props": Object {
              "data-key": 1,
              "data-label": "Id",
            },
          },
          Object {
            "cell": Object {
              "formatters": Array [
                [Function],
              ],
              "transforms": Array [
                [Function],
              ],
            },
            "data": undefined,
            "extraParams": Object {
              "actionResolver": undefined,
              "actions": undefined,
              "allRowsSelected": false,
              "areActionsDisabled": undefined,
              "canSelectAll": true,
              "canSortFavorites": true,
              "contentId": "expanded-content",
              "dropdownDirection": "down",
              "dropdownPosition": "right",
              "expandId": "expandable-toggle",
              "firstUserColumnIndex": 0,
              "onCollapse": undefined,
              "onExpand": undefined,
              "onFavorite": undefined,
              "onRowEdit": undefined,
              "onSelect": undefined,
              "onSort": undefined,
              "rowLabeledBy": "simple-node",
              "selectVariant": "checkbox",
              "sortBy": undefined,
            },
            "header": Object {
              "formatters": Array [],
              "label": "Status",
              "transforms": Array [
                [Function],
                [Function],
              ],
            },
            "property": "status",
            "props": Object {
              "data-key": 2,
              "data-label": "Status",
            },
          },
          Object {
            "cell": Object {
              "formatters": Array [
                [Function],
              ],
              "transforms": Array [
                [Function],
              ],
            },
            "data": undefined,
            "extraParams": Object {
              "actionResolver": undefined,
              "actions": undefined,
              "allRowsSelected": false,
              "areActionsDisabled": undefined,
              "canSelectAll": true,
              "canSortFavorites": true,
              "contentId": "expanded-content",
              "dropdownDirection": "down",
              "dropdownPosition": "right",
              "expandId": "expandable-toggle",
              "firstUserColumnIndex": 0,
              "onCollapse": undefined,
              "onExpand": undefined,
              "onFavorite": undefined,
              "onRowEdit": undefined,
              "onSelect": undefined,
              "onSort": undefined,
              "rowLabeledBy": "simple-node",
              "selectVariant": "checkbox",
              "sortBy": undefined,
            },
            "header": Object {
              "formatters": Array [],
              "label": "Created",
              "transforms": Array [
                [Function],
                [Function],
              ],
            },
            "property": "created",
            "props": Object {
              "data-key": 3,
              "data-label": "Created",
            },
          },
          Object {
            "cell": Object {
              "formatters": Array [
                [Function],
              ],
              "transforms": Array [
                [Function],
              ],
            },
            "data": undefined,
            "extraParams": Object {
              "actionResolver": undefined,
              "actions": undefined,
              "allRowsSelected": false,
              "areActionsDisabled": undefined,
              "canSelectAll": true,
              "canSortFavorites": true,
              "contentId": "expanded-content",
              "dropdownDirection": "down",
              "dropdownPosition": "right",
              "expandId": "expandable-toggle",
              "firstUserColumnIndex": 0,
              "onCollapse": undefined,
              "onExpand": undefined,
              "onFavorite": undefined,
              "onRowEdit": undefined,
              "onSelect": undefined,
              "onSort": undefined,
              "rowLabeledBy": "simple-node",
              "selectVariant": "checkbox",
              "sortBy": undefined,
            },
            "header": Object {
              "formatters": Array [],
              "label": "Last update",
              "transforms": Array [
                [Function],
                [Function],
              ],
            },
            "property": "last-update",
            "props": Object {
              "data-key": 4,
              "data-label": "Last update",
            },
          },
          Object {
            "cell": Object {
              "formatters": Array [
                [Function],
              ],
              "transforms": Array [
                [Function],
              ],
            },
            "data": undefined,
            "extraParams": Object {
              "actionResolver": undefined,
              "actions": undefined,
              "allRowsSelected": false,
              "areActionsDisabled": undefined,
              "canSelectAll": true,
              "canSortFavorites": true,
              "contentId": "expanded-content",
              "dropdownDirection": "down",
              "dropdownPosition": "right",
              "expandId": "expandable-toggle",
              "firstUserColumnIndex": 0,
              "onCollapse": undefined,
              "onExpand": undefined,
              "onFavorite": undefined,
              "onRowEdit": undefined,
              "onSelect": undefined,
              "onSort": undefined,
              "rowLabeledBy": "simple-node",
              "selectVariant": "checkbox",
              "sortBy": undefined,
            },
            "header": Object {
              "formatters": Array [],
              "label": "",
              "transforms": Array [
                [Function],
                [Function],
              ],
            },
            "property": "column-5",
            "props": Object {
              "data-key": 5,
              "data-label": "",
            },
          },
        ]
      }
      data-ouia-component-type="process-list-child-table"
      data-ouia-safe={true}
      gridBreakPoint="grid-md"
      isStickyHeader={false}
      ouiaSafe={true}
      renderers={
        Object {
          "body": Object {
            "cell": [Function],
            "row": [Function],
            "wrapper": [Function],
          },
          "header": Object {
            "cell": [Function],
          },
        }
      }
      role="grid"
      variant="compact"
    >
      <TableComposable
        aria-label="Process List Child Table"
        borders={true}
        className="kogito-management-console__compact-table"
        data-ouia-component-type="process-list-child-table"
        data-ouia-safe={true}
        gridBreakPoint="grid-md"
        isStickyHeader={false}
        ouiaSafe={true}
        role="grid"
        variant="compact"
      >
        <TableComposableBase
          aria-label="Process List Child Table"
          borders={true}
          className="kogito-management-console__compact-table"
          data-ouia-component-type="process-list-child-table"
          data-ouia-safe={true}
          gridBreakPoint="grid-md"
          innerRef={null}
          isStickyHeader={false}
          ouiaSafe={true}
          role="grid"
          variant="compact"
        >
          <table
            aria-label="Process List Child Table"
            className="kogito-management-console__compact-table pf-c-table pf-m-grid-md pf-m-compact"
            data-ouia-component-id="OUIA-Generated-Table-2"
            data-ouia-component-type="process-list-child-table"
            data-ouia-safe={true}
            role="grid"
          >
            <TableHeader>
              <ContextHeader
                headerRows={null}
              >
                <Component
                  className=""
                  headerRows={null}
                >
                  <BaseHeader
                    className=""
                    columns={
                      Array [
                        Object {
                          "cell": Object {
                            "formatters": Array [
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "data": undefined,
                          "extraParams": Object {
                            "actionResolver": undefined,
                            "actions": undefined,
                            "allRowsSelected": false,
                            "areActionsDisabled": undefined,
                            "canSelectAll": true,
                            "canSortFavorites": true,
                            "contentId": "expanded-content",
                            "dropdownDirection": "down",
                            "dropdownPosition": "right",
                            "expandId": "expandable-toggle",
                            "firstUserColumnIndex": 0,
                            "onCollapse": undefined,
                            "onExpand": undefined,
                            "onFavorite": undefined,
                            "onRowEdit": undefined,
                            "onSelect": undefined,
                            "onSort": undefined,
                            "rowLabeledBy": "simple-node",
                            "selectVariant": "checkbox",
                            "sortBy": undefined,
                          },
                          "header": Object {
                            "formatters": Array [],
                            "label": "",
                            "transforms": Array [
                              [Function],
                              [Function],
                            ],
                          },
                          "property": "column-0",
                          "props": Object {
                            "data-key": 0,
                            "data-label": "",
                          },
                        },
                        Object {
                          "cell": Object {
                            "formatters": Array [
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "data": undefined,
                          "extraParams": Object {
                            "actionResolver": undefined,
                            "actions": undefined,
                            "allRowsSelected": false,
                            "areActionsDisabled": undefined,
                            "canSelectAll": true,
                            "canSortFavorites": true,
                            "contentId": "expanded-content",
                            "dropdownDirection": "down",
                            "dropdownPosition": "right",
                            "expandId": "expandable-toggle",
                            "firstUserColumnIndex": 0,
                            "onCollapse": undefined,
                            "onExpand": undefined,
                            "onFavorite": undefined,
                            "onRowEdit": undefined,
                            "onSelect": undefined,
                            "onSort": undefined,
                            "rowLabeledBy": "simple-node",
                            "selectVariant": "checkbox",
                            "sortBy": undefined,
                          },
                          "header": Object {
                            "formatters": Array [],
                            "label": "Id",
                            "transforms": Array [
                              [Function],
                              [Function],
                            ],
                          },
                          "property": "id",
                          "props": Object {
                            "data-key": 1,
                            "data-label": "Id",
                          },
                        },
                        Object {
                          "cell": Object {
                            "formatters": Array [
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "data": undefined,
                          "extraParams": Object {
                            "actionResolver": undefined,
                            "actions": undefined,
                            "allRowsSelected": false,
                            "areActionsDisabled": undefined,
                            "canSelectAll": true,
                            "canSortFavorites": true,
                            "contentId": "expanded-content",
                            "dropdownDirection": "down",
                            "dropdownPosition": "right",
                            "expandId": "expandable-toggle",
                            "firstUserColumnIndex": 0,
                            "onCollapse": undefined,
                            "onExpand": undefined,
                            "onFavorite": undefined,
                            "onRowEdit": undefined,
                            "onSelect": undefined,
                            "onSort": undefined,
                            "rowLabeledBy": "simple-node",
                            "selectVariant": "checkbox",
                            "sortBy": undefined,
                          },
                          "header": Object {
                            "formatters": Array [],
                            "label": "Status",
                            "transforms": Array [
                              [Function],
                              [Function],
                            ],
                          },
                          "property": "status",
                          "props": Object {
                            "data-key": 2,
                            "data-label": "Status",
                          },
                        },
                        Object {
                          "cell": Object {
                            "formatters": Array [
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "data": undefined,
                          "extraParams": Object {
                            "actionResolver": undefined,
                            "actions": undefined,
                            "allRowsSelected": false,
                            "areActionsDisabled": undefined,
                            "canSelectAll": true,
                            "canSortFavorites": true,
                            "contentId": "expanded-content",
                            "dropdownDirection": "down",
                            "dropdownPosition": "right",
                            "expandId": "expandable-toggle",
                            "firstUserColumnIndex": 0,
                            "onCollapse": undefined,
                            "onExpand": undefined,
                            "onFavorite": undefined,
                            "onRowEdit": undefined,
                            "onSelect": undefined,
                            "onSort": undefined,
                            "rowLabeledBy": "simple-node",
                            "selectVariant": "checkbox",
                            "sortBy": undefined,
                          },
                          "header": Object {
                            "formatters": Array [],
                            "label": "Created",
                            "transforms": Array [
                              [Function],
                              [Function],
                            ],
                          },
                          "property": "created",
                          "props": Object {
                            "data-key": 3,
                            "data-label": "Created",
                          },
                        },
                        Object {
                          "cell": Object {
                            "formatters": Array [
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "data": undefined,
                          "extraParams": Object {
                            "actionResolver": undefined,
                            "actions": undefined,
                            "allRowsSelected": false,
                            "areActionsDisabled": undefined,
                            "canSelectAll": true,
                            "canSortFavorites": true,
                            "contentId": "expanded-content",
                            "dropdownDirection": "down",
                            "dropdownPosition": "right",
                            "expandId": "expandable-toggle",
                            "firstUserColumnIndex": 0,
                            "onCollapse": undefined,
                            "onExpand": undefined,
                            "onFavorite": undefined,
                            "onRowEdit": undefined,
                            "onSelect": undefined,
                            "onSort": undefined,
                            "rowLabeledBy": "simple-node",
                            "selectVariant": "checkbox",
                            "sortBy": undefined,
                          },
                          "header": Object {
                            "formatters": Array [],
                            "label": "Last update",
                            "transforms": Array [
                              [Function],
                              [Function],
                            ],
                          },
                          "property": "last-update",
                          "props": Object {
                            "data-key": 4,
                            "data-label": "Last update",
                          },
                        },
                        Object {
                          "cell": Object {
                            "formatters": Array [
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "data": undefined,
                          "extraParams": Object {
                            "actionResolver": undefined,
                            "actions": undefined,
                            "allRowsSelected": false,
                            "areActionsDisabled": undefined,
                            "canSelectAll": true,
                            "canSortFavorites": true,
                            "contentId": "expanded-content",
                            "dropdownDirection": "down",
                            "dropdownPosition": "right",
                            "expandId": "expandable-toggle",
                            "firstUserColumnIndex": 0,
                            "onCollapse": undefined,
                            "onExpand": undefined,
                            "onFavorite": undefined,
                            "onRowEdit": undefined,
                            "onSelect": undefined,
                            "onSort": undefined,
                            "rowLabeledBy": "simple-node",
                            "selectVariant": "checkbox",
                            "sortBy": undefined,
                          },
                          "header": Object {
                            "formatters": Array [],
                            "label": "",
                            "transforms": Array [
                              [Function],
                              [Function],
                            ],
                          },
                          "property": "column-5",
                          "props": Object {
                            "data-key": 5,
                            "data-label": "",
                          },
                        },
                      ]
                    }
                    headerRows={null}
                    renderers={
                      Object {
                        "body": Object {
                          "cell": [Function],
                          "row": [Function],
                          "wrapper": [Function],
                        },
                        "header": Object {
                          "cell": [Function],
                          "row": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "displayName": "Tr",
                            "render": [Function],
                          },
                          "wrapper": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "displayName": "Thead",
                            "render": [Function],
                          },
                        },
                        "table": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "TableComposable",
                          "render": [Function],
                        },
                      }
                    }
                  >
                    <Thead
                      className=""
                    >
                      <TheadBase
                        className=""
                        innerRef={null}
                      >
                        <thead
                          className=""
                        >
                          <HeaderRow
                            key="0-header-row"
                            renderers={
                              Object {
                                "cell": [Function],
                                "row": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "displayName": "Tr",
                                  "render": [Function],
                                },
                                "wrapper": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "displayName": "Thead",
                                  "render": [Function],
                                },
                              }
                            }
                            rowData={
                              Array [
                                Object {
                                  "cell": Object {
                                    "formatters": Array [
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                  },
                                  "data": undefined,
                                  "extraParams": Object {
                                    "actionResolver": undefined,
                                    "actions": undefined,
                                    "allRowsSelected": false,
                                    "areActionsDisabled": undefined,
                                    "canSelectAll": true,
                                    "canSortFavorites": true,
                                    "contentId": "expanded-content",
                                    "dropdownDirection": "down",
                                    "dropdownPosition": "right",
                                    "expandId": "expandable-toggle",
                                    "firstUserColumnIndex": 0,
                                    "onCollapse": undefined,
                                    "onExpand": undefined,
                                    "onFavorite": undefined,
                                    "onRowEdit": undefined,
                                    "onSelect": undefined,
                                    "onSort": undefined,
                                    "rowLabeledBy": "simple-node",
                                    "selectVariant": "checkbox",
                                    "sortBy": undefined,
                                  },
                                  "header": Object {
                                    "formatters": Array [],
                                    "label": "",
                                    "transforms": Array [
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                  "property": "column-0",
                                  "props": Object {
                                    "data-key": 0,
                                    "data-label": "",
                                  },
                                },
                                Object {
                                  "cell": Object {
                                    "formatters": Array [
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                  },
                                  "data": undefined,
                                  "extraParams": Object {
                                    "actionResolver": undefined,
                                    "actions": undefined,
                                    "allRowsSelected": false,
                                    "areActionsDisabled": undefined,
                                    "canSelectAll": true,
                                    "canSortFavorites": true,
                                    "contentId": "expanded-content",
                                    "dropdownDirection": "down",
                                    "dropdownPosition": "right",
                                    "expandId": "expandable-toggle",
                                    "firstUserColumnIndex": 0,
                                    "onCollapse": undefined,
                                    "onExpand": undefined,
                                    "onFavorite": undefined,
                                    "onRowEdit": undefined,
                                    "onSelect": undefined,
                                    "onSort": undefined,
                                    "rowLabeledBy": "simple-node",
                                    "selectVariant": "checkbox",
                                    "sortBy": undefined,
                                  },
                                  "header": Object {
                                    "formatters": Array [],
                                    "label": "Id",
                                    "transforms": Array [
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                  "property": "id",
                                  "props": Object {
                                    "data-key": 1,
                                    "data-label": "Id",
                                  },
                                },
                                Object {
                                  "cell": Object {
                                    "formatters": Array [
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                  },
                                  "data": undefined,
                                  "extraParams": Object {
                                    "actionResolver": undefined,
                                    "actions": undefined,
                                    "allRowsSelected": false,
                                    "areActionsDisabled": undefined,
                                    "canSelectAll": true,
                                    "canSortFavorites": true,
                                    "contentId": "expanded-content",
                                    "dropdownDirection": "down",
                                    "dropdownPosition": "right",
                                    "expandId": "expandable-toggle",
                                    "firstUserColumnIndex": 0,
                                    "onCollapse": undefined,
                                    "onExpand": undefined,
                                    "onFavorite": undefined,
                                    "onRowEdit": undefined,
                                    "onSelect": undefined,
                                    "onSort": undefined,
                                    "rowLabeledBy": "simple-node",
                                    "selectVariant": "checkbox",
                                    "sortBy": undefined,
                                  },
                                  "header": Object {
                                    "formatters": Array [],
                                    "label": "Status",
                                    "transforms": Array [
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                  "property": "status",
                                  "props": Object {
                                    "data-key": 2,
                                    "data-label": "Status",
                                  },
                                },
                                Object {
                                  "cell": Object {
                                    "formatters": Array [
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                  },
                                  "data": undefined,
                                  "extraParams": Object {
                                    "actionResolver": undefined,
                                    "actions": undefined,
                                    "allRowsSelected": false,
                                    "areActionsDisabled": undefined,
                                    "canSelectAll": true,
                                    "canSortFavorites": true,
                                    "contentId": "expanded-content",
                                    "dropdownDirection": "down",
                                    "dropdownPosition": "right",
                                    "expandId": "expandable-toggle",
                                    "firstUserColumnIndex": 0,
                                    "onCollapse": undefined,
                                    "onExpand": undefined,
                                    "onFavorite": undefined,
                                    "onRowEdit": undefined,
                                    "onSelect": undefined,
                                    "onSort": undefined,
                                    "rowLabeledBy": "simple-node",
                                    "selectVariant": "checkbox",
                                    "sortBy": undefined,
                                  },
                                  "header": Object {
                                    "formatters": Array [],
                                    "label": "Created",
                                    "transforms": Array [
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                  "property": "created",
                                  "props": Object {
                                    "data-key": 3,
                                    "data-label": "Created",
                                  },
                                },
                                Object {
                                  "cell": Object {
                                    "formatters": Array [
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                  },
                                  "data": undefined,
                                  "extraParams": Object {
                                    "actionResolver": undefined,
                                    "actions": undefined,
                                    "allRowsSelected": false,
                                    "areActionsDisabled": undefined,
                                    "canSelectAll": true,
                                    "canSortFavorites": true,
                                    "contentId": "expanded-content",
                                    "dropdownDirection": "down",
                                    "dropdownPosition": "right",
                                    "expandId": "expandable-toggle",
                                    "firstUserColumnIndex": 0,
                                    "onCollapse": undefined,
                                    "onExpand": undefined,
                                    "onFavorite": undefined,
                                    "onRowEdit": undefined,
                                    "onSelect": undefined,
                                    "onSort": undefined,
                                    "rowLabeledBy": "simple-node",
                                    "selectVariant": "checkbox",
                                    "sortBy": undefined,
                                  },
                                  "header": Object {
                                    "formatters": Array [],
                                    "label": "Last update",
                                    "transforms": Array [
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                  "property": "last-update",
                                  "props": Object {
                                    "data-key": 4,
                                    "data-label": "Last update",
                                  },
                                },
                                Object {
                                  "cell": Object {
                                    "formatters": Array [
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                  },
                                  "data": undefined,
                                  "extraParams": Object {
                                    "actionResolver": undefined,
                                    "actions": undefined,
                                    "allRowsSelected": false,
                                    "areActionsDisabled": undefined,
                                    "canSelectAll": true,
                                    "canSortFavorites": true,
                                    "contentId": "expanded-content",
                                    "dropdownDirection": "down",
                                    "dropdownPosition": "right",
                                    "expandId": "expandable-toggle",
                                    "firstUserColumnIndex": 0,
                                    "onCollapse": undefined,
                                    "onExpand": undefined,
                                    "onFavorite": undefined,
                                    "onRowEdit": undefined,
                                    "onSelect": undefined,
                                    "onSort": undefined,
                                    "rowLabeledBy": "simple-node",
                                    "selectVariant": "checkbox",
                                    "sortBy": undefined,
                                  },
                                  "header": Object {
                                    "formatters": Array [],
                                    "label": "",
                                    "transforms": Array [
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                  "property": "column-5",
                                  "props": Object {
                                    "data-key": 5,
                                    "data-label": "",
                                  },
                                },
                              ]
                            }
                            rowIndex={0}
                          >
                            <Tr>
                              <TrBase
                                innerRef={null}
                              >
                                <tr
                                  className=""
                                  data-ouia-component-id="OUIA-Generated-TableRow-1"
                                  data-ouia-component-type="PF4/TableRow"
                                  data-ouia-safe={true}
                                  hidden={false}
                                >
                                  <HeaderCell
                                    data-key={0}
                                    data-label=""
                                    key="0-header"
                                    scope=""
                                  >
                                    <Th
                                      className=""
                                      component="th"
                                      data-key={0}
                                      data-label=""
                                      onMouseEnter={[Function]}
                                      scope=""
                                      textCenter={false}
                                      tooltip=""
                                    >
                                      <ThBase
                                        className=""
                                        component="th"
                                        data-key={0}
                                        data-label=""
                                        innerRef={null}
                                        onMouseEnter={[Function]}
                                        scope=""
                                        textCenter={false}
                                        tooltip=""
                                      >
                                        <th
                                          className=""
                                          data-key={0}
                                          data-label=""
                                          onMouseEnter={[Function]}
                                          scope=""
                                        />
                                      </ThBase>
                                    </Th>
                                  </HeaderCell>
                                  <HeaderCell
                                    data-key={1}
                                    data-label="Id"
                                    key="1-header"
                                    scope="col"
                                  >
                                    <Th
                                      className=""
                                      component="th"
                                      data-key={1}
                                      data-label="Id"
                                      onMouseEnter={[Function]}
                                      scope="col"
                                      textCenter={false}
                                      tooltip=""
                                    >
                                      <ThBase
                                        className=""
                                        component="th"
                                        data-key={1}
                                        data-label="Id"
                                        innerRef={null}
                                        onMouseEnter={[Function]}
                                        scope="col"
                                        textCenter={false}
                                        tooltip=""
                                      >
                                        <th
                                          className=""
                                          data-key={1}
                                          data-label="Id"
                                          onMouseEnter={[Function]}
                                          scope="col"
                                        >
                                          Id
                                        </th>
                                      </ThBase>
                                    </Th>
                                  </HeaderCell>
                                  <HeaderCell
                                    data-key={2}
                                    data-label="Status"
                                    key="2-header"
                                    scope="col"
                                  >
                                    <Th
                                      className=""
                                      component="th"
                                      data-key={2}
                                      data-label="Status"
                                      onMouseEnter={[Function]}
                                      scope="col"
                                      textCenter={false}
                                      tooltip=""
                                    >
                                      <ThBase
                                        className=""
                                        component="th"
                                        data-key={2}
                                        data-label="Status"
                                        innerRef={null}
                                        onMouseEnter={[Function]}
                                        scope="col"
                                        textCenter={false}
                                        tooltip=""
                                      >
                                        <th
                                          className=""
                                          data-key={2}
                                          data-label="Status"
                                          onMouseEnter={[Function]}
                                          scope="col"
                                        >
                                          Status
                                        </th>
                                      </ThBase>
                                    </Th>
                                  </HeaderCell>
                                  <HeaderCell
                                    data-key={3}
                                    data-label="Created"
                                    key="3-header"
                                    scope="col"
                                  >
                                    <Th
                                      className=""
                                      component="th"
                                      data-key={3}
                                      data-label="Created"
                                      onMouseEnter={[Function]}
                                      scope="col"
                                      textCenter={false}
                                      tooltip=""
                                    >
                                      <ThBase
                                        className=""
                                        component="th"
                                        data-key={3}
                                        data-label="Created"
                                        innerRef={null}
                                        onMouseEnter={[Function]}
                                        scope="col"
                                        textCenter={false}
                                        tooltip=""
                                      >
                                        <th
                                          className=""
                                          data-key={3}
                                          data-label="Created"
                                          onMouseEnter={[Function]}
                                          scope="col"
                                        >
                                          Created
                                        </th>
                                      </ThBase>
                                    </Th>
                                  </HeaderCell>
                                  <HeaderCell
                                    data-key={4}
                                    data-label="Last update"
                                    key="4-header"
                                    scope="col"
                                  >
                                    <Th
                                      className=""
                                      component="th"
                                      data-key={4}
                                      data-label="Last update"
                                      onMouseEnter={[Function]}
                                      scope="col"
                                      textCenter={false}
                                      tooltip=""
                                    >
                                      <ThBase
                                        className=""
                                        component="th"
                                        data-key={4}
                                        data-label="Last update"
                                        innerRef={null}
                                        onMouseEnter={[Function]}
                                        scope="col"
                                        textCenter={false}
                                        tooltip=""
                                      >
                                        <th
                                          className=""
                                          data-key={4}
                                          data-label="Last update"
                                          onMouseEnter={[Function]}
                                          scope="col"
                                        >
                                          Last update
                                        </th>
                                      </ThBase>
                                    </Th>
                                  </HeaderCell>
                                  <HeaderCell
                                    data-key={5}
                                    data-label=""
                                    key="5-header"
                                    scope=""
                                  >
                                    <Th
                                      className=""
                                      component="th"
                                      data-key={5}
                                      data-label=""
                                      onMouseEnter={[Function]}
                                      scope=""
                                      textCenter={false}
                                      tooltip=""
                                    >
                                      <ThBase
                                        className=""
                                        component="th"
                                        data-key={5}
                                        data-label=""
                                        innerRef={null}
                                        onMouseEnter={[Function]}
                                        scope=""
                                        textCenter={false}
                                        tooltip=""
                                      >
                                        <th
                                          className=""
                                          data-key={5}
                                          data-label=""
                                          onMouseEnter={[Function]}
                                          scope=""
                                        />
                                      </ThBase>
                                    </Th>
                                  </HeaderCell>
                                </tr>
                              </TrBase>
                            </Tr>
                          </HeaderRow>
                        </thead>
                      </TheadBase>
                    </Thead>
                  </BaseHeader>
                </Component>
              </ContextHeader>
            </TableHeader>
            <Component>
              <ContextBody
                className=""
                headerData={
                  Array [
                    Object {
                      "cell": Object {
                        "formatters": Array [
                          [Function],
                        ],
                        "transforms": Array [
                          [Function],
                        ],
                      },
                      "data": undefined,
                      "extraParams": Object {
                        "actionResolver": undefined,
                        "actions": undefined,
                        "allRowsSelected": false,
                        "areActionsDisabled": undefined,
                        "canSelectAll": true,
                        "canSortFavorites": true,
                        "contentId": "expanded-content",
                        "dropdownDirection": "down",
                        "dropdownPosition": "right",
                        "expandId": "expandable-toggle",
                        "firstUserColumnIndex": 0,
                        "onCollapse": undefined,
                        "onExpand": undefined,
                        "onFavorite": undefined,
                        "onRowEdit": undefined,
                        "onSelect": undefined,
                        "onSort": undefined,
                        "rowLabeledBy": "simple-node",
                        "selectVariant": "checkbox",
                        "sortBy": undefined,
                      },
                      "header": Object {
                        "formatters": Array [],
                        "label": "",
                        "transforms": Array [
                          [Function],
                          [Function],
                        ],
                      },
                      "property": "column-0",
                      "props": Object {
                        "data-key": 0,
                        "data-label": "",
                      },
                    },
                    Object {
                      "cell": Object {
                        "formatters": Array [
                          [Function],
                        ],
                        "transforms": Array [
                          [Function],
                        ],
                      },
                      "data": undefined,
                      "extraParams": Object {
                        "actionResolver": undefined,
                        "actions": undefined,
                        "allRowsSelected": false,
                        "areActionsDisabled": undefined,
                        "canSelectAll": true,
                        "canSortFavorites": true,
                        "contentId": "expanded-content",
                        "dropdownDirection": "down",
                        "dropdownPosition": "right",
                        "expandId": "expandable-toggle",
                        "firstUserColumnIndex": 0,
                        "onCollapse": undefined,
                        "onExpand": undefined,
                        "onFavorite": undefined,
                        "onRowEdit": undefined,
                        "onSelect": undefined,
                        "onSort": undefined,
                        "rowLabeledBy": "simple-node",
                        "selectVariant": "checkbox",
                        "sortBy": undefined,
                      },
                      "header": Object {
                        "formatters": Array [],
                        "label": "Id",
                        "transforms": Array [
                          [Function],
                          [Function],
                        ],
                      },
                      "property": "id",
                      "props": Object {
                        "data-key": 1,
                        "data-label": "Id",
                      },
                    },
                    Object {
                      "cell": Object {
                        "formatters": Array [
                          [Function],
                        ],
                        "transforms": Array [
                          [Function],
                        ],
                      },
                      "data": undefined,
                      "extraParams": Object {
                        "actionResolver": undefined,
                        "actions": undefined,
                        "allRowsSelected": false,
                        "areActionsDisabled": undefined,
                        "canSelectAll": true,
                        "canSortFavorites": true,
                        "contentId": "expanded-content",
                        "dropdownDirection": "down",
                        "dropdownPosition": "right",
                        "expandId": "expandable-toggle",
                        "firstUserColumnIndex": 0,
                        "onCollapse": undefined,
                        "onExpand": undefined,
                        "onFavorite": undefined,
                        "onRowEdit": undefined,
                        "onSelect": undefined,
                        "onSort": undefined,
                        "rowLabeledBy": "simple-node",
                        "selectVariant": "checkbox",
                        "sortBy": undefined,
                      },
                      "header": Object {
                        "formatters": Array [],
                        "label": "Status",
                        "transforms": Array [
                          [Function],
                          [Function],
                        ],
                      },
                      "property": "status",
                      "props": Object {
                        "data-key": 2,
                        "data-label": "Status",
                      },
                    },
                    Object {
                      "cell": Object {
                        "formatters": Array [
                          [Function],
                        ],
                        "transforms": Array [
                          [Function],
                        ],
                      },
                      "data": undefined,
                      "extraParams": Object {
                        "actionResolver": undefined,
                        "actions": undefined,
                        "allRowsSelected": false,
                        "areActionsDisabled": undefined,
                        "canSelectAll": true,
                        "canSortFavorites": true,
                        "contentId": "expanded-content",
                        "dropdownDirection": "down",
                        "dropdownPosition": "right",
                        "expandId": "expandable-toggle",
                        "firstUserColumnIndex": 0,
                        "onCollapse": undefined,
                        "onExpand": undefined,
                        "onFavorite": undefined,
                        "onRowEdit": undefined,
                        "onSelect": undefined,
                        "onSort": undefined,
                        "rowLabeledBy": "simple-node",
                        "selectVariant": "checkbox",
                        "sortBy": undefined,
                      },
                      "header": Object {
                        "formatters": Array [],
                        "label": "Created",
                        "transforms": Array [
                          [Function],
                          [Function],
                        ],
                      },
                      "property": "created",
                      "props": Object {
                        "data-key": 3,
                        "data-label": "Created",
                      },
                    },
                    Object {
                      "cell": Object {
                        "formatters": Array [
                          [Function],
                        ],
                        "transforms": Array [
                          [Function],
                        ],
                      },
                      "data": undefined,
                      "extraParams": Object {
                        "actionResolver": undefined,
                        "actions": undefined,
                        "allRowsSelected": false,
                        "areActionsDisabled": undefined,
                        "canSelectAll": true,
                        "canSortFavorites": true,
                        "contentId": "expanded-content",
                        "dropdownDirection": "down",
                        "dropdownPosition": "right",
                        "expandId": "expandable-toggle",
                        "firstUserColumnIndex": 0,
                        "onCollapse": undefined,
                        "onExpand": undefined,
                        "onFavorite": undefined,
                        "onRowEdit": undefined,
                        "onSelect": undefined,
                        "onSort": undefined,
                        "rowLabeledBy": "simple-node",
                        "selectVariant": "checkbox",
                        "sortBy": undefined,
                      },
                      "header": Object {
                        "formatters": Array [],
                        "label": "Last update",
                        "transforms": Array [
                          [Function],
                          [Function],
                        ],
                      },
                      "property": "last-update",
                      "props": Object {
                        "data-key": 4,
                        "data-label": "Last update",
                      },
                    },
                    Object {
                      "cell": Object {
                        "formatters": Array [
                          [Function],
                        ],
                        "transforms": Array [
                          [Function],
                        ],
                      },
                      "data": undefined,
                      "extraParams": Object {
                        "actionResolver": undefined,
                        "actions": undefined,
                        "allRowsSelected": false,
                        "areActionsDisabled": undefined,
                        "canSelectAll": true,
                        "canSortFavorites": true,
                        "contentId": "expanded-content",
                        "dropdownDirection": "down",
                        "dropdownPosition": "right",
                        "expandId": "expandable-toggle",
                        "firstUserColumnIndex": 0,
                        "onCollapse": undefined,
                        "onExpand": undefined,
                        "onFavorite": undefined,
                        "onRowEdit": undefined,
                        "onSelect": undefined,
                        "onSort": undefined,
                        "rowLabeledBy": "simple-node",
                        "selectVariant": "checkbox",
                        "sortBy": undefined,
                      },
                      "header": Object {
                        "formatters": Array [],
                        "label": "",
                        "transforms": Array [
                          [Function],
                          [Function],
                        ],
                      },
                      "property": "column-5",
                      "props": Object {
                        "data-key": 5,
                        "data-label": "",
                      },
                    },
                  ]
                }
                headerRows={null}
                onRow={[Function]}
                onRowClick={[Function]}
                rowKey="secretTableRowKeyId"
                rows={
                  Array [
                    Object {
                      "cells": Array [
                        Object {
                          "title": <React.Fragment>
                            <Checkbox
                              aria-label="process-list-checkbox"
                              className=""
                              id="checkbox-e4448857-fa0c-403b-ad69-f0a353458b9d"
                              isChecked={false}
                              isDisabled={false}
                              isValid={true}
                              name="checkbox-e4448857-fa0c-403b-ad69-f0a353458b9d"
                              onChange={[Function]}
                            />
                          </React.Fragment>,
                        },
                        Object {
                          "title": <React.Fragment>
                            <Link
                              to={
                                Object {
                                  "pathname": "/Process/e4448857-fa0c-403b-ad69-f0a353458b9d",
                                  "state": Object {
                                    "filters": Object {
                                      "businessKey": Array [],
                                      "status": Array [
                                        "ACTIVE",
                                      ],
                                    },
                                  },
                                }
                              }
                            >
                              <div>
                                <strong>
                                  <ItemDescriptor
                                    itemDescription={
                                      Object {
                                        "description": "T1234",
                                        "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
                                        "name": "travels",
                                      }
                                    }
                                  />
                                </strong>
                              </div>
                            </Link>
                            <EndpointLink
                              isLinkShown={false}
                              serviceUrl="http://localhost:4000"
                            />
                          </React.Fragment>,
                        },
                        Object {
                          "title": <React.Fragment>
                            <React.Fragment>
                              <OnRunningIcon
                                className="pf-u-mr-sm"
                                color="currentColor"
                                noVerticalAlign={false}
                                size="sm"
                              />
                              Active
                            </React.Fragment>
                          </React.Fragment>,
                        },
                        Object {
                          "title": <t
                            ago={false}
                            calendar={false}
                            decimal={false}
                            element={null}
                            filter={[Function]}
                            fromNow={true}
                            interval={60000}
                            local={false}
                            onChange={[Function]}
                            titleFormat=""
                            toNow={false}
                            unit={null}
                            unix={false}
                            utc={false}
                            withTitle={false}
                          >
                            2019-10-22T03:40:44.089Z
                          </t>,
                        },
                        Object {
                          "title": <span>
                             
                            <HistoryIcon
                              className="pf-u-mr-sm"
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                            />
                             Updated
                             
                            <t
                              ago={false}
                              calendar={false}
                              decimal={false}
                              element={null}
                              filter={[Function]}
                              fromNow={true}
                              interval={60000}
                              local={false}
                              onChange={[Function]}
                              titleFormat=""
                              toNow={false}
                              unit={null}
                              unix={false}
                              utc={false}
                              withTitle={false}
                            >
                              2019-10-22T03:40:44.089Z
                            </t>
                          </span>,
                        },
                        Object {
                          "title": <MockedProcessListActionsKebab
                            processInstance={
                              Object {
                                "addons": Array [
                                  "jobs-management",
                                  "prometheus-monitoring",
                                  "process-management",
                                ],
                                "businessKey": "T1234",
                                "end": "2019-10-22T05:40:44.089Z",
                                "endpoint": "http://localhost:4000",
                                "error": Object {
                                  "message": "Something went wrong",
                                  "nodeDefinitionId": "_2140F05A-364F-40B3-BB7B-B12927065DF8",
                                },
                                "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
                                "lastUpdate": "2019-10-22T03:40:44.089Z",
                                "nodes": Array [],
                                "parentProcessInstance": Object {
                                  "addons": Array [
                                    "jobs-management",
                                    "prometheus-monitoring",
                                    "process-management",
                                  ],
                                  "businessKey": "Tra234",
                                  "childProcessInstances": Array [],
                                  "endpoint": "http://localhost:4000",
                                  "error": Object {
                                    "message": "Something went wrong",
                                    "nodeDefinitionId": "__a1e139d5-4e77-48c9-84ae-34578e9817n",
                                  },
                                  "id": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                  "lastUpdate": "2019-10-22T03:40:44.089Z",
                                  "milestones": Array [],
                                  "nodes": Array [],
                                  "parentProcessInstance": null,
                                  "parentProcessInstanceId": null,
                                  "processId": "travels",
                                  "processName": "travels",
                                  "roles": Array [],
                                  "rootProcessInstanceId": null,
                                  "serviceUrl": "http://localhost:4000",
                                  "start": "2019-10-22T03:40:44.089Z",
                                  "state": "ACTIVE",
                                  "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Berlin\\",\\"country\\":\\"Germany\\",\\"street\\":\\"Bakers\\",\\"zipCode\\":\\"100200\\"},\\"email\\":\\"cristiano@redhat.com\\",\\"firstName\\":\\"Cristiano\\",\\"lastName\\":\\"Nicolai\\",\\"nationality\\":\\"German\\"}}",
                                },
                                "parentProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                "processId": "travels",
                                "processName": "travels",
                                "roles": Array [],
                                "rootProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                "serviceUrl": "http://localhost:4000",
                                "start": "2019-10-22T03:40:44.089Z",
                                "state": "ACTIVE",
                                "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"US\\",\\"street\\":\\"Bangalore\\",\\"zipCode\\":\\"560093\\"},\\"email\\":\\"ajaganat@redhat.com\\",\\"firstName\\":\\"Ajay\\",\\"lastName\\":\\"Jaganathan\\",\\"nationality\\":\\"US\\"}}",
                              }
                            }
                          />,
                        },
                      ],
                    },
                  ]
                }
              >
                <Component
                  className=""
                  headerRows={null}
                  mappedRows={
                    Array [
                      Object {
                        "cells": Array [
                          Object {
                            "title": <React.Fragment>
                              <Checkbox
                                aria-label="process-list-checkbox"
                                className=""
                                id="checkbox-e4448857-fa0c-403b-ad69-f0a353458b9d"
                                isChecked={false}
                                isDisabled={false}
                                isValid={true}
                                name="checkbox-e4448857-fa0c-403b-ad69-f0a353458b9d"
                                onChange={[Function]}
                              />
                            </React.Fragment>,
                          },
                          Object {
                            "title": <React.Fragment>
                              <Link
                                to={
                                  Object {
                                    "pathname": "/Process/e4448857-fa0c-403b-ad69-f0a353458b9d",
                                    "state": Object {
                                      "filters": Object {
                                        "businessKey": Array [],
                                        "status": Array [
                                          "ACTIVE",
                                        ],
                                      },
                                    },
                                  }
                                }
                              >
                                <div>
                                  <strong>
                                    <ItemDescriptor
                                      itemDescription={
                                        Object {
                                          "description": "T1234",
                                          "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
                                          "name": "travels",
                                        }
                                      }
                                    />
                                  </strong>
                                </div>
                              </Link>
                              <EndpointLink
                                isLinkShown={false}
                                serviceUrl="http://localhost:4000"
                              />
                            </React.Fragment>,
                          },
                          Object {
                            "title": <React.Fragment>
                              <React.Fragment>
                                <OnRunningIcon
                                  className="pf-u-mr-sm"
                                  color="currentColor"
                                  noVerticalAlign={false}
                                  size="sm"
                                />
                                Active
                              </React.Fragment>
                            </React.Fragment>,
                          },
                          Object {
                            "title": <t
                              ago={false}
                              calendar={false}
                              decimal={false}
                              element={null}
                              filter={[Function]}
                              fromNow={true}
                              interval={60000}
                              local={false}
                              onChange={[Function]}
                              titleFormat=""
                              toNow={false}
                              unit={null}
                              unix={false}
                              utc={false}
                              withTitle={false}
                            >
                              2019-10-22T03:40:44.089Z
                            </t>,
                          },
                          Object {
                            "title": <span>
                               
                              <HistoryIcon
                                className="pf-u-mr-sm"
                                color="currentColor"
                                noVerticalAlign={false}
                                size="sm"
                              />
                               Updated
                               
                              <t
                                ago={false}
                                calendar={false}
                                decimal={false}
                                element={null}
                                filter={[Function]}
                                fromNow={true}
                                interval={60000}
                                local={false}
                                onChange={[Function]}
                                titleFormat=""
                                toNow={false}
                                unit={null}
                                unix={false}
                                utc={false}
                                withTitle={false}
                              >
                                2019-10-22T03:40:44.089Z
                              </t>
                            </span>,
                          },
                          Object {
                            "title": <MockedProcessListActionsKebab
                              processInstance={
                                Object {
                                  "addons": Array [
                                    "jobs-management",
                                    "prometheus-monitoring",
                                    "process-management",
                                  ],
                                  "businessKey": "T1234",
                                  "end": "2019-10-22T05:40:44.089Z",
                                  "endpoint": "http://localhost:4000",
                                  "error": Object {
                                    "message": "Something went wrong",
                                    "nodeDefinitionId": "_2140F05A-364F-40B3-BB7B-B12927065DF8",
                                  },
                                  "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
                                  "lastUpdate": "2019-10-22T03:40:44.089Z",
                                  "nodes": Array [],
                                  "parentProcessInstance": Object {
                                    "addons": Array [
                                      "jobs-management",
                                      "prometheus-monitoring",
                                      "process-management",
                                    ],
                                    "businessKey": "Tra234",
                                    "childProcessInstances": Array [],
                                    "endpoint": "http://localhost:4000",
                                    "error": Object {
                                      "message": "Something went wrong",
                                      "nodeDefinitionId": "__a1e139d5-4e77-48c9-84ae-34578e9817n",
                                    },
                                    "id": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                    "lastUpdate": "2019-10-22T03:40:44.089Z",
                                    "milestones": Array [],
                                    "nodes": Array [],
                                    "parentProcessInstance": null,
                                    "parentProcessInstanceId": null,
                                    "processId": "travels",
                                    "processName": "travels",
                                    "roles": Array [],
                                    "rootProcessInstanceId": null,
                                    "serviceUrl": "http://localhost:4000",
                                    "start": "2019-10-22T03:40:44.089Z",
                                    "state": "ACTIVE",
                                    "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Berlin\\",\\"country\\":\\"Germany\\",\\"street\\":\\"Bakers\\",\\"zipCode\\":\\"100200\\"},\\"email\\":\\"cristiano@redhat.com\\",\\"firstName\\":\\"Cristiano\\",\\"lastName\\":\\"Nicolai\\",\\"nationality\\":\\"German\\"}}",
                                  },
                                  "parentProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                  "processId": "travels",
                                  "processName": "travels",
                                  "roles": Array [],
                                  "rootProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                  "serviceUrl": "http://localhost:4000",
                                  "start": "2019-10-22T03:40:44.089Z",
                                  "state": "ACTIVE",
                                  "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"US\\",\\"street\\":\\"Bangalore\\",\\"zipCode\\":\\"560093\\"},\\"email\\":\\"ajaganat@redhat.com\\",\\"firstName\\":\\"Ajay\\",\\"lastName\\":\\"Jaganathan\\",\\"nationality\\":\\"US\\"}}",
                                }
                              }
                            />,
                          },
                        ],
                        "column-0": Object {
                          "formatters": Array [],
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <React.Fragment>
                            <Checkbox
                              aria-label="process-list-checkbox"
                              className=""
                              id="checkbox-e4448857-fa0c-403b-ad69-f0a353458b9d"
                              isChecked={false}
                              isDisabled={false}
                              isValid={true}
                              name="checkbox-e4448857-fa0c-403b-ad69-f0a353458b9d"
                              onChange={[Function]}
                            />
                          </React.Fragment>,
                        },
                        "column-5": Object {
                          "formatters": Array [],
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <MockedProcessListActionsKebab
                            processInstance={
                              Object {
                                "addons": Array [
                                  "jobs-management",
                                  "prometheus-monitoring",
                                  "process-management",
                                ],
                                "businessKey": "T1234",
                                "end": "2019-10-22T05:40:44.089Z",
                                "endpoint": "http://localhost:4000",
                                "error": Object {
                                  "message": "Something went wrong",
                                  "nodeDefinitionId": "_2140F05A-364F-40B3-BB7B-B12927065DF8",
                                },
                                "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
                                "lastUpdate": "2019-10-22T03:40:44.089Z",
                                "nodes": Array [],
                                "parentProcessInstance": Object {
                                  "addons": Array [
                                    "jobs-management",
                                    "prometheus-monitoring",
                                    "process-management",
                                  ],
                                  "businessKey": "Tra234",
                                  "childProcessInstances": Array [],
                                  "endpoint": "http://localhost:4000",
                                  "error": Object {
                                    "message": "Something went wrong",
                                    "nodeDefinitionId": "__a1e139d5-4e77-48c9-84ae-34578e9817n",
                                  },
                                  "id": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                  "lastUpdate": "2019-10-22T03:40:44.089Z",
                                  "milestones": Array [],
                                  "nodes": Array [],
                                  "parentProcessInstance": null,
                                  "parentProcessInstanceId": null,
                                  "processId": "travels",
                                  "processName": "travels",
                                  "roles": Array [],
                                  "rootProcessInstanceId": null,
                                  "serviceUrl": "http://localhost:4000",
                                  "start": "2019-10-22T03:40:44.089Z",
                                  "state": "ACTIVE",
                                  "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Berlin\\",\\"country\\":\\"Germany\\",\\"street\\":\\"Bakers\\",\\"zipCode\\":\\"100200\\"},\\"email\\":\\"cristiano@redhat.com\\",\\"firstName\\":\\"Cristiano\\",\\"lastName\\":\\"Nicolai\\",\\"nationality\\":\\"German\\"}}",
                                },
                                "parentProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                "processId": "travels",
                                "processName": "travels",
                                "roles": Array [],
                                "rootProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                "serviceUrl": "http://localhost:4000",
                                "start": "2019-10-22T03:40:44.089Z",
                                "state": "ACTIVE",
                                "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"US\\",\\"street\\":\\"Bangalore\\",\\"zipCode\\":\\"560093\\"},\\"email\\":\\"ajaganat@redhat.com\\",\\"firstName\\":\\"Ajay\\",\\"lastName\\":\\"Jaganathan\\",\\"nationality\\":\\"US\\"}}",
                              }
                            }
                          />,
                        },
                        "created": Object {
                          "formatters": Array [],
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <t
                            ago={false}
                            calendar={false}
                            decimal={false}
                            element={null}
                            filter={[Function]}
                            fromNow={true}
                            interval={60000}
                            local={false}
                            onChange={[Function]}
                            titleFormat=""
                            toNow={false}
                            unit={null}
                            unix={false}
                            utc={false}
                            withTitle={false}
                          >
                            2019-10-22T03:40:44.089Z
                          </t>,
                        },
                        "id": Object {
                          "formatters": Array [],
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <React.Fragment>
                            <Link
                              to={
                                Object {
                                  "pathname": "/Process/e4448857-fa0c-403b-ad69-f0a353458b9d",
                                  "state": Object {
                                    "filters": Object {
                                      "businessKey": Array [],
                                      "status": Array [
                                        "ACTIVE",
                                      ],
                                    },
                                  },
                                }
                              }
                            >
                              <div>
                                <strong>
                                  <ItemDescriptor
                                    itemDescription={
                                      Object {
                                        "description": "T1234",
                                        "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
                                        "name": "travels",
                                      }
                                    }
                                  />
                                </strong>
                              </div>
                            </Link>
                            <EndpointLink
                              isLinkShown={false}
                              serviceUrl="http://localhost:4000"
                            />
                          </React.Fragment>,
                        },
                        "isExpanded": undefined,
                        "isFirst": true,
                        "isFirstVisible": true,
                        "isHeightAuto": false,
                        "isLast": true,
                        "isLastVisible": true,
                        "last-update": Object {
                          "formatters": Array [],
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <span>
                             
                            <HistoryIcon
                              className="pf-u-mr-sm"
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                            />
                             Updated
                             
                            <t
                              ago={false}
                              calendar={false}
                              decimal={false}
                              element={null}
                              filter={[Function]}
                              fromNow={true}
                              interval={60000}
                              local={false}
                              onChange={[Function]}
                              titleFormat=""
                              toNow={false}
                              unit={null}
                              unix={false}
                              utc={false}
                              withTitle={false}
                            >
                              2019-10-22T03:40:44.089Z
                            </t>
                          </span>,
                        },
                        "secretTableRowKeyId": 0,
                        "status": Object {
                          "formatters": Array [],
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <React.Fragment>
                            <React.Fragment>
                              <OnRunningIcon
                                className="pf-u-mr-sm"
                                color="currentColor"
                                noVerticalAlign={false}
                                size="sm"
                              />
                              Active
                            </React.Fragment>
                          </React.Fragment>,
                        },
                      },
                    ]
                  }
                  onRow={[Function]}
                  rowKey="secretTableRowKeyId"
                  rows={
                    Array [
                      Object {
                        "cells": Array [
                          Object {
                            "title": <React.Fragment>
                              <Checkbox
                                aria-label="process-list-checkbox"
                                className=""
                                id="checkbox-e4448857-fa0c-403b-ad69-f0a353458b9d"
                                isChecked={false}
                                isDisabled={false}
                                isValid={true}
                                name="checkbox-e4448857-fa0c-403b-ad69-f0a353458b9d"
                                onChange={[Function]}
                              />
                            </React.Fragment>,
                          },
                          Object {
                            "title": <React.Fragment>
                              <Link
                                to={
                                  Object {
                                    "pathname": "/Process/e4448857-fa0c-403b-ad69-f0a353458b9d",
                                    "state": Object {
                                      "filters": Object {
                                        "businessKey": Array [],
                                        "status": Array [
                                          "ACTIVE",
                                        ],
                                      },
                                    },
                                  }
                                }
                              >
                                <div>
                                  <strong>
                                    <ItemDescriptor
                                      itemDescription={
                                        Object {
                                          "description": "T1234",
                                          "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
                                          "name": "travels",
                                        }
                                      }
                                    />
                                  </strong>
                                </div>
                              </Link>
                              <EndpointLink
                                isLinkShown={false}
                                serviceUrl="http://localhost:4000"
                              />
                            </React.Fragment>,
                          },
                          Object {
                            "title": <React.Fragment>
                              <React.Fragment>
                                <OnRunningIcon
                                  className="pf-u-mr-sm"
                                  color="currentColor"
                                  noVerticalAlign={false}
                                  size="sm"
                                />
                                Active
                              </React.Fragment>
                            </React.Fragment>,
                          },
                          Object {
                            "title": <t
                              ago={false}
                              calendar={false}
                              decimal={false}
                              element={null}
                              filter={[Function]}
                              fromNow={true}
                              interval={60000}
                              local={false}
                              onChange={[Function]}
                              titleFormat=""
                              toNow={false}
                              unit={null}
                              unix={false}
                              utc={false}
                              withTitle={false}
                            >
                              2019-10-22T03:40:44.089Z
                            </t>,
                          },
                          Object {
                            "title": <span>
                               
                              <HistoryIcon
                                className="pf-u-mr-sm"
                                color="currentColor"
                                noVerticalAlign={false}
                                size="sm"
                              />
                               Updated
                               
                              <t
                                ago={false}
                                calendar={false}
                                decimal={false}
                                element={null}
                                filter={[Function]}
                                fromNow={true}
                                interval={60000}
                                local={false}
                                onChange={[Function]}
                                titleFormat=""
                                toNow={false}
                                unit={null}
                                unix={false}
                                utc={false}
                                withTitle={false}
                              >
                                2019-10-22T03:40:44.089Z
                              </t>
                            </span>,
                          },
                          Object {
                            "title": <MockedProcessListActionsKebab
                              processInstance={
                                Object {
                                  "addons": Array [
                                    "jobs-management",
                                    "prometheus-monitoring",
                                    "process-management",
                                  ],
                                  "businessKey": "T1234",
                                  "end": "2019-10-22T05:40:44.089Z",
                                  "endpoint": "http://localhost:4000",
                                  "error": Object {
                                    "message": "Something went wrong",
                                    "nodeDefinitionId": "_2140F05A-364F-40B3-BB7B-B12927065DF8",
                                  },
                                  "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
                                  "lastUpdate": "2019-10-22T03:40:44.089Z",
                                  "nodes": Array [],
                                  "parentProcessInstance": Object {
                                    "addons": Array [
                                      "jobs-management",
                                      "prometheus-monitoring",
                                      "process-management",
                                    ],
                                    "businessKey": "Tra234",
                                    "childProcessInstances": Array [],
                                    "endpoint": "http://localhost:4000",
                                    "error": Object {
                                      "message": "Something went wrong",
                                      "nodeDefinitionId": "__a1e139d5-4e77-48c9-84ae-34578e9817n",
                                    },
                                    "id": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                    "lastUpdate": "2019-10-22T03:40:44.089Z",
                                    "milestones": Array [],
                                    "nodes": Array [],
                                    "parentProcessInstance": null,
                                    "parentProcessInstanceId": null,
                                    "processId": "travels",
                                    "processName": "travels",
                                    "roles": Array [],
                                    "rootProcessInstanceId": null,
                                    "serviceUrl": "http://localhost:4000",
                                    "start": "2019-10-22T03:40:44.089Z",
                                    "state": "ACTIVE",
                                    "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Berlin\\",\\"country\\":\\"Germany\\",\\"street\\":\\"Bakers\\",\\"zipCode\\":\\"100200\\"},\\"email\\":\\"cristiano@redhat.com\\",\\"firstName\\":\\"Cristiano\\",\\"lastName\\":\\"Nicolai\\",\\"nationality\\":\\"German\\"}}",
                                  },
                                  "parentProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                  "processId": "travels",
                                  "processName": "travels",
                                  "roles": Array [],
                                  "rootProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                  "serviceUrl": "http://localhost:4000",
                                  "start": "2019-10-22T03:40:44.089Z",
                                  "state": "ACTIVE",
                                  "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"US\\",\\"street\\":\\"Bangalore\\",\\"zipCode\\":\\"560093\\"},\\"email\\":\\"ajaganat@redhat.com\\",\\"firstName\\":\\"Ajay\\",\\"lastName\\":\\"Jaganathan\\",\\"nationality\\":\\"US\\"}}",
                                }
                              }
                            />,
                          },
                        ],
                        "column-0": Object {
                          "formatters": Array [],
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <React.Fragment>
                            <Checkbox
                              aria-label="process-list-checkbox"
                              className=""
                              id="checkbox-e4448857-fa0c-403b-ad69-f0a353458b9d"
                              isChecked={false}
                              isDisabled={false}
                              isValid={true}
                              name="checkbox-e4448857-fa0c-403b-ad69-f0a353458b9d"
                              onChange={[Function]}
                            />
                          </React.Fragment>,
                        },
                        "column-5": Object {
                          "formatters": Array [],
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <MockedProcessListActionsKebab
                            processInstance={
                              Object {
                                "addons": Array [
                                  "jobs-management",
                                  "prometheus-monitoring",
                                  "process-management",
                                ],
                                "businessKey": "T1234",
                                "end": "2019-10-22T05:40:44.089Z",
                                "endpoint": "http://localhost:4000",
                                "error": Object {
                                  "message": "Something went wrong",
                                  "nodeDefinitionId": "_2140F05A-364F-40B3-BB7B-B12927065DF8",
                                },
                                "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
                                "lastUpdate": "2019-10-22T03:40:44.089Z",
                                "nodes": Array [],
                                "parentProcessInstance": Object {
                                  "addons": Array [
                                    "jobs-management",
                                    "prometheus-monitoring",
                                    "process-management",
                                  ],
                                  "businessKey": "Tra234",
                                  "childProcessInstances": Array [],
                                  "endpoint": "http://localhost:4000",
                                  "error": Object {
                                    "message": "Something went wrong",
                                    "nodeDefinitionId": "__a1e139d5-4e77-48c9-84ae-34578e9817n",
                                  },
                                  "id": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                  "lastUpdate": "2019-10-22T03:40:44.089Z",
                                  "milestones": Array [],
                                  "nodes": Array [],
                                  "parentProcessInstance": null,
                                  "parentProcessInstanceId": null,
                                  "processId": "travels",
                                  "processName": "travels",
                                  "roles": Array [],
                                  "rootProcessInstanceId": null,
                                  "serviceUrl": "http://localhost:4000",
                                  "start": "2019-10-22T03:40:44.089Z",
                                  "state": "ACTIVE",
                                  "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Berlin\\",\\"country\\":\\"Germany\\",\\"street\\":\\"Bakers\\",\\"zipCode\\":\\"100200\\"},\\"email\\":\\"cristiano@redhat.com\\",\\"firstName\\":\\"Cristiano\\",\\"lastName\\":\\"Nicolai\\",\\"nationality\\":\\"German\\"}}",
                                },
                                "parentProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                "processId": "travels",
                                "processName": "travels",
                                "roles": Array [],
                                "rootProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                "serviceUrl": "http://localhost:4000",
                                "start": "2019-10-22T03:40:44.089Z",
                                "state": "ACTIVE",
                                "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"US\\",\\"street\\":\\"Bangalore\\",\\"zipCode\\":\\"560093\\"},\\"email\\":\\"ajaganat@redhat.com\\",\\"firstName\\":\\"Ajay\\",\\"lastName\\":\\"Jaganathan\\",\\"nationality\\":\\"US\\"}}",
                              }
                            }
                          />,
                        },
                        "created": Object {
                          "formatters": Array [],
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <t
                            ago={false}
                            calendar={false}
                            decimal={false}
                            element={null}
                            filter={[Function]}
                            fromNow={true}
                            interval={60000}
                            local={false}
                            onChange={[Function]}
                            titleFormat=""
                            toNow={false}
                            unit={null}
                            unix={false}
                            utc={false}
                            withTitle={false}
                          >
                            2019-10-22T03:40:44.089Z
                          </t>,
                        },
                        "id": Object {
                          "formatters": Array [],
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <React.Fragment>
                            <Link
                              to={
                                Object {
                                  "pathname": "/Process/e4448857-fa0c-403b-ad69-f0a353458b9d",
                                  "state": Object {
                                    "filters": Object {
                                      "businessKey": Array [],
                                      "status": Array [
                                        "ACTIVE",
                                      ],
                                    },
                                  },
                                }
                              }
                            >
                              <div>
                                <strong>
                                  <ItemDescriptor
                                    itemDescription={
                                      Object {
                                        "description": "T1234",
                                        "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
                                        "name": "travels",
                                      }
                                    }
                                  />
                                </strong>
                              </div>
                            </Link>
                            <EndpointLink
                              isLinkShown={false}
                              serviceUrl="http://localhost:4000"
                            />
                          </React.Fragment>,
                        },
                        "isExpanded": undefined,
                        "isFirst": true,
                        "isFirstVisible": true,
                        "isHeightAuto": false,
                        "isLast": true,
                        "isLastVisible": true,
                        "last-update": Object {
                          "formatters": Array [],
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <span>
                             
                            <HistoryIcon
                              className="pf-u-mr-sm"
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                            />
                             Updated
                             
                            <t
                              ago={false}
                              calendar={false}
                              decimal={false}
                              element={null}
                              filter={[Function]}
                              fromNow={true}
                              interval={60000}
                              local={false}
                              onChange={[Function]}
                              titleFormat=""
                              toNow={false}
                              unit={null}
                              unix={false}
                              utc={false}
                              withTitle={false}
                            >
                              2019-10-22T03:40:44.089Z
                            </t>
                          </span>,
                        },
                        "secretTableRowKeyId": 0,
                        "status": Object {
                          "formatters": Array [],
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <React.Fragment>
                            <React.Fragment>
                              <OnRunningIcon
                                className="pf-u-mr-sm"
                                color="currentColor"
                                noVerticalAlign={false}
                                size="sm"
                              />
                              Active
                            </React.Fragment>
                          </React.Fragment>,
                        },
                      },
                    ]
                  }
                >
                  <BaseBody
                    className=""
                    columns={
                      Array [
                        Object {
                          "cell": Object {
                            "formatters": Array [
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "data": undefined,
                          "extraParams": Object {
                            "actionResolver": undefined,
                            "actions": undefined,
                            "allRowsSelected": false,
                            "areActionsDisabled": undefined,
                            "canSelectAll": true,
                            "canSortFavorites": true,
                            "contentId": "expanded-content",
                            "dropdownDirection": "down",
                            "dropdownPosition": "right",
                            "expandId": "expandable-toggle",
                            "firstUserColumnIndex": 0,
                            "onCollapse": undefined,
                            "onExpand": undefined,
                            "onFavorite": undefined,
                            "onRowEdit": undefined,
                            "onSelect": undefined,
                            "onSort": undefined,
                            "rowLabeledBy": "simple-node",
                            "selectVariant": "checkbox",
                            "sortBy": undefined,
                          },
                          "header": Object {
                            "formatters": Array [],
                            "label": "",
                            "transforms": Array [
                              [Function],
                              [Function],
                            ],
                          },
                          "property": "column-0",
                          "props": Object {
                            "data-key": 0,
                            "data-label": "",
                          },
                        },
                        Object {
                          "cell": Object {
                            "formatters": Array [
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "data": undefined,
                          "extraParams": Object {
                            "actionResolver": undefined,
                            "actions": undefined,
                            "allRowsSelected": false,
                            "areActionsDisabled": undefined,
                            "canSelectAll": true,
                            "canSortFavorites": true,
                            "contentId": "expanded-content",
                            "dropdownDirection": "down",
                            "dropdownPosition": "right",
                            "expandId": "expandable-toggle",
                            "firstUserColumnIndex": 0,
                            "onCollapse": undefined,
                            "onExpand": undefined,
                            "onFavorite": undefined,
                            "onRowEdit": undefined,
                            "onSelect": undefined,
                            "onSort": undefined,
                            "rowLabeledBy": "simple-node",
                            "selectVariant": "checkbox",
                            "sortBy": undefined,
                          },
                          "header": Object {
                            "formatters": Array [],
                            "label": "Id",
                            "transforms": Array [
                              [Function],
                              [Function],
                            ],
                          },
                          "property": "id",
                          "props": Object {
                            "data-key": 1,
                            "data-label": "Id",
                          },
                        },
                        Object {
                          "cell": Object {
                            "formatters": Array [
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "data": undefined,
                          "extraParams": Object {
                            "actionResolver": undefined,
                            "actions": undefined,
                            "allRowsSelected": false,
                            "areActionsDisabled": undefined,
                            "canSelectAll": true,
                            "canSortFavorites": true,
                            "contentId": "expanded-content",
                            "dropdownDirection": "down",
                            "dropdownPosition": "right",
                            "expandId": "expandable-toggle",
                            "firstUserColumnIndex": 0,
                            "onCollapse": undefined,
                            "onExpand": undefined,
                            "onFavorite": undefined,
                            "onRowEdit": undefined,
                            "onSelect": undefined,
                            "onSort": undefined,
                            "rowLabeledBy": "simple-node",
                            "selectVariant": "checkbox",
                            "sortBy": undefined,
                          },
                          "header": Object {
                            "formatters": Array [],
                            "label": "Status",
                            "transforms": Array [
                              [Function],
                              [Function],
                            ],
                          },
                          "property": "status",
                          "props": Object {
                            "data-key": 2,
                            "data-label": "Status",
                          },
                        },
                        Object {
                          "cell": Object {
                            "formatters": Array [
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "data": undefined,
                          "extraParams": Object {
                            "actionResolver": undefined,
                            "actions": undefined,
                            "allRowsSelected": false,
                            "areActionsDisabled": undefined,
                            "canSelectAll": true,
                            "canSortFavorites": true,
                            "contentId": "expanded-content",
                            "dropdownDirection": "down",
                            "dropdownPosition": "right",
                            "expandId": "expandable-toggle",
                            "firstUserColumnIndex": 0,
                            "onCollapse": undefined,
                            "onExpand": undefined,
                            "onFavorite": undefined,
                            "onRowEdit": undefined,
                            "onSelect": undefined,
                            "onSort": undefined,
                            "rowLabeledBy": "simple-node",
                            "selectVariant": "checkbox",
                            "sortBy": undefined,
                          },
                          "header": Object {
                            "formatters": Array [],
                            "label": "Created",
                            "transforms": Array [
                              [Function],
                              [Function],
                            ],
                          },
                          "property": "created",
                          "props": Object {
                            "data-key": 3,
                            "data-label": "Created",
                          },
                        },
                        Object {
                          "cell": Object {
                            "formatters": Array [
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "data": undefined,
                          "extraParams": Object {
                            "actionResolver": undefined,
                            "actions": undefined,
                            "allRowsSelected": false,
                            "areActionsDisabled": undefined,
                            "canSelectAll": true,
                            "canSortFavorites": true,
                            "contentId": "expanded-content",
                            "dropdownDirection": "down",
                            "dropdownPosition": "right",
                            "expandId": "expandable-toggle",
                            "firstUserColumnIndex": 0,
                            "onCollapse": undefined,
                            "onExpand": undefined,
                            "onFavorite": undefined,
                            "onRowEdit": undefined,
                            "onSelect": undefined,
                            "onSort": undefined,
                            "rowLabeledBy": "simple-node",
                            "selectVariant": "checkbox",
                            "sortBy": undefined,
                          },
                          "header": Object {
                            "formatters": Array [],
                            "label": "Last update",
                            "transforms": Array [
                              [Function],
                              [Function],
                            ],
                          },
                          "property": "last-update",
                          "props": Object {
                            "data-key": 4,
                            "data-label": "Last update",
                          },
                        },
                        Object {
                          "cell": Object {
                            "formatters": Array [
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "data": undefined,
                          "extraParams": Object {
                            "actionResolver": undefined,
                            "actions": undefined,
                            "allRowsSelected": false,
                            "areActionsDisabled": undefined,
                            "canSelectAll": true,
                            "canSortFavorites": true,
                            "contentId": "expanded-content",
                            "dropdownDirection": "down",
                            "dropdownPosition": "right",
                            "expandId": "expandable-toggle",
                            "firstUserColumnIndex": 0,
                            "onCollapse": undefined,
                            "onExpand": undefined,
                            "onFavorite": undefined,
                            "onRowEdit": undefined,
                            "onSelect": undefined,
                            "onSort": undefined,
                            "rowLabeledBy": "simple-node",
                            "selectVariant": "checkbox",
                            "sortBy": undefined,
                          },
                          "header": Object {
                            "formatters": Array [],
                            "label": "",
                            "transforms": Array [
                              [Function],
                              [Function],
                            ],
                          },
                          "property": "column-5",
                          "props": Object {
                            "data-key": 5,
                            "data-label": "",
                          },
                        },
                      ]
                    }
                    headerRows={null}
                    mappedRows={
                      Array [
                        Object {
                          "cells": Array [
                            Object {
                              "title": <React.Fragment>
                                <Checkbox
                                  aria-label="process-list-checkbox"
                                  className=""
                                  id="checkbox-e4448857-fa0c-403b-ad69-f0a353458b9d"
                                  isChecked={false}
                                  isDisabled={false}
                                  isValid={true}
                                  name="checkbox-e4448857-fa0c-403b-ad69-f0a353458b9d"
                                  onChange={[Function]}
                                />
                              </React.Fragment>,
                            },
                            Object {
                              "title": <React.Fragment>
                                <Link
                                  to={
                                    Object {
                                      "pathname": "/Process/e4448857-fa0c-403b-ad69-f0a353458b9d",
                                      "state": Object {
                                        "filters": Object {
                                          "businessKey": Array [],
                                          "status": Array [
                                            "ACTIVE",
                                          ],
                                        },
                                      },
                                    }
                                  }
                                >
                                  <div>
                                    <strong>
                                      <ItemDescriptor
                                        itemDescription={
                                          Object {
                                            "description": "T1234",
                                            "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
                                            "name": "travels",
                                          }
                                        }
                                      />
                                    </strong>
                                  </div>
                                </Link>
                                <EndpointLink
                                  isLinkShown={false}
                                  serviceUrl="http://localhost:4000"
                                />
                              </React.Fragment>,
                            },
                            Object {
                              "title": <React.Fragment>
                                <React.Fragment>
                                  <OnRunningIcon
                                    className="pf-u-mr-sm"
                                    color="currentColor"
                                    noVerticalAlign={false}
                                    size="sm"
                                  />
                                  Active
                                </React.Fragment>
                              </React.Fragment>,
                            },
                            Object {
                              "title": <t
                                ago={false}
                                calendar={false}
                                decimal={false}
                                element={null}
                                filter={[Function]}
                                fromNow={true}
                                interval={60000}
                                local={false}
                                onChange={[Function]}
                                titleFormat=""
                                toNow={false}
                                unit={null}
                                unix={false}
                                utc={false}
                                withTitle={false}
                              >
                                2019-10-22T03:40:44.089Z
                              </t>,
                            },
                            Object {
                              "title": <span>
                                 
                                <HistoryIcon
                                  className="pf-u-mr-sm"
                                  color="currentColor"
                                  noVerticalAlign={false}
                                  size="sm"
                                />
                                 Updated
                                 
                                <t
                                  ago={false}
                                  calendar={false}
                                  decimal={false}
                                  element={null}
                                  filter={[Function]}
                                  fromNow={true}
                                  interval={60000}
                                  local={false}
                                  onChange={[Function]}
                                  titleFormat=""
                                  toNow={false}
                                  unit={null}
                                  unix={false}
                                  utc={false}
                                  withTitle={false}
                                >
                                  2019-10-22T03:40:44.089Z
                                </t>
                              </span>,
                            },
                            Object {
                              "title": <MockedProcessListActionsKebab
                                processInstance={
                                  Object {
                                    "addons": Array [
                                      "jobs-management",
                                      "prometheus-monitoring",
                                      "process-management",
                                    ],
                                    "businessKey": "T1234",
                                    "end": "2019-10-22T05:40:44.089Z",
                                    "endpoint": "http://localhost:4000",
                                    "error": Object {
                                      "message": "Something went wrong",
                                      "nodeDefinitionId": "_2140F05A-364F-40B3-BB7B-B12927065DF8",
                                    },
                                    "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
                                    "lastUpdate": "2019-10-22T03:40:44.089Z",
                                    "nodes": Array [],
                                    "parentProcessInstance": Object {
                                      "addons": Array [
                                        "jobs-management",
                                        "prometheus-monitoring",
                                        "process-management",
                                      ],
                                      "businessKey": "Tra234",
                                      "childProcessInstances": Array [],
                                      "endpoint": "http://localhost:4000",
                                      "error": Object {
                                        "message": "Something went wrong",
                                        "nodeDefinitionId": "__a1e139d5-4e77-48c9-84ae-34578e9817n",
                                      },
                                      "id": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                      "lastUpdate": "2019-10-22T03:40:44.089Z",
                                      "milestones": Array [],
                                      "nodes": Array [],
                                      "parentProcessInstance": null,
                                      "parentProcessInstanceId": null,
                                      "processId": "travels",
                                      "processName": "travels",
                                      "roles": Array [],
                                      "rootProcessInstanceId": null,
                                      "serviceUrl": "http://localhost:4000",
                                      "start": "2019-10-22T03:40:44.089Z",
                                      "state": "ACTIVE",
                                      "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Berlin\\",\\"country\\":\\"Germany\\",\\"street\\":\\"Bakers\\",\\"zipCode\\":\\"100200\\"},\\"email\\":\\"cristiano@redhat.com\\",\\"firstName\\":\\"Cristiano\\",\\"lastName\\":\\"Nicolai\\",\\"nationality\\":\\"German\\"}}",
                                    },
                                    "parentProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                    "processId": "travels",
                                    "processName": "travels",
                                    "roles": Array [],
                                    "rootProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                    "serviceUrl": "http://localhost:4000",
                                    "start": "2019-10-22T03:40:44.089Z",
                                    "state": "ACTIVE",
                                    "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"US\\",\\"street\\":\\"Bangalore\\",\\"zipCode\\":\\"560093\\"},\\"email\\":\\"ajaganat@redhat.com\\",\\"firstName\\":\\"Ajay\\",\\"lastName\\":\\"Jaganathan\\",\\"nationality\\":\\"US\\"}}",
                                  }
                                }
                              />,
                            },
                          ],
                          "column-0": Object {
                            "formatters": Array [],
                            "props": Object {
                              "isVisible": true,
                            },
                            "title": <React.Fragment>
                              <Checkbox
                                aria-label="process-list-checkbox"
                                className=""
                                id="checkbox-e4448857-fa0c-403b-ad69-f0a353458b9d"
                                isChecked={false}
                                isDisabled={false}
                                isValid={true}
                                name="checkbox-e4448857-fa0c-403b-ad69-f0a353458b9d"
                                onChange={[Function]}
                              />
                            </React.Fragment>,
                          },
                          "column-5": Object {
                            "formatters": Array [],
                            "props": Object {
                              "isVisible": true,
                            },
                            "title": <MockedProcessListActionsKebab
                              processInstance={
                                Object {
                                  "addons": Array [
                                    "jobs-management",
                                    "prometheus-monitoring",
                                    "process-management",
                                  ],
                                  "businessKey": "T1234",
                                  "end": "2019-10-22T05:40:44.089Z",
                                  "endpoint": "http://localhost:4000",
                                  "error": Object {
                                    "message": "Something went wrong",
                                    "nodeDefinitionId": "_2140F05A-364F-40B3-BB7B-B12927065DF8",
                                  },
                                  "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
                                  "lastUpdate": "2019-10-22T03:40:44.089Z",
                                  "nodes": Array [],
                                  "parentProcessInstance": Object {
                                    "addons": Array [
                                      "jobs-management",
                                      "prometheus-monitoring",
                                      "process-management",
                                    ],
                                    "businessKey": "Tra234",
                                    "childProcessInstances": Array [],
                                    "endpoint": "http://localhost:4000",
                                    "error": Object {
                                      "message": "Something went wrong",
                                      "nodeDefinitionId": "__a1e139d5-4e77-48c9-84ae-34578e9817n",
                                    },
                                    "id": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                    "lastUpdate": "2019-10-22T03:40:44.089Z",
                                    "milestones": Array [],
                                    "nodes": Array [],
                                    "parentProcessInstance": null,
                                    "parentProcessInstanceId": null,
                                    "processId": "travels",
                                    "processName": "travels",
                                    "roles": Array [],
                                    "rootProcessInstanceId": null,
                                    "serviceUrl": "http://localhost:4000",
                                    "start": "2019-10-22T03:40:44.089Z",
                                    "state": "ACTIVE",
                                    "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Berlin\\",\\"country\\":\\"Germany\\",\\"street\\":\\"Bakers\\",\\"zipCode\\":\\"100200\\"},\\"email\\":\\"cristiano@redhat.com\\",\\"firstName\\":\\"Cristiano\\",\\"lastName\\":\\"Nicolai\\",\\"nationality\\":\\"German\\"}}",
                                  },
                                  "parentProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                  "processId": "travels",
                                  "processName": "travels",
                                  "roles": Array [],
                                  "rootProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                  "serviceUrl": "http://localhost:4000",
                                  "start": "2019-10-22T03:40:44.089Z",
                                  "state": "ACTIVE",
                                  "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"US\\",\\"street\\":\\"Bangalore\\",\\"zipCode\\":\\"560093\\"},\\"email\\":\\"ajaganat@redhat.com\\",\\"firstName\\":\\"Ajay\\",\\"lastName\\":\\"Jaganathan\\",\\"nationality\\":\\"US\\"}}",
                                }
                              }
                            />,
                          },
                          "created": Object {
                            "formatters": Array [],
                            "props": Object {
                              "isVisible": true,
                            },
                            "title": <t
                              ago={false}
                              calendar={false}
                              decimal={false}
                              element={null}
                              filter={[Function]}
                              fromNow={true}
                              interval={60000}
                              local={false}
                              onChange={[Function]}
                              titleFormat=""
                              toNow={false}
                              unit={null}
                              unix={false}
                              utc={false}
                              withTitle={false}
                            >
                              2019-10-22T03:40:44.089Z
                            </t>,
                          },
                          "id": Object {
                            "formatters": Array [],
                            "props": Object {
                              "isVisible": true,
                            },
                            "title": <React.Fragment>
                              <Link
                                to={
                                  Object {
                                    "pathname": "/Process/e4448857-fa0c-403b-ad69-f0a353458b9d",
                                    "state": Object {
                                      "filters": Object {
                                        "businessKey": Array [],
                                        "status": Array [
                                          "ACTIVE",
                                        ],
                                      },
                                    },
                                  }
                                }
                              >
                                <div>
                                  <strong>
                                    <ItemDescriptor
                                      itemDescription={
                                        Object {
                                          "description": "T1234",
                                          "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
                                          "name": "travels",
                                        }
                                      }
                                    />
                                  </strong>
                                </div>
                              </Link>
                              <EndpointLink
                                isLinkShown={false}
                                serviceUrl="http://localhost:4000"
                              />
                            </React.Fragment>,
                          },
                          "isExpanded": undefined,
                          "isFirst": true,
                          "isFirstVisible": true,
                          "isHeightAuto": false,
                          "isLast": true,
                          "isLastVisible": true,
                          "last-update": Object {
                            "formatters": Array [],
                            "props": Object {
                              "isVisible": true,
                            },
                            "title": <span>
                               
                              <HistoryIcon
                                className="pf-u-mr-sm"
                                color="currentColor"
                                noVerticalAlign={false}
                                size="sm"
                              />
                               Updated
                               
                              <t
                                ago={false}
                                calendar={false}
                                decimal={false}
                                element={null}
                                filter={[Function]}
                                fromNow={true}
                                interval={60000}
                                local={false}
                                onChange={[Function]}
                                titleFormat=""
                                toNow={false}
                                unit={null}
                                unix={false}
                                utc={false}
                                withTitle={false}
                              >
                                2019-10-22T03:40:44.089Z
                              </t>
                            </span>,
                          },
                          "secretTableRowKeyId": 0,
                          "status": Object {
                            "formatters": Array [],
                            "props": Object {
                              "isVisible": true,
                            },
                            "title": <React.Fragment>
                              <React.Fragment>
                                <OnRunningIcon
                                  className="pf-u-mr-sm"
                                  color="currentColor"
                                  noVerticalAlign={false}
                                  size="sm"
                                />
                                Active
                              </React.Fragment>
                            </React.Fragment>,
                          },
                        },
                      ]
                    }
                    onRow={[Function]}
                    renderers={
                      Object {
                        "body": Object {
                          "cell": [Function],
                          "row": [Function],
                          "wrapper": [Function],
                        },
                        "header": Object {
                          "cell": [Function],
                          "row": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "displayName": "Tr",
                            "render": [Function],
                          },
                          "wrapper": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "displayName": "Thead",
                            "render": [Function],
                          },
                        },
                        "table": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "TableComposable",
                          "render": [Function],
                        },
                      }
                    }
                    rowKey="secretTableRowKeyId"
                    rows={
                      Array [
                        Object {
                          "cells": Array [
                            Object {
                              "title": <React.Fragment>
                                <Checkbox
                                  aria-label="process-list-checkbox"
                                  className=""
                                  id="checkbox-e4448857-fa0c-403b-ad69-f0a353458b9d"
                                  isChecked={false}
                                  isDisabled={false}
                                  isValid={true}
                                  name="checkbox-e4448857-fa0c-403b-ad69-f0a353458b9d"
                                  onChange={[Function]}
                                />
                              </React.Fragment>,
                            },
                            Object {
                              "title": <React.Fragment>
                                <Link
                                  to={
                                    Object {
                                      "pathname": "/Process/e4448857-fa0c-403b-ad69-f0a353458b9d",
                                      "state": Object {
                                        "filters": Object {
                                          "businessKey": Array [],
                                          "status": Array [
                                            "ACTIVE",
                                          ],
                                        },
                                      },
                                    }
                                  }
                                >
                                  <div>
                                    <strong>
                                      <ItemDescriptor
                                        itemDescription={
                                          Object {
                                            "description": "T1234",
                                            "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
                                            "name": "travels",
                                          }
                                        }
                                      />
                                    </strong>
                                  </div>
                                </Link>
                                <EndpointLink
                                  isLinkShown={false}
                                  serviceUrl="http://localhost:4000"
                                />
                              </React.Fragment>,
                            },
                            Object {
                              "title": <React.Fragment>
                                <React.Fragment>
                                  <OnRunningIcon
                                    className="pf-u-mr-sm"
                                    color="currentColor"
                                    noVerticalAlign={false}
                                    size="sm"
                                  />
                                  Active
                                </React.Fragment>
                              </React.Fragment>,
                            },
                            Object {
                              "title": <t
                                ago={false}
                                calendar={false}
                                decimal={false}
                                element={null}
                                filter={[Function]}
                                fromNow={true}
                                interval={60000}
                                local={false}
                                onChange={[Function]}
                                titleFormat=""
                                toNow={false}
                                unit={null}
                                unix={false}
                                utc={false}
                                withTitle={false}
                              >
                                2019-10-22T03:40:44.089Z
                              </t>,
                            },
                            Object {
                              "title": <span>
                                 
                                <HistoryIcon
                                  className="pf-u-mr-sm"
                                  color="currentColor"
                                  noVerticalAlign={false}
                                  size="sm"
                                />
                                 Updated
                                 
                                <t
                                  ago={false}
                                  calendar={false}
                                  decimal={false}
                                  element={null}
                                  filter={[Function]}
                                  fromNow={true}
                                  interval={60000}
                                  local={false}
                                  onChange={[Function]}
                                  titleFormat=""
                                  toNow={false}
                                  unit={null}
                                  unix={false}
                                  utc={false}
                                  withTitle={false}
                                >
                                  2019-10-22T03:40:44.089Z
                                </t>
                              </span>,
                            },
                            Object {
                              "title": <MockedProcessListActionsKebab
                                processInstance={
                                  Object {
                                    "addons": Array [
                                      "jobs-management",
                                      "prometheus-monitoring",
                                      "process-management",
                                    ],
                                    "businessKey": "T1234",
                                    "end": "2019-10-22T05:40:44.089Z",
                                    "endpoint": "http://localhost:4000",
                                    "error": Object {
                                      "message": "Something went wrong",
                                      "nodeDefinitionId": "_2140F05A-364F-40B3-BB7B-B12927065DF8",
                                    },
                                    "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
                                    "lastUpdate": "2019-10-22T03:40:44.089Z",
                                    "nodes": Array [],
                                    "parentProcessInstance": Object {
                                      "addons": Array [
                                        "jobs-management",
                                        "prometheus-monitoring",
                                        "process-management",
                                      ],
                                      "businessKey": "Tra234",
                                      "childProcessInstances": Array [],
                                      "endpoint": "http://localhost:4000",
                                      "error": Object {
                                        "message": "Something went wrong",
                                        "nodeDefinitionId": "__a1e139d5-4e77-48c9-84ae-34578e9817n",
                                      },
                                      "id": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                      "lastUpdate": "2019-10-22T03:40:44.089Z",
                                      "milestones": Array [],
                                      "nodes": Array [],
                                      "parentProcessInstance": null,
                                      "parentProcessInstanceId": null,
                                      "processId": "travels",
                                      "processName": "travels",
                                      "roles": Array [],
                                      "rootProcessInstanceId": null,
                                      "serviceUrl": "http://localhost:4000",
                                      "start": "2019-10-22T03:40:44.089Z",
                                      "state": "ACTIVE",
                                      "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Berlin\\",\\"country\\":\\"Germany\\",\\"street\\":\\"Bakers\\",\\"zipCode\\":\\"100200\\"},\\"email\\":\\"cristiano@redhat.com\\",\\"firstName\\":\\"Cristiano\\",\\"lastName\\":\\"Nicolai\\",\\"nationality\\":\\"German\\"}}",
                                    },
                                    "parentProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                    "processId": "travels",
                                    "processName": "travels",
                                    "roles": Array [],
                                    "rootProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                    "serviceUrl": "http://localhost:4000",
                                    "start": "2019-10-22T03:40:44.089Z",
                                    "state": "ACTIVE",
                                    "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"US\\",\\"street\\":\\"Bangalore\\",\\"zipCode\\":\\"560093\\"},\\"email\\":\\"ajaganat@redhat.com\\",\\"firstName\\":\\"Ajay\\",\\"lastName\\":\\"Jaganathan\\",\\"nationality\\":\\"US\\"}}",
                                  }
                                }
                              />,
                            },
                          ],
                          "column-0": Object {
                            "formatters": Array [],
                            "props": Object {
                              "isVisible": true,
                            },
                            "title": <React.Fragment>
                              <Checkbox
                                aria-label="process-list-checkbox"
                                className=""
                                id="checkbox-e4448857-fa0c-403b-ad69-f0a353458b9d"
                                isChecked={false}
                                isDisabled={false}
                                isValid={true}
                                name="checkbox-e4448857-fa0c-403b-ad69-f0a353458b9d"
                                onChange={[Function]}
                              />
                            </React.Fragment>,
                          },
                          "column-5": Object {
                            "formatters": Array [],
                            "props": Object {
                              "isVisible": true,
                            },
                            "title": <MockedProcessListActionsKebab
                              processInstance={
                                Object {
                                  "addons": Array [
                                    "jobs-management",
                                    "prometheus-monitoring",
                                    "process-management",
                                  ],
                                  "businessKey": "T1234",
                                  "end": "2019-10-22T05:40:44.089Z",
                                  "endpoint": "http://localhost:4000",
                                  "error": Object {
                                    "message": "Something went wrong",
                                    "nodeDefinitionId": "_2140F05A-364F-40B3-BB7B-B12927065DF8",
                                  },
                                  "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
                                  "lastUpdate": "2019-10-22T03:40:44.089Z",
                                  "nodes": Array [],
                                  "parentProcessInstance": Object {
                                    "addons": Array [
                                      "jobs-management",
                                      "prometheus-monitoring",
                                      "process-management",
                                    ],
                                    "businessKey": "Tra234",
                                    "childProcessInstances": Array [],
                                    "endpoint": "http://localhost:4000",
                                    "error": Object {
                                      "message": "Something went wrong",
                                      "nodeDefinitionId": "__a1e139d5-4e77-48c9-84ae-34578e9817n",
                                    },
                                    "id": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                    "lastUpdate": "2019-10-22T03:40:44.089Z",
                                    "milestones": Array [],
                                    "nodes": Array [],
                                    "parentProcessInstance": null,
                                    "parentProcessInstanceId": null,
                                    "processId": "travels",
                                    "processName": "travels",
                                    "roles": Array [],
                                    "rootProcessInstanceId": null,
                                    "serviceUrl": "http://localhost:4000",
                                    "start": "2019-10-22T03:40:44.089Z",
                                    "state": "ACTIVE",
                                    "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Berlin\\",\\"country\\":\\"Germany\\",\\"street\\":\\"Bakers\\",\\"zipCode\\":\\"100200\\"},\\"email\\":\\"cristiano@redhat.com\\",\\"firstName\\":\\"Cristiano\\",\\"lastName\\":\\"Nicolai\\",\\"nationality\\":\\"German\\"}}",
                                  },
                                  "parentProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                  "processId": "travels",
                                  "processName": "travels",
                                  "roles": Array [],
                                  "rootProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                  "serviceUrl": "http://localhost:4000",
                                  "start": "2019-10-22T03:40:44.089Z",
                                  "state": "ACTIVE",
                                  "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"US\\",\\"street\\":\\"Bangalore\\",\\"zipCode\\":\\"560093\\"},\\"email\\":\\"ajaganat@redhat.com\\",\\"firstName\\":\\"Ajay\\",\\"lastName\\":\\"Jaganathan\\",\\"nationality\\":\\"US\\"}}",
                                }
                              }
                            />,
                          },
                          "created": Object {
                            "formatters": Array [],
                            "props": Object {
                              "isVisible": true,
                            },
                            "title": <t
                              ago={false}
                              calendar={false}
                              decimal={false}
                              element={null}
                              filter={[Function]}
                              fromNow={true}
                              interval={60000}
                              local={false}
                              onChange={[Function]}
                              titleFormat=""
                              toNow={false}
                              unit={null}
                              unix={false}
                              utc={false}
                              withTitle={false}
                            >
                              2019-10-22T03:40:44.089Z
                            </t>,
                          },
                          "id": Object {
                            "formatters": Array [],
                            "props": Object {
                              "isVisible": true,
                            },
                            "title": <React.Fragment>
                              <Link
                                to={
                                  Object {
                                    "pathname": "/Process/e4448857-fa0c-403b-ad69-f0a353458b9d",
                                    "state": Object {
                                      "filters": Object {
                                        "businessKey": Array [],
                                        "status": Array [
                                          "ACTIVE",
                                        ],
                                      },
                                    },
                                  }
                                }
                              >
                                <div>
                                  <strong>
                                    <ItemDescriptor
                                      itemDescription={
                                        Object {
                                          "description": "T1234",
                                          "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
                                          "name": "travels",
                                        }
                                      }
                                    />
                                  </strong>
                                </div>
                              </Link>
                              <EndpointLink
                                isLinkShown={false}
                                serviceUrl="http://localhost:4000"
                              />
                            </React.Fragment>,
                          },
                          "isExpanded": undefined,
                          "isFirst": true,
                          "isFirstVisible": true,
                          "isHeightAuto": false,
                          "isLast": true,
                          "isLastVisible": true,
                          "last-update": Object {
                            "formatters": Array [],
                            "props": Object {
                              "isVisible": true,
                            },
                            "title": <span>
                               
                              <HistoryIcon
                                className="pf-u-mr-sm"
                                color="currentColor"
                                noVerticalAlign={false}
                                size="sm"
                              />
                               Updated
                               
                              <t
                                ago={false}
                                calendar={false}
                                decimal={false}
                                element={null}
                                filter={[Function]}
                                fromNow={true}
                                interval={60000}
                                local={false}
                                onChange={[Function]}
                                titleFormat=""
                                toNow={false}
                                unit={null}
                                unix={false}
                                utc={false}
                                withTitle={false}
                              >
                                2019-10-22T03:40:44.089Z
                              </t>
                            </span>,
                          },
                          "secretTableRowKeyId": 0,
                          "status": Object {
                            "formatters": Array [],
                            "props": Object {
                              "isVisible": true,
                            },
                            "title": <React.Fragment>
                              <React.Fragment>
                                <OnRunningIcon
                                  className="pf-u-mr-sm"
                                  color="currentColor"
                                  noVerticalAlign={false}
                                  size="sm"
                                />
                                Active
                              </React.Fragment>
                            </React.Fragment>,
                          },
                        },
                      ]
                    }
                  >
                    <BodyWrapper
                      className=""
                      headerRows={null}
                      mappedRows={
                        Array [
                          Object {
                            "cells": Array [
                              Object {
                                "title": <React.Fragment>
                                  <Checkbox
                                    aria-label="process-list-checkbox"
                                    className=""
                                    id="checkbox-e4448857-fa0c-403b-ad69-f0a353458b9d"
                                    isChecked={false}
                                    isDisabled={false}
                                    isValid={true}
                                    name="checkbox-e4448857-fa0c-403b-ad69-f0a353458b9d"
                                    onChange={[Function]}
                                  />
                                </React.Fragment>,
                              },
                              Object {
                                "title": <React.Fragment>
                                  <Link
                                    to={
                                      Object {
                                        "pathname": "/Process/e4448857-fa0c-403b-ad69-f0a353458b9d",
                                        "state": Object {
                                          "filters": Object {
                                            "businessKey": Array [],
                                            "status": Array [
                                              "ACTIVE",
                                            ],
                                          },
                                        },
                                      }
                                    }
                                  >
                                    <div>
                                      <strong>
                                        <ItemDescriptor
                                          itemDescription={
                                            Object {
                                              "description": "T1234",
                                              "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
                                              "name": "travels",
                                            }
                                          }
                                        />
                                      </strong>
                                    </div>
                                  </Link>
                                  <EndpointLink
                                    isLinkShown={false}
                                    serviceUrl="http://localhost:4000"
                                  />
                                </React.Fragment>,
                              },
                              Object {
                                "title": <React.Fragment>
                                  <React.Fragment>
                                    <OnRunningIcon
                                      className="pf-u-mr-sm"
                                      color="currentColor"
                                      noVerticalAlign={false}
                                      size="sm"
                                    />
                                    Active
                                  </React.Fragment>
                                </React.Fragment>,
                              },
                              Object {
                                "title": <t
                                  ago={false}
                                  calendar={false}
                                  decimal={false}
                                  element={null}
                                  filter={[Function]}
                                  fromNow={true}
                                  interval={60000}
                                  local={false}
                                  onChange={[Function]}
                                  titleFormat=""
                                  toNow={false}
                                  unit={null}
                                  unix={false}
                                  utc={false}
                                  withTitle={false}
                                >
                                  2019-10-22T03:40:44.089Z
                                </t>,
                              },
                              Object {
                                "title": <span>
                                   
                                  <HistoryIcon
                                    className="pf-u-mr-sm"
                                    color="currentColor"
                                    noVerticalAlign={false}
                                    size="sm"
                                  />
                                   Updated
                                   
                                  <t
                                    ago={false}
                                    calendar={false}
                                    decimal={false}
                                    element={null}
                                    filter={[Function]}
                                    fromNow={true}
                                    interval={60000}
                                    local={false}
                                    onChange={[Function]}
                                    titleFormat=""
                                    toNow={false}
                                    unit={null}
                                    unix={false}
                                    utc={false}
                                    withTitle={false}
                                  >
                                    2019-10-22T03:40:44.089Z
                                  </t>
                                </span>,
                              },
                              Object {
                                "title": <MockedProcessListActionsKebab
                                  processInstance={
                                    Object {
                                      "addons": Array [
                                        "jobs-management",
                                        "prometheus-monitoring",
                                        "process-management",
                                      ],
                                      "businessKey": "T1234",
                                      "end": "2019-10-22T05:40:44.089Z",
                                      "endpoint": "http://localhost:4000",
                                      "error": Object {
                                        "message": "Something went wrong",
                                        "nodeDefinitionId": "_2140F05A-364F-40B3-BB7B-B12927065DF8",
                                      },
                                      "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
                                      "lastUpdate": "2019-10-22T03:40:44.089Z",
                                      "nodes": Array [],
                                      "parentProcessInstance": Object {
                                        "addons": Array [
                                          "jobs-management",
                                          "prometheus-monitoring",
                                          "process-management",
                                        ],
                                        "businessKey": "Tra234",
                                        "childProcessInstances": Array [],
                                        "endpoint": "http://localhost:4000",
                                        "error": Object {
                                          "message": "Something went wrong",
                                          "nodeDefinitionId": "__a1e139d5-4e77-48c9-84ae-34578e9817n",
                                        },
                                        "id": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                        "lastUpdate": "2019-10-22T03:40:44.089Z",
                                        "milestones": Array [],
                                        "nodes": Array [],
                                        "parentProcessInstance": null,
                                        "parentProcessInstanceId": null,
                                        "processId": "travels",
                                        "processName": "travels",
                                        "roles": Array [],
                                        "rootProcessInstanceId": null,
                                        "serviceUrl": "http://localhost:4000",
                                        "start": "2019-10-22T03:40:44.089Z",
                                        "state": "ACTIVE",
                                        "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Berlin\\",\\"country\\":\\"Germany\\",\\"street\\":\\"Bakers\\",\\"zipCode\\":\\"100200\\"},\\"email\\":\\"cristiano@redhat.com\\",\\"firstName\\":\\"Cristiano\\",\\"lastName\\":\\"Nicolai\\",\\"nationality\\":\\"German\\"}}",
                                      },
                                      "parentProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                      "processId": "travels",
                                      "processName": "travels",
                                      "roles": Array [],
                                      "rootProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                      "serviceUrl": "http://localhost:4000",
                                      "start": "2019-10-22T03:40:44.089Z",
                                      "state": "ACTIVE",
                                      "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"US\\",\\"street\\":\\"Bangalore\\",\\"zipCode\\":\\"560093\\"},\\"email\\":\\"ajaganat@redhat.com\\",\\"firstName\\":\\"Ajay\\",\\"lastName\\":\\"Jaganathan\\",\\"nationality\\":\\"US\\"}}",
                                    }
                                  }
                                />,
                              },
                            ],
                            "column-0": Object {
                              "formatters": Array [],
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <React.Fragment>
                                <Checkbox
                                  aria-label="process-list-checkbox"
                                  className=""
                                  id="checkbox-e4448857-fa0c-403b-ad69-f0a353458b9d"
                                  isChecked={false}
                                  isDisabled={false}
                                  isValid={true}
                                  name="checkbox-e4448857-fa0c-403b-ad69-f0a353458b9d"
                                  onChange={[Function]}
                                />
                              </React.Fragment>,
                            },
                            "column-5": Object {
                              "formatters": Array [],
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <MockedProcessListActionsKebab
                                processInstance={
                                  Object {
                                    "addons": Array [
                                      "jobs-management",
                                      "prometheus-monitoring",
                                      "process-management",
                                    ],
                                    "businessKey": "T1234",
                                    "end": "2019-10-22T05:40:44.089Z",
                                    "endpoint": "http://localhost:4000",
                                    "error": Object {
                                      "message": "Something went wrong",
                                      "nodeDefinitionId": "_2140F05A-364F-40B3-BB7B-B12927065DF8",
                                    },
                                    "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
                                    "lastUpdate": "2019-10-22T03:40:44.089Z",
                                    "nodes": Array [],
                                    "parentProcessInstance": Object {
                                      "addons": Array [
                                        "jobs-management",
                                        "prometheus-monitoring",
                                        "process-management",
                                      ],
                                      "businessKey": "Tra234",
                                      "childProcessInstances": Array [],
                                      "endpoint": "http://localhost:4000",
                                      "error": Object {
                                        "message": "Something went wrong",
                                        "nodeDefinitionId": "__a1e139d5-4e77-48c9-84ae-34578e9817n",
                                      },
                                      "id": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                      "lastUpdate": "2019-10-22T03:40:44.089Z",
                                      "milestones": Array [],
                                      "nodes": Array [],
                                      "parentProcessInstance": null,
                                      "parentProcessInstanceId": null,
                                      "processId": "travels",
                                      "processName": "travels",
                                      "roles": Array [],
                                      "rootProcessInstanceId": null,
                                      "serviceUrl": "http://localhost:4000",
                                      "start": "2019-10-22T03:40:44.089Z",
                                      "state": "ACTIVE",
                                      "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Berlin\\",\\"country\\":\\"Germany\\",\\"street\\":\\"Bakers\\",\\"zipCode\\":\\"100200\\"},\\"email\\":\\"cristiano@redhat.com\\",\\"firstName\\":\\"Cristiano\\",\\"lastName\\":\\"Nicolai\\",\\"nationality\\":\\"German\\"}}",
                                    },
                                    "parentProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                    "processId": "travels",
                                    "processName": "travels",
                                    "roles": Array [],
                                    "rootProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                    "serviceUrl": "http://localhost:4000",
                                    "start": "2019-10-22T03:40:44.089Z",
                                    "state": "ACTIVE",
                                    "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"US\\",\\"street\\":\\"Bangalore\\",\\"zipCode\\":\\"560093\\"},\\"email\\":\\"ajaganat@redhat.com\\",\\"firstName\\":\\"Ajay\\",\\"lastName\\":\\"Jaganathan\\",\\"nationality\\":\\"US\\"}}",
                                  }
                                }
                              />,
                            },
                            "created": Object {
                              "formatters": Array [],
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <t
                                ago={false}
                                calendar={false}
                                decimal={false}
                                element={null}
                                filter={[Function]}
                                fromNow={true}
                                interval={60000}
                                local={false}
                                onChange={[Function]}
                                titleFormat=""
                                toNow={false}
                                unit={null}
                                unix={false}
                                utc={false}
                                withTitle={false}
                              >
                                2019-10-22T03:40:44.089Z
                              </t>,
                            },
                            "id": Object {
                              "formatters": Array [],
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <React.Fragment>
                                <Link
                                  to={
                                    Object {
                                      "pathname": "/Process/e4448857-fa0c-403b-ad69-f0a353458b9d",
                                      "state": Object {
                                        "filters": Object {
                                          "businessKey": Array [],
                                          "status": Array [
                                            "ACTIVE",
                                          ],
                                        },
                                      },
                                    }
                                  }
                                >
                                  <div>
                                    <strong>
                                      <ItemDescriptor
                                        itemDescription={
                                          Object {
                                            "description": "T1234",
                                            "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
                                            "name": "travels",
                                          }
                                        }
                                      />
                                    </strong>
                                  </div>
                                </Link>
                                <EndpointLink
                                  isLinkShown={false}
                                  serviceUrl="http://localhost:4000"
                                />
                              </React.Fragment>,
                            },
                            "isExpanded": undefined,
                            "isFirst": true,
                            "isFirstVisible": true,
                            "isHeightAuto": false,
                            "isLast": true,
                            "isLastVisible": true,
                            "last-update": Object {
                              "formatters": Array [],
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <span>
                                 
                                <HistoryIcon
                                  className="pf-u-mr-sm"
                                  color="currentColor"
                                  noVerticalAlign={false}
                                  size="sm"
                                />
                                 Updated
                                 
                                <t
                                  ago={false}
                                  calendar={false}
                                  decimal={false}
                                  element={null}
                                  filter={[Function]}
                                  fromNow={true}
                                  interval={60000}
                                  local={false}
                                  onChange={[Function]}
                                  titleFormat=""
                                  toNow={false}
                                  unit={null}
                                  unix={false}
                                  utc={false}
                                  withTitle={false}
                                >
                                  2019-10-22T03:40:44.089Z
                                </t>
                              </span>,
                            },
                            "secretTableRowKeyId": 0,
                            "status": Object {
                              "formatters": Array [],
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <React.Fragment>
                                <React.Fragment>
                                  <OnRunningIcon
                                    className="pf-u-mr-sm"
                                    color="currentColor"
                                    noVerticalAlign={false}
                                    size="sm"
                                  />
                                  Active
                                </React.Fragment>
                              </React.Fragment>,
                            },
                          },
                        ]
                      }
                    >
                      <Tbody
                        className=""
                      >
                        <TbodyBase
                          className=""
                          innerRef={null}
                        >
                          <tbody
                            className=""
                            role="rowgroup"
                          >
                            <BodyRow
                              columns={
                                Array [
                                  Object {
                                    "cell": Object {
                                      "formatters": Array [
                                        [Function],
                                      ],
                                      "transforms": Array [
                                        [Function],
                                      ],
                                    },
                                    "data": undefined,
                                    "extraParams": Object {
                                      "actionResolver": undefined,
                                      "actions": undefined,
                                      "allRowsSelected": false,
                                      "areActionsDisabled": undefined,
                                      "canSelectAll": true,
                                      "canSortFavorites": true,
                                      "contentId": "expanded-content",
                                      "dropdownDirection": "down",
                                      "dropdownPosition": "right",
                                      "expandId": "expandable-toggle",
                                      "firstUserColumnIndex": 0,
                                      "onCollapse": undefined,
                                      "onExpand": undefined,
                                      "onFavorite": undefined,
                                      "onRowEdit": undefined,
                                      "onSelect": undefined,
                                      "onSort": undefined,
                                      "rowLabeledBy": "simple-node",
                                      "selectVariant": "checkbox",
                                      "sortBy": undefined,
                                    },
                                    "header": Object {
                                      "formatters": Array [],
                                      "label": "",
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "property": "column-0",
                                    "props": Object {
                                      "data-key": 0,
                                      "data-label": "",
                                    },
                                  },
                                  Object {
                                    "cell": Object {
                                      "formatters": Array [
                                        [Function],
                                      ],
                                      "transforms": Array [
                                        [Function],
                                      ],
                                    },
                                    "data": undefined,
                                    "extraParams": Object {
                                      "actionResolver": undefined,
                                      "actions": undefined,
                                      "allRowsSelected": false,
                                      "areActionsDisabled": undefined,
                                      "canSelectAll": true,
                                      "canSortFavorites": true,
                                      "contentId": "expanded-content",
                                      "dropdownDirection": "down",
                                      "dropdownPosition": "right",
                                      "expandId": "expandable-toggle",
                                      "firstUserColumnIndex": 0,
                                      "onCollapse": undefined,
                                      "onExpand": undefined,
                                      "onFavorite": undefined,
                                      "onRowEdit": undefined,
                                      "onSelect": undefined,
                                      "onSort": undefined,
                                      "rowLabeledBy": "simple-node",
                                      "selectVariant": "checkbox",
                                      "sortBy": undefined,
                                    },
                                    "header": Object {
                                      "formatters": Array [],
                                      "label": "Id",
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "property": "id",
                                    "props": Object {
                                      "data-key": 1,
                                      "data-label": "Id",
                                    },
                                  },
                                  Object {
                                    "cell": Object {
                                      "formatters": Array [
                                        [Function],
                                      ],
                                      "transforms": Array [
                                        [Function],
                                      ],
                                    },
                                    "data": undefined,
                                    "extraParams": Object {
                                      "actionResolver": undefined,
                                      "actions": undefined,
                                      "allRowsSelected": false,
                                      "areActionsDisabled": undefined,
                                      "canSelectAll": true,
                                      "canSortFavorites": true,
                                      "contentId": "expanded-content",
                                      "dropdownDirection": "down",
                                      "dropdownPosition": "right",
                                      "expandId": "expandable-toggle",
                                      "firstUserColumnIndex": 0,
                                      "onCollapse": undefined,
                                      "onExpand": undefined,
                                      "onFavorite": undefined,
                                      "onRowEdit": undefined,
                                      "onSelect": undefined,
                                      "onSort": undefined,
                                      "rowLabeledBy": "simple-node",
                                      "selectVariant": "checkbox",
                                      "sortBy": undefined,
                                    },
                                    "header": Object {
                                      "formatters": Array [],
                                      "label": "Status",
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "property": "status",
                                    "props": Object {
                                      "data-key": 2,
                                      "data-label": "Status",
                                    },
                                  },
                                  Object {
                                    "cell": Object {
                                      "formatters": Array [
                                        [Function],
                                      ],
                                      "transforms": Array [
                                        [Function],
                                      ],
                                    },
                                    "data": undefined,
                                    "extraParams": Object {
                                      "actionResolver": undefined,
                                      "actions": undefined,
                                      "allRowsSelected": false,
                                      "areActionsDisabled": undefined,
                                      "canSelectAll": true,
                                      "canSortFavorites": true,
                                      "contentId": "expanded-content",
                                      "dropdownDirection": "down",
                                      "dropdownPosition": "right",
                                      "expandId": "expandable-toggle",
                                      "firstUserColumnIndex": 0,
                                      "onCollapse": undefined,
                                      "onExpand": undefined,
                                      "onFavorite": undefined,
                                      "onRowEdit": undefined,
                                      "onSelect": undefined,
                                      "onSort": undefined,
                                      "rowLabeledBy": "simple-node",
                                      "selectVariant": "checkbox",
                                      "sortBy": undefined,
                                    },
                                    "header": Object {
                                      "formatters": Array [],
                                      "label": "Created",
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "property": "created",
                                    "props": Object {
                                      "data-key": 3,
                                      "data-label": "Created",
                                    },
                                  },
                                  Object {
                                    "cell": Object {
                                      "formatters": Array [
                                        [Function],
                                      ],
                                      "transforms": Array [
                                        [Function],
                                      ],
                                    },
                                    "data": undefined,
                                    "extraParams": Object {
                                      "actionResolver": undefined,
                                      "actions": undefined,
                                      "allRowsSelected": false,
                                      "areActionsDisabled": undefined,
                                      "canSelectAll": true,
                                      "canSortFavorites": true,
                                      "contentId": "expanded-content",
                                      "dropdownDirection": "down",
                                      "dropdownPosition": "right",
                                      "expandId": "expandable-toggle",
                                      "firstUserColumnIndex": 0,
                                      "onCollapse": undefined,
                                      "onExpand": undefined,
                                      "onFavorite": undefined,
                                      "onRowEdit": undefined,
                                      "onSelect": undefined,
                                      "onSort": undefined,
                                      "rowLabeledBy": "simple-node",
                                      "selectVariant": "checkbox",
                                      "sortBy": undefined,
                                    },
                                    "header": Object {
                                      "formatters": Array [],
                                      "label": "Last update",
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "property": "last-update",
                                    "props": Object {
                                      "data-key": 4,
                                      "data-label": "Last update",
                                    },
                                  },
                                  Object {
                                    "cell": Object {
                                      "formatters": Array [
                                        [Function],
                                      ],
                                      "transforms": Array [
                                        [Function],
                                      ],
                                    },
                                    "data": undefined,
                                    "extraParams": Object {
                                      "actionResolver": undefined,
                                      "actions": undefined,
                                      "allRowsSelected": false,
                                      "areActionsDisabled": undefined,
                                      "canSelectAll": true,
                                      "canSortFavorites": true,
                                      "contentId": "expanded-content",
                                      "dropdownDirection": "down",
                                      "dropdownPosition": "right",
                                      "expandId": "expandable-toggle",
                                      "firstUserColumnIndex": 0,
                                      "onCollapse": undefined,
                                      "onExpand": undefined,
                                      "onFavorite": undefined,
                                      "onRowEdit": undefined,
                                      "onSelect": undefined,
                                      "onSort": undefined,
                                      "rowLabeledBy": "simple-node",
                                      "selectVariant": "checkbox",
                                      "sortBy": undefined,
                                    },
                                    "header": Object {
                                      "formatters": Array [],
                                      "label": "",
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "property": "column-5",
                                    "props": Object {
                                      "data-key": 5,
                                      "data-label": "",
                                    },
                                  },
                                ]
                              }
                              key="0-row"
                              onRow={[Function]}
                              renderers={
                                Object {
                                  "cell": [Function],
                                  "row": [Function],
                                  "wrapper": [Function],
                                }
                              }
                              rowData={
                                Object {
                                  "cells": Array [
                                    Object {
                                      "title": <React.Fragment>
                                        <Checkbox
                                          aria-label="process-list-checkbox"
                                          className=""
                                          id="checkbox-e4448857-fa0c-403b-ad69-f0a353458b9d"
                                          isChecked={false}
                                          isDisabled={false}
                                          isValid={true}
                                          name="checkbox-e4448857-fa0c-403b-ad69-f0a353458b9d"
                                          onChange={[Function]}
                                        />
                                      </React.Fragment>,
                                    },
                                    Object {
                                      "title": <React.Fragment>
                                        <Link
                                          to={
                                            Object {
                                              "pathname": "/Process/e4448857-fa0c-403b-ad69-f0a353458b9d",
                                              "state": Object {
                                                "filters": Object {
                                                  "businessKey": Array [],
                                                  "status": Array [
                                                    "ACTIVE",
                                                  ],
                                                },
                                              },
                                            }
                                          }
                                        >
                                          <div>
                                            <strong>
                                              <ItemDescriptor
                                                itemDescription={
                                                  Object {
                                                    "description": "T1234",
                                                    "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
                                                    "name": "travels",
                                                  }
                                                }
                                              />
                                            </strong>
                                          </div>
                                        </Link>
                                        <EndpointLink
                                          isLinkShown={false}
                                          serviceUrl="http://localhost:4000"
                                        />
                                      </React.Fragment>,
                                    },
                                    Object {
                                      "title": <React.Fragment>
                                        <React.Fragment>
                                          <OnRunningIcon
                                            className="pf-u-mr-sm"
                                            color="currentColor"
                                            noVerticalAlign={false}
                                            size="sm"
                                          />
                                          Active
                                        </React.Fragment>
                                      </React.Fragment>,
                                    },
                                    Object {
                                      "title": <t
                                        ago={false}
                                        calendar={false}
                                        decimal={false}
                                        element={null}
                                        filter={[Function]}
                                        fromNow={true}
                                        interval={60000}
                                        local={false}
                                        onChange={[Function]}
                                        titleFormat=""
                                        toNow={false}
                                        unit={null}
                                        unix={false}
                                        utc={false}
                                        withTitle={false}
                                      >
                                        2019-10-22T03:40:44.089Z
                                      </t>,
                                    },
                                    Object {
                                      "title": <span>
                                         
                                        <HistoryIcon
                                          className="pf-u-mr-sm"
                                          color="currentColor"
                                          noVerticalAlign={false}
                                          size="sm"
                                        />
                                         Updated
                                         
                                        <t
                                          ago={false}
                                          calendar={false}
                                          decimal={false}
                                          element={null}
                                          filter={[Function]}
                                          fromNow={true}
                                          interval={60000}
                                          local={false}
                                          onChange={[Function]}
                                          titleFormat=""
                                          toNow={false}
                                          unit={null}
                                          unix={false}
                                          utc={false}
                                          withTitle={false}
                                        >
                                          2019-10-22T03:40:44.089Z
                                        </t>
                                      </span>,
                                    },
                                    Object {
                                      "title": <MockedProcessListActionsKebab
                                        processInstance={
                                          Object {
                                            "addons": Array [
                                              "jobs-management",
                                              "prometheus-monitoring",
                                              "process-management",
                                            ],
                                            "businessKey": "T1234",
                                            "end": "2019-10-22T05:40:44.089Z",
                                            "endpoint": "http://localhost:4000",
                                            "error": Object {
                                              "message": "Something went wrong",
                                              "nodeDefinitionId": "_2140F05A-364F-40B3-BB7B-B12927065DF8",
                                            },
                                            "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
                                            "lastUpdate": "2019-10-22T03:40:44.089Z",
                                            "nodes": Array [],
                                            "parentProcessInstance": Object {
                                              "addons": Array [
                                                "jobs-management",
                                                "prometheus-monitoring",
                                                "process-management",
                                              ],
                                              "businessKey": "Tra234",
                                              "childProcessInstances": Array [],
                                              "endpoint": "http://localhost:4000",
                                              "error": Object {
                                                "message": "Something went wrong",
                                                "nodeDefinitionId": "__a1e139d5-4e77-48c9-84ae-34578e9817n",
                                              },
                                              "id": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                              "lastUpdate": "2019-10-22T03:40:44.089Z",
                                              "milestones": Array [],
                                              "nodes": Array [],
                                              "parentProcessInstance": null,
                                              "parentProcessInstanceId": null,
                                              "processId": "travels",
                                              "processName": "travels",
                                              "roles": Array [],
                                              "rootProcessInstanceId": null,
                                              "serviceUrl": "http://localhost:4000",
                                              "start": "2019-10-22T03:40:44.089Z",
                                              "state": "ACTIVE",
                                              "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Berlin\\",\\"country\\":\\"Germany\\",\\"street\\":\\"Bakers\\",\\"zipCode\\":\\"100200\\"},\\"email\\":\\"cristiano@redhat.com\\",\\"firstName\\":\\"Cristiano\\",\\"lastName\\":\\"Nicolai\\",\\"nationality\\":\\"German\\"}}",
                                            },
                                            "parentProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                            "processId": "travels",
                                            "processName": "travels",
                                            "roles": Array [],
                                            "rootProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                            "serviceUrl": "http://localhost:4000",
                                            "start": "2019-10-22T03:40:44.089Z",
                                            "state": "ACTIVE",
                                            "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"US\\",\\"street\\":\\"Bangalore\\",\\"zipCode\\":\\"560093\\"},\\"email\\":\\"ajaganat@redhat.com\\",\\"firstName\\":\\"Ajay\\",\\"lastName\\":\\"Jaganathan\\",\\"nationality\\":\\"US\\"}}",
                                          }
                                        }
                                      />,
                                    },
                                  ],
                                  "column-0": Object {
                                    "formatters": Array [],
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": <React.Fragment>
                                      <Checkbox
                                        aria-label="process-list-checkbox"
                                        className=""
                                        id="checkbox-e4448857-fa0c-403b-ad69-f0a353458b9d"
                                        isChecked={false}
                                        isDisabled={false}
                                        isValid={true}
                                        name="checkbox-e4448857-fa0c-403b-ad69-f0a353458b9d"
                                        onChange={[Function]}
                                      />
                                    </React.Fragment>,
                                  },
                                  "column-5": Object {
                                    "formatters": Array [],
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": <MockedProcessListActionsKebab
                                      processInstance={
                                        Object {
                                          "addons": Array [
                                            "jobs-management",
                                            "prometheus-monitoring",
                                            "process-management",
                                          ],
                                          "businessKey": "T1234",
                                          "end": "2019-10-22T05:40:44.089Z",
                                          "endpoint": "http://localhost:4000",
                                          "error": Object {
                                            "message": "Something went wrong",
                                            "nodeDefinitionId": "_2140F05A-364F-40B3-BB7B-B12927065DF8",
                                          },
                                          "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
                                          "lastUpdate": "2019-10-22T03:40:44.089Z",
                                          "nodes": Array [],
                                          "parentProcessInstance": Object {
                                            "addons": Array [
                                              "jobs-management",
                                              "prometheus-monitoring",
                                              "process-management",
                                            ],
                                            "businessKey": "Tra234",
                                            "childProcessInstances": Array [],
                                            "endpoint": "http://localhost:4000",
                                            "error": Object {
                                              "message": "Something went wrong",
                                              "nodeDefinitionId": "__a1e139d5-4e77-48c9-84ae-34578e9817n",
                                            },
                                            "id": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                            "lastUpdate": "2019-10-22T03:40:44.089Z",
                                            "milestones": Array [],
                                            "nodes": Array [],
                                            "parentProcessInstance": null,
                                            "parentProcessInstanceId": null,
                                            "processId": "travels",
                                            "processName": "travels",
                                            "roles": Array [],
                                            "rootProcessInstanceId": null,
                                            "serviceUrl": "http://localhost:4000",
                                            "start": "2019-10-22T03:40:44.089Z",
                                            "state": "ACTIVE",
                                            "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Berlin\\",\\"country\\":\\"Germany\\",\\"street\\":\\"Bakers\\",\\"zipCode\\":\\"100200\\"},\\"email\\":\\"cristiano@redhat.com\\",\\"firstName\\":\\"Cristiano\\",\\"lastName\\":\\"Nicolai\\",\\"nationality\\":\\"German\\"}}",
                                          },
                                          "parentProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                          "processId": "travels",
                                          "processName": "travels",
                                          "roles": Array [],
                                          "rootProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                          "serviceUrl": "http://localhost:4000",
                                          "start": "2019-10-22T03:40:44.089Z",
                                          "state": "ACTIVE",
                                          "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"US\\",\\"street\\":\\"Bangalore\\",\\"zipCode\\":\\"560093\\"},\\"email\\":\\"ajaganat@redhat.com\\",\\"firstName\\":\\"Ajay\\",\\"lastName\\":\\"Jaganathan\\",\\"nationality\\":\\"US\\"}}",
                                        }
                                      }
                                    />,
                                  },
                                  "created": Object {
                                    "formatters": Array [],
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": <t
                                      ago={false}
                                      calendar={false}
                                      decimal={false}
                                      element={null}
                                      filter={[Function]}
                                      fromNow={true}
                                      interval={60000}
                                      local={false}
                                      onChange={[Function]}
                                      titleFormat=""
                                      toNow={false}
                                      unit={null}
                                      unix={false}
                                      utc={false}
                                      withTitle={false}
                                    >
                                      2019-10-22T03:40:44.089Z
                                    </t>,
                                  },
                                  "id": Object {
                                    "formatters": Array [],
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": <React.Fragment>
                                      <Link
                                        to={
                                          Object {
                                            "pathname": "/Process/e4448857-fa0c-403b-ad69-f0a353458b9d",
                                            "state": Object {
                                              "filters": Object {
                                                "businessKey": Array [],
                                                "status": Array [
                                                  "ACTIVE",
                                                ],
                                              },
                                            },
                                          }
                                        }
                                      >
                                        <div>
                                          <strong>
                                            <ItemDescriptor
                                              itemDescription={
                                                Object {
                                                  "description": "T1234",
                                                  "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
                                                  "name": "travels",
                                                }
                                              }
                                            />
                                          </strong>
                                        </div>
                                      </Link>
                                      <EndpointLink
                                        isLinkShown={false}
                                        serviceUrl="http://localhost:4000"
                                      />
                                    </React.Fragment>,
                                  },
                                  "isExpanded": undefined,
                                  "isFirst": true,
                                  "isFirstVisible": true,
                                  "isHeightAuto": false,
                                  "isLast": true,
                                  "isLastVisible": true,
                                  "last-update": Object {
                                    "formatters": Array [],
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": <span>
                                       
                                      <HistoryIcon
                                        className="pf-u-mr-sm"
                                        color="currentColor"
                                        noVerticalAlign={false}
                                        size="sm"
                                      />
                                       Updated
                                       
                                      <t
                                        ago={false}
                                        calendar={false}
                                        decimal={false}
                                        element={null}
                                        filter={[Function]}
                                        fromNow={true}
                                        interval={60000}
                                        local={false}
                                        onChange={[Function]}
                                        titleFormat=""
                                        toNow={false}
                                        unit={null}
                                        unix={false}
                                        utc={false}
                                        withTitle={false}
                                      >
                                        2019-10-22T03:40:44.089Z
                                      </t>
                                    </span>,
                                  },
                                  "secretTableRowKeyId": 0,
                                  "status": Object {
                                    "formatters": Array [],
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": <React.Fragment>
                                      <React.Fragment>
                                        <OnRunningIcon
                                          className="pf-u-mr-sm"
                                          color="currentColor"
                                          noVerticalAlign={false}
                                          size="sm"
                                        />
                                        Active
                                      </React.Fragment>
                                    </React.Fragment>,
                                  },
                                }
                              }
                              rowIndex={0}
                              rowKey="0-row"
                            >
                              <RowWrapper
                                className=""
                                onMouseDown={[Function]}
                                row={
                                  Object {
                                    "cells": Array [
                                      Object {
                                        "title": <React.Fragment>
                                          <Checkbox
                                            aria-label="process-list-checkbox"
                                            className=""
                                            id="checkbox-e4448857-fa0c-403b-ad69-f0a353458b9d"
                                            isChecked={false}
                                            isDisabled={false}
                                            isValid={true}
                                            name="checkbox-e4448857-fa0c-403b-ad69-f0a353458b9d"
                                            onChange={[Function]}
                                          />
                                        </React.Fragment>,
                                      },
                                      Object {
                                        "title": <React.Fragment>
                                          <Link
                                            to={
                                              Object {
                                                "pathname": "/Process/e4448857-fa0c-403b-ad69-f0a353458b9d",
                                                "state": Object {
                                                  "filters": Object {
                                                    "businessKey": Array [],
                                                    "status": Array [
                                                      "ACTIVE",
                                                    ],
                                                  },
                                                },
                                              }
                                            }
                                          >
                                            <div>
                                              <strong>
                                                <ItemDescriptor
                                                  itemDescription={
                                                    Object {
                                                      "description": "T1234",
                                                      "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
                                                      "name": "travels",
                                                    }
                                                  }
                                                />
                                              </strong>
                                            </div>
                                          </Link>
                                          <EndpointLink
                                            isLinkShown={false}
                                            serviceUrl="http://localhost:4000"
                                          />
                                        </React.Fragment>,
                                      },
                                      Object {
                                        "title": <React.Fragment>
                                          <React.Fragment>
                                            <OnRunningIcon
                                              className="pf-u-mr-sm"
                                              color="currentColor"
                                              noVerticalAlign={false}
                                              size="sm"
                                            />
                                            Active
                                          </React.Fragment>
                                        </React.Fragment>,
                                      },
                                      Object {
                                        "title": <t
                                          ago={false}
                                          calendar={false}
                                          decimal={false}
                                          element={null}
                                          filter={[Function]}
                                          fromNow={true}
                                          interval={60000}
                                          local={false}
                                          onChange={[Function]}
                                          titleFormat=""
                                          toNow={false}
                                          unit={null}
                                          unix={false}
                                          utc={false}
                                          withTitle={false}
                                        >
                                          2019-10-22T03:40:44.089Z
                                        </t>,
                                      },
                                      Object {
                                        "title": <span>
                                           
                                          <HistoryIcon
                                            className="pf-u-mr-sm"
                                            color="currentColor"
                                            noVerticalAlign={false}
                                            size="sm"
                                          />
                                           Updated
                                           
                                          <t
                                            ago={false}
                                            calendar={false}
                                            decimal={false}
                                            element={null}
                                            filter={[Function]}
                                            fromNow={true}
                                            interval={60000}
                                            local={false}
                                            onChange={[Function]}
                                            titleFormat=""
                                            toNow={false}
                                            unit={null}
                                            unix={false}
                                            utc={false}
                                            withTitle={false}
                                          >
                                            2019-10-22T03:40:44.089Z
                                          </t>
                                        </span>,
                                      },
                                      Object {
                                        "title": <MockedProcessListActionsKebab
                                          processInstance={
                                            Object {
                                              "addons": Array [
                                                "jobs-management",
                                                "prometheus-monitoring",
                                                "process-management",
                                              ],
                                              "businessKey": "T1234",
                                              "end": "2019-10-22T05:40:44.089Z",
                                              "endpoint": "http://localhost:4000",
                                              "error": Object {
                                                "message": "Something went wrong",
                                                "nodeDefinitionId": "_2140F05A-364F-40B3-BB7B-B12927065DF8",
                                              },
                                              "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
                                              "lastUpdate": "2019-10-22T03:40:44.089Z",
                                              "nodes": Array [],
                                              "parentProcessInstance": Object {
                                                "addons": Array [
                                                  "jobs-management",
                                                  "prometheus-monitoring",
                                                  "process-management",
                                                ],
                                                "businessKey": "Tra234",
                                                "childProcessInstances": Array [],
                                                "endpoint": "http://localhost:4000",
                                                "error": Object {
                                                  "message": "Something went wrong",
                                                  "nodeDefinitionId": "__a1e139d5-4e77-48c9-84ae-34578e9817n",
                                                },
                                                "id": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                                "lastUpdate": "2019-10-22T03:40:44.089Z",
                                                "milestones": Array [],
                                                "nodes": Array [],
                                                "parentProcessInstance": null,
                                                "parentProcessInstanceId": null,
                                                "processId": "travels",
                                                "processName": "travels",
                                                "roles": Array [],
                                                "rootProcessInstanceId": null,
                                                "serviceUrl": "http://localhost:4000",
                                                "start": "2019-10-22T03:40:44.089Z",
                                                "state": "ACTIVE",
                                                "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Berlin\\",\\"country\\":\\"Germany\\",\\"street\\":\\"Bakers\\",\\"zipCode\\":\\"100200\\"},\\"email\\":\\"cristiano@redhat.com\\",\\"firstName\\":\\"Cristiano\\",\\"lastName\\":\\"Nicolai\\",\\"nationality\\":\\"German\\"}}",
                                              },
                                              "parentProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                              "processId": "travels",
                                              "processName": "travels",
                                              "roles": Array [],
                                              "rootProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                              "serviceUrl": "http://localhost:4000",
                                              "start": "2019-10-22T03:40:44.089Z",
                                              "state": "ACTIVE",
                                              "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"US\\",\\"street\\":\\"Bangalore\\",\\"zipCode\\":\\"560093\\"},\\"email\\":\\"ajaganat@redhat.com\\",\\"firstName\\":\\"Ajay\\",\\"lastName\\":\\"Jaganathan\\",\\"nationality\\":\\"US\\"}}",
                                            }
                                          }
                                        />,
                                      },
                                    ],
                                    "column-0": Object {
                                      "formatters": Array [],
                                      "props": Object {
                                        "isVisible": true,
                                      },
                                      "title": <React.Fragment>
                                        <Checkbox
                                          aria-label="process-list-checkbox"
                                          className=""
                                          id="checkbox-e4448857-fa0c-403b-ad69-f0a353458b9d"
                                          isChecked={false}
                                          isDisabled={false}
                                          isValid={true}
                                          name="checkbox-e4448857-fa0c-403b-ad69-f0a353458b9d"
                                          onChange={[Function]}
                                        />
                                      </React.Fragment>,
                                    },
                                    "column-5": Object {
                                      "formatters": Array [],
                                      "props": Object {
                                        "isVisible": true,
                                      },
                                      "title": <MockedProcessListActionsKebab
                                        processInstance={
                                          Object {
                                            "addons": Array [
                                              "jobs-management",
                                              "prometheus-monitoring",
                                              "process-management",
                                            ],
                                            "businessKey": "T1234",
                                            "end": "2019-10-22T05:40:44.089Z",
                                            "endpoint": "http://localhost:4000",
                                            "error": Object {
                                              "message": "Something went wrong",
                                              "nodeDefinitionId": "_2140F05A-364F-40B3-BB7B-B12927065DF8",
                                            },
                                            "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
                                            "lastUpdate": "2019-10-22T03:40:44.089Z",
                                            "nodes": Array [],
                                            "parentProcessInstance": Object {
                                              "addons": Array [
                                                "jobs-management",
                                                "prometheus-monitoring",
                                                "process-management",
                                              ],
                                              "businessKey": "Tra234",
                                              "childProcessInstances": Array [],
                                              "endpoint": "http://localhost:4000",
                                              "error": Object {
                                                "message": "Something went wrong",
                                                "nodeDefinitionId": "__a1e139d5-4e77-48c9-84ae-34578e9817n",
                                              },
                                              "id": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                              "lastUpdate": "2019-10-22T03:40:44.089Z",
                                              "milestones": Array [],
                                              "nodes": Array [],
                                              "parentProcessInstance": null,
                                              "parentProcessInstanceId": null,
                                              "processId": "travels",
                                              "processName": "travels",
                                              "roles": Array [],
                                              "rootProcessInstanceId": null,
                                              "serviceUrl": "http://localhost:4000",
                                              "start": "2019-10-22T03:40:44.089Z",
                                              "state": "ACTIVE",
                                              "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Berlin\\",\\"country\\":\\"Germany\\",\\"street\\":\\"Bakers\\",\\"zipCode\\":\\"100200\\"},\\"email\\":\\"cristiano@redhat.com\\",\\"firstName\\":\\"Cristiano\\",\\"lastName\\":\\"Nicolai\\",\\"nationality\\":\\"German\\"}}",
                                            },
                                            "parentProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                            "processId": "travels",
                                            "processName": "travels",
                                            "roles": Array [],
                                            "rootProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                            "serviceUrl": "http://localhost:4000",
                                            "start": "2019-10-22T03:40:44.089Z",
                                            "state": "ACTIVE",
                                            "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"US\\",\\"street\\":\\"Bangalore\\",\\"zipCode\\":\\"560093\\"},\\"email\\":\\"ajaganat@redhat.com\\",\\"firstName\\":\\"Ajay\\",\\"lastName\\":\\"Jaganathan\\",\\"nationality\\":\\"US\\"}}",
                                          }
                                        }
                                      />,
                                    },
                                    "created": Object {
                                      "formatters": Array [],
                                      "props": Object {
                                        "isVisible": true,
                                      },
                                      "title": <t
                                        ago={false}
                                        calendar={false}
                                        decimal={false}
                                        element={null}
                                        filter={[Function]}
                                        fromNow={true}
                                        interval={60000}
                                        local={false}
                                        onChange={[Function]}
                                        titleFormat=""
                                        toNow={false}
                                        unit={null}
                                        unix={false}
                                        utc={false}
                                        withTitle={false}
                                      >
                                        2019-10-22T03:40:44.089Z
                                      </t>,
                                    },
                                    "id": Object {
                                      "formatters": Array [],
                                      "props": Object {
                                        "isVisible": true,
                                      },
                                      "title": <React.Fragment>
                                        <Link
                                          to={
                                            Object {
                                              "pathname": "/Process/e4448857-fa0c-403b-ad69-f0a353458b9d",
                                              "state": Object {
                                                "filters": Object {
                                                  "businessKey": Array [],
                                                  "status": Array [
                                                    "ACTIVE",
                                                  ],
                                                },
                                              },
                                            }
                                          }
                                        >
                                          <div>
                                            <strong>
                                              <ItemDescriptor
                                                itemDescription={
                                                  Object {
                                                    "description": "T1234",
                                                    "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
                                                    "name": "travels",
                                                  }
                                                }
                                              />
                                            </strong>
                                          </div>
                                        </Link>
                                        <EndpointLink
                                          isLinkShown={false}
                                          serviceUrl="http://localhost:4000"
                                        />
                                      </React.Fragment>,
                                    },
                                    "isExpanded": undefined,
                                    "isFirst": true,
                                    "isFirstVisible": true,
                                    "isHeightAuto": false,
                                    "isLast": true,
                                    "isLastVisible": true,
                                    "last-update": Object {
                                      "formatters": Array [],
                                      "props": Object {
                                        "isVisible": true,
                                      },
                                      "title": <span>
                                         
                                        <HistoryIcon
                                          className="pf-u-mr-sm"
                                          color="currentColor"
                                          noVerticalAlign={false}
                                          size="sm"
                                        />
                                         Updated
                                         
                                        <t
                                          ago={false}
                                          calendar={false}
                                          decimal={false}
                                          element={null}
                                          filter={[Function]}
                                          fromNow={true}
                                          interval={60000}
                                          local={false}
                                          onChange={[Function]}
                                          titleFormat=""
                                          toNow={false}
                                          unit={null}
                                          unix={false}
                                          utc={false}
                                          withTitle={false}
                                        >
                                          2019-10-22T03:40:44.089Z
                                        </t>
                                      </span>,
                                    },
                                    "secretTableRowKeyId": 0,
                                    "status": Object {
                                      "formatters": Array [],
                                      "props": Object {
                                        "isVisible": true,
                                      },
                                      "title": <React.Fragment>
                                        <React.Fragment>
                                          <OnRunningIcon
                                            className="pf-u-mr-sm"
                                            color="currentColor"
                                            noVerticalAlign={false}
                                            size="sm"
                                          />
                                          Active
                                        </React.Fragment>
                                      </React.Fragment>,
                                    },
                                  }
                                }
                                rowProps={
                                  Object {
                                    "rowIndex": 0,
                                    "rowKey": "0-row",
                                  }
                                }
                              >
                                <Tr
                                  className=""
                                  onMouseDown={[Function]}
                                >
                                  <TrBase
                                    className=""
                                    innerRef={null}
                                    onMouseDown={[Function]}
                                  >
                                    <tr
                                      className=""
                                      data-ouia-component-id="OUIA-Generated-TableRow-2"
                                      data-ouia-component-type="PF4/TableRow"
                                      data-ouia-safe={true}
                                      hidden={false}
                                      onMouseDown={[Function]}
                                    >
                                      <BodyCell
                                        data-key={0}
                                        data-label=""
                                        isVisible={true}
                                        key="col-0-row-0"
                                      >
                                        <Td
                                          className=""
                                          component="td"
                                          data-key={0}
                                          dataLabel={null}
                                          onMouseEnter={[Function]}
                                          textCenter={false}
                                        >
                                          <TdBase
                                            className=""
                                            component="td"
                                            data-key={0}
                                            dataLabel={null}
                                            innerRef={null}
                                            onMouseEnter={[Function]}
                                            textCenter={false}
                                          >
                                            <td
                                              className=""
                                              data-key={0}
                                              data-label={null}
                                              onMouseEnter={[Function]}
                                            >
                                              <Checkbox
                                                aria-label="process-list-checkbox"
                                                className=""
                                                id="checkbox-e4448857-fa0c-403b-ad69-f0a353458b9d"
                                                isChecked={false}
                                                isDisabled={false}
                                                isValid={true}
                                                name="checkbox-e4448857-fa0c-403b-ad69-f0a353458b9d"
                                                onChange={[Function]}
                                              >
                                                <div
                                                  className="pf-c-check"
                                                >
                                                  <input
                                                    aria-invalid={false}
                                                    aria-label="process-list-checkbox"
                                                    checked={false}
                                                    className="pf-c-check__input"
                                                    disabled={false}
                                                    id="checkbox-e4448857-fa0c-403b-ad69-f0a353458b9d"
                                                    name="checkbox-e4448857-fa0c-403b-ad69-f0a353458b9d"
                                                    onChange={[Function]}
                                                    type="checkbox"
                                                  />
                                                </div>
                                              </Checkbox>
                                            </td>
                                          </TdBase>
                                        </Td>
                                      </BodyCell>
                                      <BodyCell
                                        data-key={1}
                                        data-label="Id"
                                        isVisible={true}
                                        key="col-1-row-0"
                                      >
                                        <Td
                                          className=""
                                          component="td"
                                          data-key={1}
                                          dataLabel="Id"
                                          onMouseEnter={[Function]}
                                          textCenter={false}
                                        >
                                          <TdBase
                                            className=""
                                            component="td"
                                            data-key={1}
                                            dataLabel="Id"
                                            innerRef={null}
                                            onMouseEnter={[Function]}
                                            textCenter={false}
                                          >
                                            <td
                                              className=""
                                              data-key={1}
                                              data-label="Id"
                                              onMouseEnter={[Function]}
                                            >
                                              <Link
                                                to={
                                                  Object {
                                                    "pathname": "/Process/e4448857-fa0c-403b-ad69-f0a353458b9d",
                                                    "state": Object {
                                                      "filters": Object {
                                                        "businessKey": Array [],
                                                        "status": Array [
                                                          "ACTIVE",
                                                        ],
                                                      },
                                                    },
                                                  }
                                                }
                                              >
                                                <LinkAnchor
                                                  href="/Process/e4448857-fa0c-403b-ad69-f0a353458b9d"
                                                  navigate={[Function]}
                                                >
                                                  <a
                                                    href="/Process/e4448857-fa0c-403b-ad69-f0a353458b9d"
                                                    onClick={[Function]}
                                                  >
                                                    <div>
                                                      <strong>
                                                        <ItemDescriptor
                                                          itemDescription={
                                                            Object {
                                                              "description": "T1234",
                                                              "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
                                                              "name": "travels",
                                                            }
                                                          }
                                                        >
                                                          <Tooltip
                                                            content="e4448857-fa0c-403b-ad69-f0a353458b9d"
                                                            data-ouia-component-type="item-descriptor"
                                                            data-ouia-safe={true}
                                                          >
                                                            <Popper
                                                              appendTo={[Function]}
                                                              distance={15}
                                                              enableFlip={true}
                                                              flipBehavior={
                                                                Array [
                                                                  "top",
                                                                  "right",
                                                                  "bottom",
                                                                  "left",
                                                                  "top",
                                                                  "right",
                                                                  "bottom",
                                                                ]
                                                              }
                                                              isVisible={false}
                                                              onBlur={[Function]}
                                                              onDocumentClick={false}
                                                              onDocumentKeyDown={[Function]}
                                                              onFocus={[Function]}
                                                              onMouseEnter={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onTriggerEnter={[Function]}
                                                              placement="top"
                                                              popper={
                                                                <div
                                                                  className="pf-c-tooltip"
                                                                  data-ouia-component-type="item-descriptor"
                                                                  data-ouia-safe={true}
                                                                  id="pf-tooltip-1"
                                                                  role="tooltip"
                                                                  style={
                                                                    Object {
                                                                      "maxWidth": null,
                                                                      "opacity": 0,
                                                                      "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                                                    }
                                                                  }
                                                                >
                                                                  <TooltipArrow />
                                                                  <TooltipContent
                                                                    isLeftAligned={false}
                                                                  >
                                                                    e4448857-fa0c-403b-ad69-f0a353458b9d
                                                                  </TooltipContent>
                                                                </div>
                                                              }
                                                              popperMatchesTriggerWidth={false}
                                                              positionModifiers={
                                                                Object {
                                                                  "bottom": "pf-m-bottom",
                                                                  "left": "pf-m-left",
                                                                  "right": "pf-m-right",
                                                                  "top": "pf-m-top",
                                                                }
                                                              }
                                                              trigger={
                                                                <span
                                                                  aria-describedby="pf-tooltip-1"
                                                                >
                                                                  travels
                                                                   
                                                                  <Badge>
                                                                    T1234
                                                                  </Badge>
                                                                </span>
                                                              }
                                                              zIndex={9999}
                                                            >
                                                              <FindRefWrapper
                                                                onFoundRef={[Function]}
                                                              >
                                                                <span
                                                                  aria-describedby="pf-tooltip-1"
                                                                >
                                                                  travels
                                                                   
                                                                  <Badge>
                                                                    <span
                                                                      className="pf-c-badge pf-m-unread"
                                                                    >
                                                                      T1234
                                                                    </span>
                                                                  </Badge>
                                                                </span>
                                                              </FindRefWrapper>
                                                            </Popper>
                                                          </Tooltip>
                                                        </ItemDescriptor>
                                                      </strong>
                                                    </div>
                                                  </a>
                                                </LinkAnchor>
                                              </Link>
                                              <EndpointLink
                                                isLinkShown={false}
                                                serviceUrl="http://localhost:4000"
                                              >
                                                <Button
                                                  component="a"
                                                  data-ouia-component-type="endpoint-link"
                                                  data-ouia-safe={true}
                                                  href="http://localhost:4000"
                                                  isInline={true}
                                                  target="_blank"
                                                  variant="link"
                                                >
                                                  <a
                                                    aria-disabled={false}
                                                    aria-label={null}
                                                    className="pf-c-button pf-m-link pf-m-inline"
                                                    data-ouia-component-id="OUIA-Generated-Button-link-1"
                                                    data-ouia-component-type="PF4/Button"
                                                    data-ouia-safe={true}
                                                    disabled={null}
                                                    href="http://localhost:4000"
                                                    role={null}
                                                    target="_blank"
                                                    type={null}
                                                  >
                                                    Endpoint
                                                    <ExternalLinkAltIcon
                                                      className="pf-u-ml-xs"
                                                      color="currentColor"
                                                      noVerticalAlign={false}
                                                      size="sm"
                                                    >
                                                      <svg
                                                        aria-hidden={true}
                                                        aria-labelledby={null}
                                                        className="pf-u-ml-xs"
                                                        fill="currentColor"
                                                        height="1em"
                                                        role="img"
                                                        style={
                                                          Object {
                                                            "verticalAlign": "-0.125em",
                                                          }
                                                        }
                                                        viewBox="0 0 512 512"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z"
                                                        />
                                                      </svg>
                                                    </ExternalLinkAltIcon>
                                                  </a>
                                                </Button>
                                              </EndpointLink>
                                            </td>
                                          </TdBase>
                                        </Td>
                                      </BodyCell>
                                      <BodyCell
                                        data-key={2}
                                        data-label="Status"
                                        isVisible={true}
                                        key="col-2-row-0"
                                      >
                                        <Td
                                          className=""
                                          component="td"
                                          data-key={2}
                                          dataLabel="Status"
                                          onMouseEnter={[Function]}
                                          textCenter={false}
                                        >
                                          <TdBase
                                            className=""
                                            component="td"
                                            data-key={2}
                                            dataLabel="Status"
                                            innerRef={null}
                                            onMouseEnter={[Function]}
                                            textCenter={false}
                                          >
                                            <td
                                              className=""
                                              data-key={2}
                                              data-label="Status"
                                              onMouseEnter={[Function]}
                                            >
                                              <OnRunningIcon
                                                className="pf-u-mr-sm"
                                                color="currentColor"
                                                noVerticalAlign={false}
                                                size="sm"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  aria-labelledby={null}
                                                  className="pf-u-mr-sm"
                                                  fill="currentColor"
                                                  height="1em"
                                                  role="img"
                                                  style={
                                                    Object {
                                                      "verticalAlign": "-0.125em",
                                                    }
                                                  }
                                                  viewBox="0 0 1024 1024"
                                                  width="1em"
                                                >
                                                  <path
                                                    d="M512.1,895.9 C300.3,895.9 128.1,723.8 128.1,511.9 C128.1,300.2 300.3,127.9 512.1,127.9 C723.9,127.9 896,300.2 896.100043,511.9 C896.2,723.6 723.8,895.9 512.1,895.9 M512.1,0 C229.7,0 0,229.7 0,512 C0,794.3 229.7,1024 512.1,1024 C794.3,1024 1024,794.3 1024,512 C1024,229.7 794.3,0 512.1,0 M716.3,482.9 C710,495.2 575.5,679.5 493.7,782.4 C478,800.2 463.4,794.2 457.3,790.3 C443.9,781.4 443.1,771.7 451,745 C458.9,718.3 494.1,576 494.1,576 L341.3,576 C328.2,576.2 312.2,576.2 307.1,563.8 C302.2,552 306.9,541.2 314.4,530.8 C370,453.5 508.1,264.9 508.1,264.9 C508.1,264.9 527.2,239.7 541.4,238.3 C554.4,237 562.9,240.5 567,249.6 C572.1,260.2 570.4,272.9 566.8,286.9 C563.5,300 526.4,448 526.4,448 L695.3,448 C702.6,448 711.5,449.4 717.4,457 C723.3,464.6 719.5,477 716.3,482.9"
                                                  />
                                                </svg>
                                              </OnRunningIcon>
                                              Active
                                            </td>
                                          </TdBase>
                                        </Td>
                                      </BodyCell>
                                      <BodyCell
                                        data-key={3}
                                        data-label="Created"
                                        isVisible={true}
                                        key="col-3-row-0"
                                      >
                                        <Td
                                          className=""
                                          component="td"
                                          data-key={3}
                                          dataLabel="Created"
                                          onMouseEnter={[Function]}
                                          textCenter={false}
                                        >
                                          <TdBase
                                            className=""
                                            component="td"
                                            data-key={3}
                                            dataLabel="Created"
                                            innerRef={null}
                                            onMouseEnter={[Function]}
                                            textCenter={false}
                                          >
                                            <td
                                              className=""
                                              data-key={3}
                                              data-label="Created"
                                              onMouseEnter={[Function]}
                                            >
                                              <t
                                                ago={false}
                                                calendar={false}
                                                decimal={false}
                                                element={null}
                                                filter={[Function]}
                                                fromNow={true}
                                                interval={60000}
                                                local={false}
                                                onChange={[Function]}
                                                titleFormat=""
                                                toNow={false}
                                                unit={null}
                                                unix={false}
                                                utc={false}
                                                withTitle={false}
                                              >
                                                <time
                                                  dateTime={"2019-10-22T03:40:44.089Z"}
                                                >
                                                  8 months ago
                                                </time>
                                              </t>
                                            </td>
                                          </TdBase>
                                        </Td>
                                      </BodyCell>
                                      <BodyCell
                                        data-key={4}
                                        data-label="Last update"
                                        isVisible={true}
                                        key="col-4-row-0"
                                      >
                                        <Td
                                          className=""
                                          component="td"
                                          data-key={4}
                                          dataLabel="Last update"
                                          onMouseEnter={[Function]}
                                          textCenter={false}
                                        >
                                          <TdBase
                                            className=""
                                            component="td"
                                            data-key={4}
                                            dataLabel="Last update"
                                            innerRef={null}
                                            onMouseEnter={[Function]}
                                            textCenter={false}
                                          >
                                            <td
                                              className=""
                                              data-key={4}
                                              data-label="Last update"
                                              onMouseEnter={[Function]}
                                            >
                                              <span>
                                                 
                                                <HistoryIcon
                                                  className="pf-u-mr-sm"
                                                  color="currentColor"
                                                  noVerticalAlign={false}
                                                  size="sm"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    aria-labelledby={null}
                                                    className="pf-u-mr-sm"
                                                    fill="currentColor"
                                                    height="1em"
                                                    role="img"
                                                    style={
                                                      Object {
                                                        "verticalAlign": "-0.125em",
                                                      }
                                                    }
                                                    viewBox="0 0 512 512"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M504 255.531c.253 136.64-111.18 248.372-247.82 248.468-59.015.042-113.223-20.53-155.822-54.911-11.077-8.94-11.905-25.541-1.839-35.607l11.267-11.267c8.609-8.609 22.353-9.551 31.891-1.984C173.062 425.135 212.781 440 256 440c101.705 0 184-82.311 184-184 0-101.705-82.311-184-184-184-48.814 0-93.149 18.969-126.068 49.932l50.754 50.754c10.08 10.08 2.941 27.314-11.313 27.314H24c-8.837 0-16-7.163-16-16V38.627c0-14.254 17.234-21.393 27.314-11.314l49.372 49.372C129.209 34.136 189.552 8 256 8c136.81 0 247.747 110.78 248 247.531zm-180.912 78.784l9.823-12.63c8.138-10.463 6.253-25.542-4.21-33.679L288 256.349V152c0-13.255-10.745-24-24-24h-16c-13.255 0-24 10.745-24 24v135.651l65.409 50.874c10.463 8.137 25.541 6.253 33.679-4.21z"
                                                    />
                                                  </svg>
                                                </HistoryIcon>
                                                 Updated
                                                 
                                                <t
                                                  ago={false}
                                                  calendar={false}
                                                  decimal={false}
                                                  element={null}
                                                  filter={[Function]}
                                                  fromNow={true}
                                                  interval={60000}
                                                  local={false}
                                                  onChange={[Function]}
                                                  titleFormat=""
                                                  toNow={false}
                                                  unit={null}
                                                  unix={false}
                                                  utc={false}
                                                  withTitle={false}
                                                >
                                                  <time
                                                    dateTime={"2019-10-22T03:40:44.089Z"}
                                                  >
                                                    8 months ago
                                                  </time>
                                                </t>
                                              </span>
                                            </td>
                                          </TdBase>
                                        </Td>
                                      </BodyCell>
                                      <BodyCell
                                        data-key={5}
                                        data-label=""
                                        isVisible={true}
                                        key="col-5-row-0"
                                      >
                                        <Td
                                          className=""
                                          component="td"
                                          data-key={5}
                                          dataLabel={null}
                                          onMouseEnter={[Function]}
                                          textCenter={false}
                                        >
                                          <TdBase
                                            className=""
                                            component="td"
                                            data-key={5}
                                            dataLabel={null}
                                            innerRef={null}
                                            onMouseEnter={[Function]}
                                            textCenter={false}
                                          >
                                            <td
                                              className=""
                                              data-key={5}
                                              data-label={null}
                                              onMouseEnter={[Function]}
                                            >
                                              <MockedProcessListActionsKebab
                                                processInstance={
                                                  Object {
                                                    "addons": Array [
                                                      "jobs-management",
                                                      "prometheus-monitoring",
                                                      "process-management",
                                                    ],
                                                    "businessKey": "T1234",
                                                    "end": "2019-10-22T05:40:44.089Z",
                                                    "endpoint": "http://localhost:4000",
                                                    "error": Object {
                                                      "message": "Something went wrong",
                                                      "nodeDefinitionId": "_2140F05A-364F-40B3-BB7B-B12927065DF8",
                                                    },
                                                    "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
                                                    "lastUpdate": "2019-10-22T03:40:44.089Z",
                                                    "nodes": Array [],
                                                    "parentProcessInstance": Object {
                                                      "addons": Array [
                                                        "jobs-management",
                                                        "prometheus-monitoring",
                                                        "process-management",
                                                      ],
                                                      "businessKey": "Tra234",
                                                      "childProcessInstances": Array [],
                                                      "endpoint": "http://localhost:4000",
                                                      "error": Object {
                                                        "message": "Something went wrong",
                                                        "nodeDefinitionId": "__a1e139d5-4e77-48c9-84ae-34578e9817n",
                                                      },
                                                      "id": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                                      "lastUpdate": "2019-10-22T03:40:44.089Z",
                                                      "milestones": Array [],
                                                      "nodes": Array [],
                                                      "parentProcessInstance": null,
                                                      "parentProcessInstanceId": null,
                                                      "processId": "travels",
                                                      "processName": "travels",
                                                      "roles": Array [],
                                                      "rootProcessInstanceId": null,
                                                      "serviceUrl": "http://localhost:4000",
                                                      "start": "2019-10-22T03:40:44.089Z",
                                                      "state": "ACTIVE",
                                                      "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-23T22:00:00Z[UTC]\\",\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"New York\\",\\"country\\":\\"US\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Berlin\\",\\"country\\":\\"Germany\\",\\"street\\":\\"Bakers\\",\\"zipCode\\":\\"100200\\"},\\"email\\":\\"cristiano@redhat.com\\",\\"firstName\\":\\"Cristiano\\",\\"lastName\\":\\"Nicolai\\",\\"nationality\\":\\"German\\"}}",
                                                    },
                                                    "parentProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                                    "processId": "travels",
                                                    "processName": "travels",
                                                    "roles": Array [],
                                                    "rootProcessInstanceId": "538f9feb-5a14-4096-b791-2055b38da7c6",
                                                    "serviceUrl": "http://localhost:4000",
                                                    "start": "2019-10-22T03:40:44.089Z",
                                                    "state": "ACTIVE",
                                                    "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"US\\",\\"street\\":\\"Bangalore\\",\\"zipCode\\":\\"560093\\"},\\"email\\":\\"ajaganat@redhat.com\\",\\"firstName\\":\\"Ajay\\",\\"lastName\\":\\"Jaganathan\\",\\"nationality\\":\\"US\\"}}",
                                                  }
                                                }
                                              />
                                            </td>
                                          </TdBase>
                                        </Td>
                                      </BodyCell>
                                    </tr>
                                  </TrBase>
                                </Tr>
                              </RowWrapper>
                            </BodyRow>
                          </tbody>
                        </TbodyBase>
                      </Tbody>
                    </BodyWrapper>
                  </BaseBody>
                </Component>
              </ContextBody>
            </Component>
          </table>
        </TableComposableBase>
      </TableComposable>
    </Provider>
  </Table>
</ProcessListChildTable>
`;
