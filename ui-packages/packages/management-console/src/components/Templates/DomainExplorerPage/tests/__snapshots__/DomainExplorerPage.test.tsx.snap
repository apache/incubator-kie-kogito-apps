// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DomainExplorerPage component Check error response for getPicker query 1`] = `
<Router
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "createHref": [Function],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "push": [Function],
      "replace": [Function],
    }
  }
>
  <Memo(DomainExplorerPage)
    domains={
      Array [
        "Travels",
        "VisaApplications",
      ]
    }
    history={Object {}}
    loadingState={false}
    location={
      Object {
        "pathname": "/DomainExplorer/Travels",
        "state": Object {
          "parameters": Array [
            Object {
              "flight": Array [
                "arrival",
              ],
            },
            Object {
              "flight": Array [
                "departure",
              ],
            },
          ],
        },
      }
    }
    match={
      Object {
        "params": Object {
          "domainName": "Travels",
        },
      }
    }
  />
</Router>
`;

exports[`DomainExplorerPage component Check error response for getQueryFields query 1`] = `null`;

exports[`DomainExplorerPage component Check error response for getQueryTypes 1`] = `
<Router
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "createHref": [Function],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "push": [Function],
      "replace": [Function],
    }
  }
>
  <Memo(DomainExplorerPage)
    domains={
      Array [
        "Travels",
        "VisaApplications",
      ]
    }
    history={Object {}}
    loadingState={false}
    location={
      Object {
        "pathname": "/DomainExplorer/Travels",
        "state": Object {
          "parameters": Array [
            Object {
              "flight": Array [
                "arrival",
              ],
            },
            Object {
              "flight": Array [
                "departure",
              ],
            },
          ],
        },
      }
    }
    match={
      Object {
        "params": Object {
          "domainName": "Travels",
        },
      }
    }
  />
</Router>
`;

exports[`DomainExplorerPage component Mock query testing 1`] = `null`;

exports[`DomainExplorerPage component Snapshot with default props 1`] = `null`;

exports[`DomainExplorerPage component check assertions on rememberedParams 1`] = `null`;
