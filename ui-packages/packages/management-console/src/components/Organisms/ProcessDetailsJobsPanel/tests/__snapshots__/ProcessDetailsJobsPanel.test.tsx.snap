// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Processdetails jobs pannel component tests Snapshot testing 1`] = `
<ProcessDetailsJobsPanel
  processInstanceId="5c56eeff-4cbf-3313-a325-4c895e0afced"
>
  <Card
    data-ouia-component-type="process-details-jobs-panel"
    data-ouia-safe={true}
  >
    <article
      className="pf-c-card"
      data-ouia-component-id={2}
      data-ouia-component-type="PF4/Card"
      data-ouia-safe={true}
    >
      <CardHeader>
        <div
          className="pf-c-card__header"
        >
          <Title
            headingLevel="h3"
            size="xl"
          >
            <h3
              className="pf-c-title pf-m-xl"
            >
              Jobs
            </h3>
          </Title>
        </div>
      </CardHeader>
      <CardBody>
        <div
          className="pf-c-card__body"
        >
          <Table
            aria-label="Process details jobs panel"
            aria-labelledby="Process details jobs panel"
            borders={true}
            canSelectAll={true}
            cells={
              Array [
                Object {
                  "title": "Job id",
                },
                Object {
                  "title": "Status",
                },
                Object {
                  "title": "Expiration time",
                },
                Object {
                  "title": "Actions",
                },
              ]
            }
            className=""
            contentId="expanded-content"
            dropdownDirection="down"
            dropdownPosition="right"
            expandId="expandable-toggle"
            gridBreakPoint="grid-md"
            isStickyHeader={false}
            ouiaSafe={true}
            role="grid"
            rowLabeledBy="simple-node"
            rows={
              Array [
                Object {
                  "cells": Array [
                    Object {
                      "title": <Tooltip
                        content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                      >
                        <span>
                          6e74a57
                        </span>
                      </Tooltip>,
                    },
                    Object {
                      "title": <React.Fragment>
                        <CheckCircleIcon
                          className="pf-u-mr-sm"
                          color="var(--pf-global--success-color--100)"
                        />
                        Executed
                      </React.Fragment>,
                    },
                    Object {
                      "title": <React.Fragment>
                        N/A
                      </React.Fragment>,
                    },
                    Object {
                      "title": <Context.Provider
                        value={[Function]}
                      >
                        <MockedJobActionsKebab
                          job={
                            Object {
                              "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                              "endpoint": "http://localhost:4000",
                              "expirationTime": null,
                              "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                              "lastUpdate": "2020-08-27T03:35:50.147Z",
                              "priority": 0,
                              "processId": "travels",
                              "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                              "repeatInterval": null,
                              "repeatLimit": null,
                              "retries": 0,
                              "rootProcessId": null,
                              "scheduledId": "0",
                              "status": "EXECUTED",
                            }
                          }
                        />
                      </Context.Provider>,
                    },
                  ],
                },
              ]
            }
            variant="compact"
          >
            <Provider
              aria-label="Process details jobs panel"
              aria-labelledby="Process details jobs panel"
              className="pf-c-table pf-m-grid-md pf-m-compact"
              columns={
                Array [
                  Object {
                    "cell": Object {
                      "formatters": Array [
                        [Function],
                      ],
                      "transforms": Array [
                        [Function],
                      ],
                    },
                    "data": undefined,
                    "extraParams": Object {
                      "actionResolver": undefined,
                      "actions": undefined,
                      "allRowsSelected": false,
                      "areActionsDisabled": undefined,
                      "canSelectAll": true,
                      "contentId": "expanded-content",
                      "dropdownDirection": "down",
                      "dropdownPosition": "right",
                      "expandId": "expandable-toggle",
                      "firstUserColumnIndex": 0,
                      "onCollapse": undefined,
                      "onExpand": undefined,
                      "onRowEdit": undefined,
                      "onSelect": undefined,
                      "onSort": undefined,
                      "rowLabeledBy": "simple-node",
                      "sortBy": undefined,
                    },
                    "header": Object {
                      "formatters": Array [],
                      "label": "Job id",
                      "transforms": Array [
                        [Function],
                        [Function],
                      ],
                    },
                    "property": "job-id",
                    "props": Object {
                      "data-key": 0,
                      "data-label": "Job id",
                    },
                  },
                  Object {
                    "cell": Object {
                      "formatters": Array [
                        [Function],
                      ],
                      "transforms": Array [
                        [Function],
                      ],
                    },
                    "data": undefined,
                    "extraParams": Object {
                      "actionResolver": undefined,
                      "actions": undefined,
                      "allRowsSelected": false,
                      "areActionsDisabled": undefined,
                      "canSelectAll": true,
                      "contentId": "expanded-content",
                      "dropdownDirection": "down",
                      "dropdownPosition": "right",
                      "expandId": "expandable-toggle",
                      "firstUserColumnIndex": 0,
                      "onCollapse": undefined,
                      "onExpand": undefined,
                      "onRowEdit": undefined,
                      "onSelect": undefined,
                      "onSort": undefined,
                      "rowLabeledBy": "simple-node",
                      "sortBy": undefined,
                    },
                    "header": Object {
                      "formatters": Array [],
                      "label": "Status",
                      "transforms": Array [
                        [Function],
                        [Function],
                      ],
                    },
                    "property": "status",
                    "props": Object {
                      "data-key": 1,
                      "data-label": "Status",
                    },
                  },
                  Object {
                    "cell": Object {
                      "formatters": Array [
                        [Function],
                      ],
                      "transforms": Array [
                        [Function],
                      ],
                    },
                    "data": undefined,
                    "extraParams": Object {
                      "actionResolver": undefined,
                      "actions": undefined,
                      "allRowsSelected": false,
                      "areActionsDisabled": undefined,
                      "canSelectAll": true,
                      "contentId": "expanded-content",
                      "dropdownDirection": "down",
                      "dropdownPosition": "right",
                      "expandId": "expandable-toggle",
                      "firstUserColumnIndex": 0,
                      "onCollapse": undefined,
                      "onExpand": undefined,
                      "onRowEdit": undefined,
                      "onSelect": undefined,
                      "onSort": undefined,
                      "rowLabeledBy": "simple-node",
                      "sortBy": undefined,
                    },
                    "header": Object {
                      "formatters": Array [],
                      "label": "Expiration time",
                      "transforms": Array [
                        [Function],
                        [Function],
                      ],
                    },
                    "property": "expiration-time",
                    "props": Object {
                      "data-key": 2,
                      "data-label": "Expiration time",
                    },
                  },
                  Object {
                    "cell": Object {
                      "formatters": Array [
                        [Function],
                      ],
                      "transforms": Array [
                        [Function],
                      ],
                    },
                    "data": undefined,
                    "extraParams": Object {
                      "actionResolver": undefined,
                      "actions": undefined,
                      "allRowsSelected": false,
                      "areActionsDisabled": undefined,
                      "canSelectAll": true,
                      "contentId": "expanded-content",
                      "dropdownDirection": "down",
                      "dropdownPosition": "right",
                      "expandId": "expandable-toggle",
                      "firstUserColumnIndex": 0,
                      "onCollapse": undefined,
                      "onExpand": undefined,
                      "onRowEdit": undefined,
                      "onSelect": undefined,
                      "onSort": undefined,
                      "rowLabeledBy": "simple-node",
                      "sortBy": undefined,
                    },
                    "header": Object {
                      "formatters": Array [],
                      "label": "Actions",
                      "transforms": Array [
                        [Function],
                        [Function],
                      ],
                    },
                    "property": "actions",
                    "props": Object {
                      "data-key": 3,
                      "data-label": "Actions",
                    },
                  },
                ]
              }
              data-ouia-component-id={3}
              data-ouia-component-type="PF4/Table"
              data-ouia-safe={true}
              renderers={
                Object {
                  "body": Object {
                    "cell": [Function],
                    "row": [Function],
                    "wrapper": [Function],
                  },
                  "header": Object {
                    "cell": [Function],
                  },
                }
              }
              role="grid"
            >
              <table
                aria-label="Process details jobs panel"
                aria-labelledby="Process details jobs panel"
                className="pf-c-table pf-m-grid-md pf-m-compact"
                data-ouia-component-id={3}
                data-ouia-component-type="PF4/Table"
                data-ouia-safe={true}
                role="grid"
              >
                <TableHeader>
                  <ContextHeader
                    headerRows={null}
                  >
                    <Component
                      className=""
                      headerRows={null}
                    >
                      <BaseHeader
                        className=""
                        columns={
                          Array [
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "canSelectAll": true,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": undefined,
                                "onExpand": undefined,
                                "onRowEdit": undefined,
                                "onSelect": undefined,
                                "onSort": undefined,
                                "rowLabeledBy": "simple-node",
                                "sortBy": undefined,
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Job id",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "job-id",
                              "props": Object {
                                "data-key": 0,
                                "data-label": "Job id",
                              },
                            },
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "canSelectAll": true,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": undefined,
                                "onExpand": undefined,
                                "onRowEdit": undefined,
                                "onSelect": undefined,
                                "onSort": undefined,
                                "rowLabeledBy": "simple-node",
                                "sortBy": undefined,
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Status",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "status",
                              "props": Object {
                                "data-key": 1,
                                "data-label": "Status",
                              },
                            },
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "canSelectAll": true,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": undefined,
                                "onExpand": undefined,
                                "onRowEdit": undefined,
                                "onSelect": undefined,
                                "onSort": undefined,
                                "rowLabeledBy": "simple-node",
                                "sortBy": undefined,
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Expiration time",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "expiration-time",
                              "props": Object {
                                "data-key": 2,
                                "data-label": "Expiration time",
                              },
                            },
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "canSelectAll": true,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": undefined,
                                "onExpand": undefined,
                                "onRowEdit": undefined,
                                "onSelect": undefined,
                                "onSort": undefined,
                                "rowLabeledBy": "simple-node",
                                "sortBy": undefined,
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Actions",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "actions",
                              "props": Object {
                                "data-key": 3,
                                "data-label": "Actions",
                              },
                            },
                          ]
                        }
                        headerRows={null}
                        renderers={
                          Object {
                            "body": Object {
                              "cell": [Function],
                              "row": [Function],
                              "wrapper": [Function],
                            },
                            "header": Object {
                              "cell": [Function],
                              "row": "tr",
                              "wrapper": "thead",
                            },
                            "table": "table",
                          }
                        }
                      >
                        <thead
                          className=""
                        >
                          <HeaderRow
                            key="0-header-row"
                            renderers={
                              Object {
                                "cell": [Function],
                                "row": "tr",
                                "wrapper": "thead",
                              }
                            }
                            rowData={
                              Array [
                                Object {
                                  "cell": Object {
                                    "formatters": Array [
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                  },
                                  "data": undefined,
                                  "extraParams": Object {
                                    "actionResolver": undefined,
                                    "actions": undefined,
                                    "allRowsSelected": false,
                                    "areActionsDisabled": undefined,
                                    "canSelectAll": true,
                                    "contentId": "expanded-content",
                                    "dropdownDirection": "down",
                                    "dropdownPosition": "right",
                                    "expandId": "expandable-toggle",
                                    "firstUserColumnIndex": 0,
                                    "onCollapse": undefined,
                                    "onExpand": undefined,
                                    "onRowEdit": undefined,
                                    "onSelect": undefined,
                                    "onSort": undefined,
                                    "rowLabeledBy": "simple-node",
                                    "sortBy": undefined,
                                  },
                                  "header": Object {
                                    "formatters": Array [],
                                    "label": "Job id",
                                    "transforms": Array [
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                  "property": "job-id",
                                  "props": Object {
                                    "data-key": 0,
                                    "data-label": "Job id",
                                  },
                                },
                                Object {
                                  "cell": Object {
                                    "formatters": Array [
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                  },
                                  "data": undefined,
                                  "extraParams": Object {
                                    "actionResolver": undefined,
                                    "actions": undefined,
                                    "allRowsSelected": false,
                                    "areActionsDisabled": undefined,
                                    "canSelectAll": true,
                                    "contentId": "expanded-content",
                                    "dropdownDirection": "down",
                                    "dropdownPosition": "right",
                                    "expandId": "expandable-toggle",
                                    "firstUserColumnIndex": 0,
                                    "onCollapse": undefined,
                                    "onExpand": undefined,
                                    "onRowEdit": undefined,
                                    "onSelect": undefined,
                                    "onSort": undefined,
                                    "rowLabeledBy": "simple-node",
                                    "sortBy": undefined,
                                  },
                                  "header": Object {
                                    "formatters": Array [],
                                    "label": "Status",
                                    "transforms": Array [
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                  "property": "status",
                                  "props": Object {
                                    "data-key": 1,
                                    "data-label": "Status",
                                  },
                                },
                                Object {
                                  "cell": Object {
                                    "formatters": Array [
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                  },
                                  "data": undefined,
                                  "extraParams": Object {
                                    "actionResolver": undefined,
                                    "actions": undefined,
                                    "allRowsSelected": false,
                                    "areActionsDisabled": undefined,
                                    "canSelectAll": true,
                                    "contentId": "expanded-content",
                                    "dropdownDirection": "down",
                                    "dropdownPosition": "right",
                                    "expandId": "expandable-toggle",
                                    "firstUserColumnIndex": 0,
                                    "onCollapse": undefined,
                                    "onExpand": undefined,
                                    "onRowEdit": undefined,
                                    "onSelect": undefined,
                                    "onSort": undefined,
                                    "rowLabeledBy": "simple-node",
                                    "sortBy": undefined,
                                  },
                                  "header": Object {
                                    "formatters": Array [],
                                    "label": "Expiration time",
                                    "transforms": Array [
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                  "property": "expiration-time",
                                  "props": Object {
                                    "data-key": 2,
                                    "data-label": "Expiration time",
                                  },
                                },
                                Object {
                                  "cell": Object {
                                    "formatters": Array [
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                  },
                                  "data": undefined,
                                  "extraParams": Object {
                                    "actionResolver": undefined,
                                    "actions": undefined,
                                    "allRowsSelected": false,
                                    "areActionsDisabled": undefined,
                                    "canSelectAll": true,
                                    "contentId": "expanded-content",
                                    "dropdownDirection": "down",
                                    "dropdownPosition": "right",
                                    "expandId": "expandable-toggle",
                                    "firstUserColumnIndex": 0,
                                    "onCollapse": undefined,
                                    "onExpand": undefined,
                                    "onRowEdit": undefined,
                                    "onSelect": undefined,
                                    "onSort": undefined,
                                    "rowLabeledBy": "simple-node",
                                    "sortBy": undefined,
                                  },
                                  "header": Object {
                                    "formatters": Array [],
                                    "label": "Actions",
                                    "transforms": Array [
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                  "property": "actions",
                                  "props": Object {
                                    "data-key": 3,
                                    "data-label": "Actions",
                                  },
                                },
                              ]
                            }
                            rowIndex={0}
                          >
                            <tr>
                              <HeaderCell
                                data-key={0}
                                data-label="Job id"
                                key="0-header"
                                scope="col"
                              >
                                <th
                                  className=""
                                  data-key={0}
                                  data-label="Job id"
                                  onMouseEnter={[Function]}
                                  scope="col"
                                >
                                  Job id
                                </th>
                              </HeaderCell>
                              <HeaderCell
                                data-key={1}
                                data-label="Status"
                                key="1-header"
                                scope="col"
                              >
                                <th
                                  className=""
                                  data-key={1}
                                  data-label="Status"
                                  onMouseEnter={[Function]}
                                  scope="col"
                                >
                                  Status
                                </th>
                              </HeaderCell>
                              <HeaderCell
                                data-key={2}
                                data-label="Expiration time"
                                key="2-header"
                                scope="col"
                              >
                                <th
                                  className=""
                                  data-key={2}
                                  data-label="Expiration time"
                                  onMouseEnter={[Function]}
                                  scope="col"
                                >
                                  Expiration time
                                </th>
                              </HeaderCell>
                              <HeaderCell
                                data-key={3}
                                data-label="Actions"
                                key="3-header"
                                scope="col"
                              >
                                <th
                                  className=""
                                  data-key={3}
                                  data-label="Actions"
                                  onMouseEnter={[Function]}
                                  scope="col"
                                >
                                  Actions
                                </th>
                              </HeaderCell>
                            </tr>
                          </HeaderRow>
                        </thead>
                      </BaseHeader>
                    </Component>
                  </ContextHeader>
                </TableHeader>
                <Component>
                  <ContextBody
                    className=""
                    headerData={
                      Array [
                        Object {
                          "cell": Object {
                            "formatters": Array [
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "data": undefined,
                          "extraParams": Object {
                            "actionResolver": undefined,
                            "actions": undefined,
                            "allRowsSelected": false,
                            "areActionsDisabled": undefined,
                            "canSelectAll": true,
                            "contentId": "expanded-content",
                            "dropdownDirection": "down",
                            "dropdownPosition": "right",
                            "expandId": "expandable-toggle",
                            "firstUserColumnIndex": 0,
                            "onCollapse": undefined,
                            "onExpand": undefined,
                            "onRowEdit": undefined,
                            "onSelect": undefined,
                            "onSort": undefined,
                            "rowLabeledBy": "simple-node",
                            "sortBy": undefined,
                          },
                          "header": Object {
                            "formatters": Array [],
                            "label": "Job id",
                            "transforms": Array [
                              [Function],
                              [Function],
                            ],
                          },
                          "property": "job-id",
                          "props": Object {
                            "data-key": 0,
                            "data-label": "Job id",
                          },
                        },
                        Object {
                          "cell": Object {
                            "formatters": Array [
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "data": undefined,
                          "extraParams": Object {
                            "actionResolver": undefined,
                            "actions": undefined,
                            "allRowsSelected": false,
                            "areActionsDisabled": undefined,
                            "canSelectAll": true,
                            "contentId": "expanded-content",
                            "dropdownDirection": "down",
                            "dropdownPosition": "right",
                            "expandId": "expandable-toggle",
                            "firstUserColumnIndex": 0,
                            "onCollapse": undefined,
                            "onExpand": undefined,
                            "onRowEdit": undefined,
                            "onSelect": undefined,
                            "onSort": undefined,
                            "rowLabeledBy": "simple-node",
                            "sortBy": undefined,
                          },
                          "header": Object {
                            "formatters": Array [],
                            "label": "Status",
                            "transforms": Array [
                              [Function],
                              [Function],
                            ],
                          },
                          "property": "status",
                          "props": Object {
                            "data-key": 1,
                            "data-label": "Status",
                          },
                        },
                        Object {
                          "cell": Object {
                            "formatters": Array [
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "data": undefined,
                          "extraParams": Object {
                            "actionResolver": undefined,
                            "actions": undefined,
                            "allRowsSelected": false,
                            "areActionsDisabled": undefined,
                            "canSelectAll": true,
                            "contentId": "expanded-content",
                            "dropdownDirection": "down",
                            "dropdownPosition": "right",
                            "expandId": "expandable-toggle",
                            "firstUserColumnIndex": 0,
                            "onCollapse": undefined,
                            "onExpand": undefined,
                            "onRowEdit": undefined,
                            "onSelect": undefined,
                            "onSort": undefined,
                            "rowLabeledBy": "simple-node",
                            "sortBy": undefined,
                          },
                          "header": Object {
                            "formatters": Array [],
                            "label": "Expiration time",
                            "transforms": Array [
                              [Function],
                              [Function],
                            ],
                          },
                          "property": "expiration-time",
                          "props": Object {
                            "data-key": 2,
                            "data-label": "Expiration time",
                          },
                        },
                        Object {
                          "cell": Object {
                            "formatters": Array [
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "data": undefined,
                          "extraParams": Object {
                            "actionResolver": undefined,
                            "actions": undefined,
                            "allRowsSelected": false,
                            "areActionsDisabled": undefined,
                            "canSelectAll": true,
                            "contentId": "expanded-content",
                            "dropdownDirection": "down",
                            "dropdownPosition": "right",
                            "expandId": "expandable-toggle",
                            "firstUserColumnIndex": 0,
                            "onCollapse": undefined,
                            "onExpand": undefined,
                            "onRowEdit": undefined,
                            "onSelect": undefined,
                            "onSort": undefined,
                            "rowLabeledBy": "simple-node",
                            "sortBy": undefined,
                          },
                          "header": Object {
                            "formatters": Array [],
                            "label": "Actions",
                            "transforms": Array [
                              [Function],
                              [Function],
                            ],
                          },
                          "property": "actions",
                          "props": Object {
                            "data-key": 3,
                            "data-label": "Actions",
                          },
                        },
                      ]
                    }
                    headerRows={null}
                    onRow={[Function]}
                    onRowClick={[Function]}
                    rowKey="id"
                    rows={
                      Array [
                        Object {
                          "cells": Array [
                            Object {
                              "title": <Tooltip
                                content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                              >
                                <span>
                                  6e74a57
                                </span>
                              </Tooltip>,
                            },
                            Object {
                              "title": <React.Fragment>
                                <CheckCircleIcon
                                  className="pf-u-mr-sm"
                                  color="var(--pf-global--success-color--100)"
                                />
                                Executed
                              </React.Fragment>,
                            },
                            Object {
                              "title": <React.Fragment>
                                N/A
                              </React.Fragment>,
                            },
                            Object {
                              "title": <Context.Provider
                                value={[Function]}
                              >
                                <MockedJobActionsKebab
                                  job={
                                    Object {
                                      "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                      "endpoint": "http://localhost:4000",
                                      "expirationTime": null,
                                      "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                      "lastUpdate": "2020-08-27T03:35:50.147Z",
                                      "priority": 0,
                                      "processId": "travels",
                                      "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                      "repeatInterval": null,
                                      "repeatLimit": null,
                                      "retries": 0,
                                      "rootProcessId": null,
                                      "scheduledId": "0",
                                      "status": "EXECUTED",
                                    }
                                  }
                                />
                              </Context.Provider>,
                            },
                          ],
                        },
                      ]
                    }
                  >
                    <Component
                      className=""
                      headerRows={null}
                      mappedRows={
                        Array [
                          Object {
                            "actions": Object {
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <Context.Provider
                                value={[Function]}
                              >
                                <MockedJobActionsKebab
                                  job={
                                    Object {
                                      "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                      "endpoint": "http://localhost:4000",
                                      "expirationTime": null,
                                      "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                      "lastUpdate": "2020-08-27T03:35:50.147Z",
                                      "priority": 0,
                                      "processId": "travels",
                                      "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                      "repeatInterval": null,
                                      "repeatLimit": null,
                                      "retries": 0,
                                      "rootProcessId": null,
                                      "scheduledId": "0",
                                      "status": "EXECUTED",
                                    }
                                  }
                                />
                              </Context.Provider>,
                            },
                            "cells": Array [
                              Object {
                                "title": <Tooltip
                                  content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                >
                                  <span>
                                    6e74a57
                                  </span>
                                </Tooltip>,
                              },
                              Object {
                                "title": <React.Fragment>
                                  <CheckCircleIcon
                                    className="pf-u-mr-sm"
                                    color="var(--pf-global--success-color--100)"
                                  />
                                  Executed
                                </React.Fragment>,
                              },
                              Object {
                                "title": <React.Fragment>
                                  N/A
                                </React.Fragment>,
                              },
                              Object {
                                "title": <Context.Provider
                                  value={[Function]}
                                >
                                  <MockedJobActionsKebab
                                    job={
                                      Object {
                                        "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                        "endpoint": "http://localhost:4000",
                                        "expirationTime": null,
                                        "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                        "lastUpdate": "2020-08-27T03:35:50.147Z",
                                        "priority": 0,
                                        "processId": "travels",
                                        "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                        "repeatInterval": null,
                                        "repeatLimit": null,
                                        "retries": 0,
                                        "rootProcessId": null,
                                        "scheduledId": "0",
                                        "status": "EXECUTED",
                                      }
                                    }
                                  />
                                </Context.Provider>,
                              },
                            ],
                            "expiration-time": Object {
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <React.Fragment>
                                N/A
                              </React.Fragment>,
                            },
                            "id": 0,
                            "isExpanded": undefined,
                            "isFirst": true,
                            "isFirstVisible": true,
                            "isHeightAuto": false,
                            "isLast": true,
                            "isLastVisible": true,
                            "job-id": Object {
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <Tooltip
                                content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                              >
                                <span>
                                  6e74a57
                                </span>
                              </Tooltip>,
                            },
                            "status": Object {
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <React.Fragment>
                                <CheckCircleIcon
                                  className="pf-u-mr-sm"
                                  color="var(--pf-global--success-color--100)"
                                />
                                Executed
                              </React.Fragment>,
                            },
                          },
                        ]
                      }
                      onRow={[Function]}
                      rowKey="id"
                      rows={
                        Array [
                          Object {
                            "actions": Object {
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <Context.Provider
                                value={[Function]}
                              >
                                <MockedJobActionsKebab
                                  job={
                                    Object {
                                      "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                      "endpoint": "http://localhost:4000",
                                      "expirationTime": null,
                                      "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                      "lastUpdate": "2020-08-27T03:35:50.147Z",
                                      "priority": 0,
                                      "processId": "travels",
                                      "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                      "repeatInterval": null,
                                      "repeatLimit": null,
                                      "retries": 0,
                                      "rootProcessId": null,
                                      "scheduledId": "0",
                                      "status": "EXECUTED",
                                    }
                                  }
                                />
                              </Context.Provider>,
                            },
                            "cells": Array [
                              Object {
                                "title": <Tooltip
                                  content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                >
                                  <span>
                                    6e74a57
                                  </span>
                                </Tooltip>,
                              },
                              Object {
                                "title": <React.Fragment>
                                  <CheckCircleIcon
                                    className="pf-u-mr-sm"
                                    color="var(--pf-global--success-color--100)"
                                  />
                                  Executed
                                </React.Fragment>,
                              },
                              Object {
                                "title": <React.Fragment>
                                  N/A
                                </React.Fragment>,
                              },
                              Object {
                                "title": <Context.Provider
                                  value={[Function]}
                                >
                                  <MockedJobActionsKebab
                                    job={
                                      Object {
                                        "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                        "endpoint": "http://localhost:4000",
                                        "expirationTime": null,
                                        "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                        "lastUpdate": "2020-08-27T03:35:50.147Z",
                                        "priority": 0,
                                        "processId": "travels",
                                        "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                        "repeatInterval": null,
                                        "repeatLimit": null,
                                        "retries": 0,
                                        "rootProcessId": null,
                                        "scheduledId": "0",
                                        "status": "EXECUTED",
                                      }
                                    }
                                  />
                                </Context.Provider>,
                              },
                            ],
                            "expiration-time": Object {
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <React.Fragment>
                                N/A
                              </React.Fragment>,
                            },
                            "id": 0,
                            "isExpanded": undefined,
                            "isFirst": true,
                            "isFirstVisible": true,
                            "isHeightAuto": false,
                            "isLast": true,
                            "isLastVisible": true,
                            "job-id": Object {
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <Tooltip
                                content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                              >
                                <span>
                                  6e74a57
                                </span>
                              </Tooltip>,
                            },
                            "status": Object {
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <React.Fragment>
                                <CheckCircleIcon
                                  className="pf-u-mr-sm"
                                  color="var(--pf-global--success-color--100)"
                                />
                                Executed
                              </React.Fragment>,
                            },
                          },
                        ]
                      }
                    >
                      <BaseBody
                        className=""
                        columns={
                          Array [
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "canSelectAll": true,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": undefined,
                                "onExpand": undefined,
                                "onRowEdit": undefined,
                                "onSelect": undefined,
                                "onSort": undefined,
                                "rowLabeledBy": "simple-node",
                                "sortBy": undefined,
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Job id",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "job-id",
                              "props": Object {
                                "data-key": 0,
                                "data-label": "Job id",
                              },
                            },
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "canSelectAll": true,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": undefined,
                                "onExpand": undefined,
                                "onRowEdit": undefined,
                                "onSelect": undefined,
                                "onSort": undefined,
                                "rowLabeledBy": "simple-node",
                                "sortBy": undefined,
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Status",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "status",
                              "props": Object {
                                "data-key": 1,
                                "data-label": "Status",
                              },
                            },
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "canSelectAll": true,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": undefined,
                                "onExpand": undefined,
                                "onRowEdit": undefined,
                                "onSelect": undefined,
                                "onSort": undefined,
                                "rowLabeledBy": "simple-node",
                                "sortBy": undefined,
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Expiration time",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "expiration-time",
                              "props": Object {
                                "data-key": 2,
                                "data-label": "Expiration time",
                              },
                            },
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "canSelectAll": true,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": undefined,
                                "onExpand": undefined,
                                "onRowEdit": undefined,
                                "onSelect": undefined,
                                "onSort": undefined,
                                "rowLabeledBy": "simple-node",
                                "sortBy": undefined,
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Actions",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "actions",
                              "props": Object {
                                "data-key": 3,
                                "data-label": "Actions",
                              },
                            },
                          ]
                        }
                        headerRows={null}
                        mappedRows={
                          Array [
                            Object {
                              "actions": Object {
                                "props": Object {
                                  "isVisible": true,
                                },
                                "title": <Context.Provider
                                  value={[Function]}
                                >
                                  <MockedJobActionsKebab
                                    job={
                                      Object {
                                        "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                        "endpoint": "http://localhost:4000",
                                        "expirationTime": null,
                                        "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                        "lastUpdate": "2020-08-27T03:35:50.147Z",
                                        "priority": 0,
                                        "processId": "travels",
                                        "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                        "repeatInterval": null,
                                        "repeatLimit": null,
                                        "retries": 0,
                                        "rootProcessId": null,
                                        "scheduledId": "0",
                                        "status": "EXECUTED",
                                      }
                                    }
                                  />
                                </Context.Provider>,
                              },
                              "cells": Array [
                                Object {
                                  "title": <Tooltip
                                    content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                  >
                                    <span>
                                      6e74a57
                                    </span>
                                  </Tooltip>,
                                },
                                Object {
                                  "title": <React.Fragment>
                                    <CheckCircleIcon
                                      className="pf-u-mr-sm"
                                      color="var(--pf-global--success-color--100)"
                                    />
                                    Executed
                                  </React.Fragment>,
                                },
                                Object {
                                  "title": <React.Fragment>
                                    N/A
                                  </React.Fragment>,
                                },
                                Object {
                                  "title": <Context.Provider
                                    value={[Function]}
                                  >
                                    <MockedJobActionsKebab
                                      job={
                                        Object {
                                          "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                          "endpoint": "http://localhost:4000",
                                          "expirationTime": null,
                                          "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                          "lastUpdate": "2020-08-27T03:35:50.147Z",
                                          "priority": 0,
                                          "processId": "travels",
                                          "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                          "repeatInterval": null,
                                          "repeatLimit": null,
                                          "retries": 0,
                                          "rootProcessId": null,
                                          "scheduledId": "0",
                                          "status": "EXECUTED",
                                        }
                                      }
                                    />
                                  </Context.Provider>,
                                },
                              ],
                              "expiration-time": Object {
                                "props": Object {
                                  "isVisible": true,
                                },
                                "title": <React.Fragment>
                                  N/A
                                </React.Fragment>,
                              },
                              "id": 0,
                              "isExpanded": undefined,
                              "isFirst": true,
                              "isFirstVisible": true,
                              "isHeightAuto": false,
                              "isLast": true,
                              "isLastVisible": true,
                              "job-id": Object {
                                "props": Object {
                                  "isVisible": true,
                                },
                                "title": <Tooltip
                                  content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                >
                                  <span>
                                    6e74a57
                                  </span>
                                </Tooltip>,
                              },
                              "status": Object {
                                "props": Object {
                                  "isVisible": true,
                                },
                                "title": <React.Fragment>
                                  <CheckCircleIcon
                                    className="pf-u-mr-sm"
                                    color="var(--pf-global--success-color--100)"
                                  />
                                  Executed
                                </React.Fragment>,
                              },
                            },
                          ]
                        }
                        onRow={[Function]}
                        renderers={
                          Object {
                            "body": Object {
                              "cell": [Function],
                              "row": [Function],
                              "wrapper": [Function],
                            },
                            "header": Object {
                              "cell": [Function],
                              "row": "tr",
                              "wrapper": "thead",
                            },
                            "table": "table",
                          }
                        }
                        rowKey="id"
                        rows={
                          Array [
                            Object {
                              "actions": Object {
                                "props": Object {
                                  "isVisible": true,
                                },
                                "title": <Context.Provider
                                  value={[Function]}
                                >
                                  <MockedJobActionsKebab
                                    job={
                                      Object {
                                        "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                        "endpoint": "http://localhost:4000",
                                        "expirationTime": null,
                                        "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                        "lastUpdate": "2020-08-27T03:35:50.147Z",
                                        "priority": 0,
                                        "processId": "travels",
                                        "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                        "repeatInterval": null,
                                        "repeatLimit": null,
                                        "retries": 0,
                                        "rootProcessId": null,
                                        "scheduledId": "0",
                                        "status": "EXECUTED",
                                      }
                                    }
                                  />
                                </Context.Provider>,
                              },
                              "cells": Array [
                                Object {
                                  "title": <Tooltip
                                    content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                  >
                                    <span>
                                      6e74a57
                                    </span>
                                  </Tooltip>,
                                },
                                Object {
                                  "title": <React.Fragment>
                                    <CheckCircleIcon
                                      className="pf-u-mr-sm"
                                      color="var(--pf-global--success-color--100)"
                                    />
                                    Executed
                                  </React.Fragment>,
                                },
                                Object {
                                  "title": <React.Fragment>
                                    N/A
                                  </React.Fragment>,
                                },
                                Object {
                                  "title": <Context.Provider
                                    value={[Function]}
                                  >
                                    <MockedJobActionsKebab
                                      job={
                                        Object {
                                          "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                          "endpoint": "http://localhost:4000",
                                          "expirationTime": null,
                                          "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                          "lastUpdate": "2020-08-27T03:35:50.147Z",
                                          "priority": 0,
                                          "processId": "travels",
                                          "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                          "repeatInterval": null,
                                          "repeatLimit": null,
                                          "retries": 0,
                                          "rootProcessId": null,
                                          "scheduledId": "0",
                                          "status": "EXECUTED",
                                        }
                                      }
                                    />
                                  </Context.Provider>,
                                },
                              ],
                              "expiration-time": Object {
                                "props": Object {
                                  "isVisible": true,
                                },
                                "title": <React.Fragment>
                                  N/A
                                </React.Fragment>,
                              },
                              "id": 0,
                              "isExpanded": undefined,
                              "isFirst": true,
                              "isFirstVisible": true,
                              "isHeightAuto": false,
                              "isLast": true,
                              "isLastVisible": true,
                              "job-id": Object {
                                "props": Object {
                                  "isVisible": true,
                                },
                                "title": <Tooltip
                                  content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                >
                                  <span>
                                    6e74a57
                                  </span>
                                </Tooltip>,
                              },
                              "status": Object {
                                "props": Object {
                                  "isVisible": true,
                                },
                                "title": <React.Fragment>
                                  <CheckCircleIcon
                                    className="pf-u-mr-sm"
                                    color="var(--pf-global--success-color--100)"
                                  />
                                  Executed
                                </React.Fragment>,
                              },
                            },
                          ]
                        }
                      >
                        <BodyWrapper
                          className=""
                          headerRows={null}
                          mappedRows={
                            Array [
                              Object {
                                "actions": Object {
                                  "props": Object {
                                    "isVisible": true,
                                  },
                                  "title": <Context.Provider
                                    value={[Function]}
                                  >
                                    <MockedJobActionsKebab
                                      job={
                                        Object {
                                          "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                          "endpoint": "http://localhost:4000",
                                          "expirationTime": null,
                                          "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                          "lastUpdate": "2020-08-27T03:35:50.147Z",
                                          "priority": 0,
                                          "processId": "travels",
                                          "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                          "repeatInterval": null,
                                          "repeatLimit": null,
                                          "retries": 0,
                                          "rootProcessId": null,
                                          "scheduledId": "0",
                                          "status": "EXECUTED",
                                        }
                                      }
                                    />
                                  </Context.Provider>,
                                },
                                "cells": Array [
                                  Object {
                                    "title": <Tooltip
                                      content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                    >
                                      <span>
                                        6e74a57
                                      </span>
                                    </Tooltip>,
                                  },
                                  Object {
                                    "title": <React.Fragment>
                                      <CheckCircleIcon
                                        className="pf-u-mr-sm"
                                        color="var(--pf-global--success-color--100)"
                                      />
                                      Executed
                                    </React.Fragment>,
                                  },
                                  Object {
                                    "title": <React.Fragment>
                                      N/A
                                    </React.Fragment>,
                                  },
                                  Object {
                                    "title": <Context.Provider
                                      value={[Function]}
                                    >
                                      <MockedJobActionsKebab
                                        job={
                                          Object {
                                            "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                            "endpoint": "http://localhost:4000",
                                            "expirationTime": null,
                                            "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                            "lastUpdate": "2020-08-27T03:35:50.147Z",
                                            "priority": 0,
                                            "processId": "travels",
                                            "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                            "repeatInterval": null,
                                            "repeatLimit": null,
                                            "retries": 0,
                                            "rootProcessId": null,
                                            "scheduledId": "0",
                                            "status": "EXECUTED",
                                          }
                                        }
                                      />
                                    </Context.Provider>,
                                  },
                                ],
                                "expiration-time": Object {
                                  "props": Object {
                                    "isVisible": true,
                                  },
                                  "title": <React.Fragment>
                                    N/A
                                  </React.Fragment>,
                                },
                                "id": 0,
                                "isExpanded": undefined,
                                "isFirst": true,
                                "isFirstVisible": true,
                                "isHeightAuto": false,
                                "isLast": true,
                                "isLastVisible": true,
                                "job-id": Object {
                                  "props": Object {
                                    "isVisible": true,
                                  },
                                  "title": <Tooltip
                                    content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                  >
                                    <span>
                                      6e74a57
                                    </span>
                                  </Tooltip>,
                                },
                                "status": Object {
                                  "props": Object {
                                    "isVisible": true,
                                  },
                                  "title": <React.Fragment>
                                    <CheckCircleIcon
                                      className="pf-u-mr-sm"
                                      color="var(--pf-global--success-color--100)"
                                    />
                                    Executed
                                  </React.Fragment>,
                                },
                              },
                            ]
                          }
                        >
                          <tbody
                            className=""
                          >
                            <BodyRow
                              columns={
                                Array [
                                  Object {
                                    "cell": Object {
                                      "formatters": Array [
                                        [Function],
                                      ],
                                      "transforms": Array [
                                        [Function],
                                      ],
                                    },
                                    "data": undefined,
                                    "extraParams": Object {
                                      "actionResolver": undefined,
                                      "actions": undefined,
                                      "allRowsSelected": false,
                                      "areActionsDisabled": undefined,
                                      "canSelectAll": true,
                                      "contentId": "expanded-content",
                                      "dropdownDirection": "down",
                                      "dropdownPosition": "right",
                                      "expandId": "expandable-toggle",
                                      "firstUserColumnIndex": 0,
                                      "onCollapse": undefined,
                                      "onExpand": undefined,
                                      "onRowEdit": undefined,
                                      "onSelect": undefined,
                                      "onSort": undefined,
                                      "rowLabeledBy": "simple-node",
                                      "sortBy": undefined,
                                    },
                                    "header": Object {
                                      "formatters": Array [],
                                      "label": "Job id",
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "property": "job-id",
                                    "props": Object {
                                      "data-key": 0,
                                      "data-label": "Job id",
                                    },
                                  },
                                  Object {
                                    "cell": Object {
                                      "formatters": Array [
                                        [Function],
                                      ],
                                      "transforms": Array [
                                        [Function],
                                      ],
                                    },
                                    "data": undefined,
                                    "extraParams": Object {
                                      "actionResolver": undefined,
                                      "actions": undefined,
                                      "allRowsSelected": false,
                                      "areActionsDisabled": undefined,
                                      "canSelectAll": true,
                                      "contentId": "expanded-content",
                                      "dropdownDirection": "down",
                                      "dropdownPosition": "right",
                                      "expandId": "expandable-toggle",
                                      "firstUserColumnIndex": 0,
                                      "onCollapse": undefined,
                                      "onExpand": undefined,
                                      "onRowEdit": undefined,
                                      "onSelect": undefined,
                                      "onSort": undefined,
                                      "rowLabeledBy": "simple-node",
                                      "sortBy": undefined,
                                    },
                                    "header": Object {
                                      "formatters": Array [],
                                      "label": "Status",
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "property": "status",
                                    "props": Object {
                                      "data-key": 1,
                                      "data-label": "Status",
                                    },
                                  },
                                  Object {
                                    "cell": Object {
                                      "formatters": Array [
                                        [Function],
                                      ],
                                      "transforms": Array [
                                        [Function],
                                      ],
                                    },
                                    "data": undefined,
                                    "extraParams": Object {
                                      "actionResolver": undefined,
                                      "actions": undefined,
                                      "allRowsSelected": false,
                                      "areActionsDisabled": undefined,
                                      "canSelectAll": true,
                                      "contentId": "expanded-content",
                                      "dropdownDirection": "down",
                                      "dropdownPosition": "right",
                                      "expandId": "expandable-toggle",
                                      "firstUserColumnIndex": 0,
                                      "onCollapse": undefined,
                                      "onExpand": undefined,
                                      "onRowEdit": undefined,
                                      "onSelect": undefined,
                                      "onSort": undefined,
                                      "rowLabeledBy": "simple-node",
                                      "sortBy": undefined,
                                    },
                                    "header": Object {
                                      "formatters": Array [],
                                      "label": "Expiration time",
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "property": "expiration-time",
                                    "props": Object {
                                      "data-key": 2,
                                      "data-label": "Expiration time",
                                    },
                                  },
                                  Object {
                                    "cell": Object {
                                      "formatters": Array [
                                        [Function],
                                      ],
                                      "transforms": Array [
                                        [Function],
                                      ],
                                    },
                                    "data": undefined,
                                    "extraParams": Object {
                                      "actionResolver": undefined,
                                      "actions": undefined,
                                      "allRowsSelected": false,
                                      "areActionsDisabled": undefined,
                                      "canSelectAll": true,
                                      "contentId": "expanded-content",
                                      "dropdownDirection": "down",
                                      "dropdownPosition": "right",
                                      "expandId": "expandable-toggle",
                                      "firstUserColumnIndex": 0,
                                      "onCollapse": undefined,
                                      "onExpand": undefined,
                                      "onRowEdit": undefined,
                                      "onSelect": undefined,
                                      "onSort": undefined,
                                      "rowLabeledBy": "simple-node",
                                      "sortBy": undefined,
                                    },
                                    "header": Object {
                                      "formatters": Array [],
                                      "label": "Actions",
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "property": "actions",
                                    "props": Object {
                                      "data-key": 3,
                                      "data-label": "Actions",
                                    },
                                  },
                                ]
                              }
                              key="0-row"
                              onRow={[Function]}
                              renderers={
                                Object {
                                  "cell": [Function],
                                  "row": [Function],
                                  "wrapper": [Function],
                                }
                              }
                              rowData={
                                Object {
                                  "actions": Object {
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": <Context.Provider
                                      value={[Function]}
                                    >
                                      <MockedJobActionsKebab
                                        job={
                                          Object {
                                            "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                            "endpoint": "http://localhost:4000",
                                            "expirationTime": null,
                                            "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                            "lastUpdate": "2020-08-27T03:35:50.147Z",
                                            "priority": 0,
                                            "processId": "travels",
                                            "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                            "repeatInterval": null,
                                            "repeatLimit": null,
                                            "retries": 0,
                                            "rootProcessId": null,
                                            "scheduledId": "0",
                                            "status": "EXECUTED",
                                          }
                                        }
                                      />
                                    </Context.Provider>,
                                  },
                                  "cells": Array [
                                    Object {
                                      "title": <Tooltip
                                        content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                      >
                                        <span>
                                          6e74a57
                                        </span>
                                      </Tooltip>,
                                    },
                                    Object {
                                      "title": <React.Fragment>
                                        <CheckCircleIcon
                                          className="pf-u-mr-sm"
                                          color="var(--pf-global--success-color--100)"
                                        />
                                        Executed
                                      </React.Fragment>,
                                    },
                                    Object {
                                      "title": <React.Fragment>
                                        N/A
                                      </React.Fragment>,
                                    },
                                    Object {
                                      "title": <Context.Provider
                                        value={[Function]}
                                      >
                                        <MockedJobActionsKebab
                                          job={
                                            Object {
                                              "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                              "endpoint": "http://localhost:4000",
                                              "expirationTime": null,
                                              "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                              "lastUpdate": "2020-08-27T03:35:50.147Z",
                                              "priority": 0,
                                              "processId": "travels",
                                              "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                              "repeatInterval": null,
                                              "repeatLimit": null,
                                              "retries": 0,
                                              "rootProcessId": null,
                                              "scheduledId": "0",
                                              "status": "EXECUTED",
                                            }
                                          }
                                        />
                                      </Context.Provider>,
                                    },
                                  ],
                                  "expiration-time": Object {
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": <React.Fragment>
                                      N/A
                                    </React.Fragment>,
                                  },
                                  "id": 0,
                                  "isExpanded": undefined,
                                  "isFirst": true,
                                  "isFirstVisible": true,
                                  "isHeightAuto": false,
                                  "isLast": true,
                                  "isLastVisible": true,
                                  "job-id": Object {
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": <Tooltip
                                      content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                    >
                                      <span>
                                        6e74a57
                                      </span>
                                    </Tooltip>,
                                  },
                                  "status": Object {
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": <React.Fragment>
                                      <CheckCircleIcon
                                        className="pf-u-mr-sm"
                                        color="var(--pf-global--success-color--100)"
                                      />
                                      Executed
                                    </React.Fragment>,
                                  },
                                }
                              }
                              rowIndex={0}
                              rowKey="0-row"
                            >
                              <RowWrapper
                                className=""
                                onMouseDown={[Function]}
                                row={
                                  Object {
                                    "actions": Object {
                                      "props": Object {
                                        "isVisible": true,
                                      },
                                      "title": <Context.Provider
                                        value={[Function]}
                                      >
                                        <MockedJobActionsKebab
                                          job={
                                            Object {
                                              "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                              "endpoint": "http://localhost:4000",
                                              "expirationTime": null,
                                              "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                              "lastUpdate": "2020-08-27T03:35:50.147Z",
                                              "priority": 0,
                                              "processId": "travels",
                                              "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                              "repeatInterval": null,
                                              "repeatLimit": null,
                                              "retries": 0,
                                              "rootProcessId": null,
                                              "scheduledId": "0",
                                              "status": "EXECUTED",
                                            }
                                          }
                                        />
                                      </Context.Provider>,
                                    },
                                    "cells": Array [
                                      Object {
                                        "title": <Tooltip
                                          content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                        >
                                          <span>
                                            6e74a57
                                          </span>
                                        </Tooltip>,
                                      },
                                      Object {
                                        "title": <React.Fragment>
                                          <CheckCircleIcon
                                            className="pf-u-mr-sm"
                                            color="var(--pf-global--success-color--100)"
                                          />
                                          Executed
                                        </React.Fragment>,
                                      },
                                      Object {
                                        "title": <React.Fragment>
                                          N/A
                                        </React.Fragment>,
                                      },
                                      Object {
                                        "title": <Context.Provider
                                          value={[Function]}
                                        >
                                          <MockedJobActionsKebab
                                            job={
                                              Object {
                                                "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                                "endpoint": "http://localhost:4000",
                                                "expirationTime": null,
                                                "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                                "lastUpdate": "2020-08-27T03:35:50.147Z",
                                                "priority": 0,
                                                "processId": "travels",
                                                "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                                "repeatInterval": null,
                                                "repeatLimit": null,
                                                "retries": 0,
                                                "rootProcessId": null,
                                                "scheduledId": "0",
                                                "status": "EXECUTED",
                                              }
                                            }
                                          />
                                        </Context.Provider>,
                                      },
                                    ],
                                    "expiration-time": Object {
                                      "props": Object {
                                        "isVisible": true,
                                      },
                                      "title": <React.Fragment>
                                        N/A
                                      </React.Fragment>,
                                    },
                                    "id": 0,
                                    "isExpanded": undefined,
                                    "isFirst": true,
                                    "isFirstVisible": true,
                                    "isHeightAuto": false,
                                    "isLast": true,
                                    "isLastVisible": true,
                                    "job-id": Object {
                                      "props": Object {
                                        "isVisible": true,
                                      },
                                      "title": <Tooltip
                                        content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                      >
                                        <span>
                                          6e74a57
                                        </span>
                                      </Tooltip>,
                                    },
                                    "status": Object {
                                      "props": Object {
                                        "isVisible": true,
                                      },
                                      "title": <React.Fragment>
                                        <CheckCircleIcon
                                          className="pf-u-mr-sm"
                                          color="var(--pf-global--success-color--100)"
                                        />
                                        Executed
                                      </React.Fragment>,
                                    },
                                  }
                                }
                                rowProps={
                                  Object {
                                    "rowIndex": 0,
                                    "rowKey": "0-row",
                                  }
                                }
                              >
                                <tr
                                  className=""
                                  data-ouia-component-id={4}
                                  data-ouia-component-type="PF4/TableRow"
                                  data-ouia-safe={true}
                                  hidden={false}
                                  onMouseDown={[Function]}
                                >
                                  <BodyCell
                                    data-key={0}
                                    data-label="Job id"
                                    isVisible={true}
                                    key="col-0-row-0"
                                  >
                                    <td
                                      className=""
                                      data-key={0}
                                      data-label="Job id"
                                      onMouseEnter={[Function]}
                                    >
                                      <Tooltip
                                        content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                      >
                                        <Popper
                                          appendTo={[Function]}
                                          distance={15}
                                          enableFlip={true}
                                          flipBehavior={
                                            Array [
                                              "top",
                                              "right",
                                              "bottom",
                                              "left",
                                              "top",
                                              "right",
                                              "bottom",
                                            ]
                                          }
                                          isVisible={false}
                                          onBlur={[Function]}
                                          onDocumentClick={false}
                                          onDocumentKeyDown={[Function]}
                                          onFocus={[Function]}
                                          onMouseEnter={[Function]}
                                          onMouseLeave={[Function]}
                                          onTriggerEnter={[Function]}
                                          placement="top"
                                          popper={
                                            <div
                                              className="pf-c-tooltip"
                                              id="pf-tooltip-1"
                                              role="tooltip"
                                              style={
                                                Object {
                                                  "maxWidth": null,
                                                  "opacity": 0,
                                                  "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                                }
                                              }
                                            >
                                              <TooltipArrow />
                                              <TooltipContent
                                                isLeftAligned={false}
                                              >
                                                6e74a570-31c8-4020-bd70-19be2cb625f3_0
                                              </TooltipContent>
                                            </div>
                                          }
                                          popperMatchesTriggerWidth={false}
                                          positionModifiers={
                                            Object {
                                              "bottom": "pf-m-bottom",
                                              "left": "pf-m-left",
                                              "right": "pf-m-right",
                                              "top": "pf-m-top",
                                            }
                                          }
                                          trigger={
                                            <span
                                              aria-describedby="pf-tooltip-1"
                                            >
                                              6e74a57
                                            </span>
                                          }
                                          zIndex={9999}
                                        >
                                          <FindRefWrapper
                                            onFoundRef={[Function]}
                                          >
                                            <span
                                              aria-describedby="pf-tooltip-1"
                                            >
                                              6e74a57
                                            </span>
                                          </FindRefWrapper>
                                        </Popper>
                                      </Tooltip>
                                    </td>
                                  </BodyCell>
                                  <BodyCell
                                    data-key={1}
                                    data-label="Status"
                                    isVisible={true}
                                    key="col-1-row-0"
                                  >
                                    <td
                                      className=""
                                      data-key={1}
                                      data-label="Status"
                                      onMouseEnter={[Function]}
                                    >
                                      <CheckCircleIcon
                                        className="pf-u-mr-sm"
                                        color="var(--pf-global--success-color--100)"
                                      >
                                        <MockedComponent />
                                      </CheckCircleIcon>
                                      Executed
                                    </td>
                                  </BodyCell>
                                  <BodyCell
                                    data-key={2}
                                    data-label="Expiration time"
                                    isVisible={true}
                                    key="col-2-row-0"
                                  >
                                    <td
                                      className=""
                                      data-key={2}
                                      data-label="Expiration time"
                                      onMouseEnter={[Function]}
                                    >
                                      N/A
                                    </td>
                                  </BodyCell>
                                  <BodyCell
                                    data-key={3}
                                    data-label="Actions"
                                    isVisible={true}
                                    key="col-3-row-0"
                                  >
                                    <td
                                      className=""
                                      data-key={3}
                                      data-label="Actions"
                                      onMouseEnter={[Function]}
                                    >
                                      <MockedJobActionsKebab
                                        job={
                                          Object {
                                            "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                            "endpoint": "http://localhost:4000",
                                            "expirationTime": null,
                                            "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                            "lastUpdate": "2020-08-27T03:35:50.147Z",
                                            "priority": 0,
                                            "processId": "travels",
                                            "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                            "repeatInterval": null,
                                            "repeatLimit": null,
                                            "retries": 0,
                                            "rootProcessId": null,
                                            "scheduledId": "0",
                                            "status": "EXECUTED",
                                          }
                                        }
                                      />
                                    </td>
                                  </BodyCell>
                                </tr>
                              </RowWrapper>
                            </BodyRow>
                          </tbody>
                        </BodyWrapper>
                      </BaseBody>
                    </Component>
                  </ContextBody>
                </Component>
              </table>
            </Provider>
          </Table>
        </div>
      </CardBody>
    </article>
  </Card>
</ProcessDetailsJobsPanel>
`;

exports[`Processdetails jobs pannel component tests test expiration time 1`] = `
<ProcessDetailsJobsPanel
  ouiaSafe={true}
  processInstanceId="5c56eeff-4cbf-3313-a325-4c895e0afced"
>
  <Card
    data-ouia-component-type="process-details-jobs-panel"
    data-ouia-safe={true}
  >
    <article
      className="pf-c-card"
      data-ouia-component-id={7}
      data-ouia-component-type="PF4/Card"
      data-ouia-safe={true}
    >
      <CardHeader>
        <div
          className="pf-c-card__header"
        >
          <Title
            headingLevel="h3"
            size="xl"
          >
            <h3
              className="pf-c-title pf-m-xl"
            >
              Jobs
            </h3>
          </Title>
        </div>
      </CardHeader>
      <CardBody>
        <div
          className="pf-c-card__body"
        >
          <Table
            aria-label="Process details jobs panel"
            aria-labelledby="Process details jobs panel"
            borders={true}
            canSelectAll={true}
            cells={
              Array [
                Object {
                  "title": "Job id",
                },
                Object {
                  "title": "Status",
                },
                Object {
                  "title": "Expiration time",
                },
                Object {
                  "title": "Actions",
                },
              ]
            }
            className=""
            contentId="expanded-content"
            dropdownDirection="down"
            dropdownPosition="right"
            expandId="expandable-toggle"
            gridBreakPoint="grid-md"
            isStickyHeader={false}
            ouiaSafe={true}
            role="grid"
            rowLabeledBy="simple-node"
            rows={
              Array [
                Object {
                  "cells": Array [
                    Object {
                      "title": <Tooltip
                        content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                      >
                        <span>
                          6e74a57
                        </span>
                      </Tooltip>,
                    },
                    Object {
                      "title": <React.Fragment>
                        <CheckCircleIcon
                          className="pf-u-mr-sm"
                          color="var(--pf-global--success-color--100)"
                        />
                        Executed
                      </React.Fragment>,
                    },
                    Object {
                      "title": <React.Fragment>
                        <React.Fragment>
                           
                          expires in
                           
                          <t
                            ago={true}
                            calendar={false}
                            decimal={false}
                            element={null}
                            filter={[Function]}
                            fromNow={true}
                            interval={60000}
                            local={false}
                            onChange={[Function]}
                            titleFormat=""
                            toNow={false}
                            unit={null}
                            unix={false}
                            utc={false}
                            withTitle={false}
                          >
                            2020-08-29T03:35:50.147Z
                          </t>
                        </React.Fragment>
                      </React.Fragment>,
                    },
                    Object {
                      "title": <Context.Provider
                        value={[Function]}
                      >
                        <MockedJobActionsKebab
                          job={
                            Object {
                              "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                              "endpoint": "http://localhost:4000",
                              "expirationTime": "2020-08-29T03:35:50.147Z",
                              "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                              "lastUpdate": "2020-08-27T03:35:50.147Z",
                              "priority": 0,
                              "processId": "travels",
                              "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                              "repeatInterval": null,
                              "repeatLimit": null,
                              "retries": 0,
                              "rootProcessId": null,
                              "scheduledId": "0",
                              "status": "EXECUTED",
                            }
                          }
                        />
                      </Context.Provider>,
                    },
                  ],
                },
              ]
            }
            variant="compact"
          >
            <Provider
              aria-label="Process details jobs panel"
              aria-labelledby="Process details jobs panel"
              className="pf-c-table pf-m-grid-md pf-m-compact"
              columns={
                Array [
                  Object {
                    "cell": Object {
                      "formatters": Array [
                        [Function],
                      ],
                      "transforms": Array [
                        [Function],
                      ],
                    },
                    "data": undefined,
                    "extraParams": Object {
                      "actionResolver": undefined,
                      "actions": undefined,
                      "allRowsSelected": false,
                      "areActionsDisabled": undefined,
                      "canSelectAll": true,
                      "contentId": "expanded-content",
                      "dropdownDirection": "down",
                      "dropdownPosition": "right",
                      "expandId": "expandable-toggle",
                      "firstUserColumnIndex": 0,
                      "onCollapse": undefined,
                      "onExpand": undefined,
                      "onRowEdit": undefined,
                      "onSelect": undefined,
                      "onSort": undefined,
                      "rowLabeledBy": "simple-node",
                      "sortBy": undefined,
                    },
                    "header": Object {
                      "formatters": Array [],
                      "label": "Job id",
                      "transforms": Array [
                        [Function],
                        [Function],
                      ],
                    },
                    "property": "job-id",
                    "props": Object {
                      "data-key": 0,
                      "data-label": "Job id",
                    },
                  },
                  Object {
                    "cell": Object {
                      "formatters": Array [
                        [Function],
                      ],
                      "transforms": Array [
                        [Function],
                      ],
                    },
                    "data": undefined,
                    "extraParams": Object {
                      "actionResolver": undefined,
                      "actions": undefined,
                      "allRowsSelected": false,
                      "areActionsDisabled": undefined,
                      "canSelectAll": true,
                      "contentId": "expanded-content",
                      "dropdownDirection": "down",
                      "dropdownPosition": "right",
                      "expandId": "expandable-toggle",
                      "firstUserColumnIndex": 0,
                      "onCollapse": undefined,
                      "onExpand": undefined,
                      "onRowEdit": undefined,
                      "onSelect": undefined,
                      "onSort": undefined,
                      "rowLabeledBy": "simple-node",
                      "sortBy": undefined,
                    },
                    "header": Object {
                      "formatters": Array [],
                      "label": "Status",
                      "transforms": Array [
                        [Function],
                        [Function],
                      ],
                    },
                    "property": "status",
                    "props": Object {
                      "data-key": 1,
                      "data-label": "Status",
                    },
                  },
                  Object {
                    "cell": Object {
                      "formatters": Array [
                        [Function],
                      ],
                      "transforms": Array [
                        [Function],
                      ],
                    },
                    "data": undefined,
                    "extraParams": Object {
                      "actionResolver": undefined,
                      "actions": undefined,
                      "allRowsSelected": false,
                      "areActionsDisabled": undefined,
                      "canSelectAll": true,
                      "contentId": "expanded-content",
                      "dropdownDirection": "down",
                      "dropdownPosition": "right",
                      "expandId": "expandable-toggle",
                      "firstUserColumnIndex": 0,
                      "onCollapse": undefined,
                      "onExpand": undefined,
                      "onRowEdit": undefined,
                      "onSelect": undefined,
                      "onSort": undefined,
                      "rowLabeledBy": "simple-node",
                      "sortBy": undefined,
                    },
                    "header": Object {
                      "formatters": Array [],
                      "label": "Expiration time",
                      "transforms": Array [
                        [Function],
                        [Function],
                      ],
                    },
                    "property": "expiration-time",
                    "props": Object {
                      "data-key": 2,
                      "data-label": "Expiration time",
                    },
                  },
                  Object {
                    "cell": Object {
                      "formatters": Array [
                        [Function],
                      ],
                      "transforms": Array [
                        [Function],
                      ],
                    },
                    "data": undefined,
                    "extraParams": Object {
                      "actionResolver": undefined,
                      "actions": undefined,
                      "allRowsSelected": false,
                      "areActionsDisabled": undefined,
                      "canSelectAll": true,
                      "contentId": "expanded-content",
                      "dropdownDirection": "down",
                      "dropdownPosition": "right",
                      "expandId": "expandable-toggle",
                      "firstUserColumnIndex": 0,
                      "onCollapse": undefined,
                      "onExpand": undefined,
                      "onRowEdit": undefined,
                      "onSelect": undefined,
                      "onSort": undefined,
                      "rowLabeledBy": "simple-node",
                      "sortBy": undefined,
                    },
                    "header": Object {
                      "formatters": Array [],
                      "label": "Actions",
                      "transforms": Array [
                        [Function],
                        [Function],
                      ],
                    },
                    "property": "actions",
                    "props": Object {
                      "data-key": 3,
                      "data-label": "Actions",
                    },
                  },
                ]
              }
              data-ouia-component-id={8}
              data-ouia-component-type="PF4/Table"
              data-ouia-safe={true}
              renderers={
                Object {
                  "body": Object {
                    "cell": [Function],
                    "row": [Function],
                    "wrapper": [Function],
                  },
                  "header": Object {
                    "cell": [Function],
                  },
                }
              }
              role="grid"
            >
              <table
                aria-label="Process details jobs panel"
                aria-labelledby="Process details jobs panel"
                className="pf-c-table pf-m-grid-md pf-m-compact"
                data-ouia-component-id={8}
                data-ouia-component-type="PF4/Table"
                data-ouia-safe={true}
                role="grid"
              >
                <TableHeader>
                  <ContextHeader
                    headerRows={null}
                  >
                    <Component
                      className=""
                      headerRows={null}
                    >
                      <BaseHeader
                        className=""
                        columns={
                          Array [
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "canSelectAll": true,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": undefined,
                                "onExpand": undefined,
                                "onRowEdit": undefined,
                                "onSelect": undefined,
                                "onSort": undefined,
                                "rowLabeledBy": "simple-node",
                                "sortBy": undefined,
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Job id",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "job-id",
                              "props": Object {
                                "data-key": 0,
                                "data-label": "Job id",
                              },
                            },
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "canSelectAll": true,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": undefined,
                                "onExpand": undefined,
                                "onRowEdit": undefined,
                                "onSelect": undefined,
                                "onSort": undefined,
                                "rowLabeledBy": "simple-node",
                                "sortBy": undefined,
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Status",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "status",
                              "props": Object {
                                "data-key": 1,
                                "data-label": "Status",
                              },
                            },
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "canSelectAll": true,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": undefined,
                                "onExpand": undefined,
                                "onRowEdit": undefined,
                                "onSelect": undefined,
                                "onSort": undefined,
                                "rowLabeledBy": "simple-node",
                                "sortBy": undefined,
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Expiration time",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "expiration-time",
                              "props": Object {
                                "data-key": 2,
                                "data-label": "Expiration time",
                              },
                            },
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "canSelectAll": true,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": undefined,
                                "onExpand": undefined,
                                "onRowEdit": undefined,
                                "onSelect": undefined,
                                "onSort": undefined,
                                "rowLabeledBy": "simple-node",
                                "sortBy": undefined,
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Actions",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "actions",
                              "props": Object {
                                "data-key": 3,
                                "data-label": "Actions",
                              },
                            },
                          ]
                        }
                        headerRows={null}
                        renderers={
                          Object {
                            "body": Object {
                              "cell": [Function],
                              "row": [Function],
                              "wrapper": [Function],
                            },
                            "header": Object {
                              "cell": [Function],
                              "row": "tr",
                              "wrapper": "thead",
                            },
                            "table": "table",
                          }
                        }
                      >
                        <thead
                          className=""
                        >
                          <HeaderRow
                            key="0-header-row"
                            renderers={
                              Object {
                                "cell": [Function],
                                "row": "tr",
                                "wrapper": "thead",
                              }
                            }
                            rowData={
                              Array [
                                Object {
                                  "cell": Object {
                                    "formatters": Array [
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                  },
                                  "data": undefined,
                                  "extraParams": Object {
                                    "actionResolver": undefined,
                                    "actions": undefined,
                                    "allRowsSelected": false,
                                    "areActionsDisabled": undefined,
                                    "canSelectAll": true,
                                    "contentId": "expanded-content",
                                    "dropdownDirection": "down",
                                    "dropdownPosition": "right",
                                    "expandId": "expandable-toggle",
                                    "firstUserColumnIndex": 0,
                                    "onCollapse": undefined,
                                    "onExpand": undefined,
                                    "onRowEdit": undefined,
                                    "onSelect": undefined,
                                    "onSort": undefined,
                                    "rowLabeledBy": "simple-node",
                                    "sortBy": undefined,
                                  },
                                  "header": Object {
                                    "formatters": Array [],
                                    "label": "Job id",
                                    "transforms": Array [
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                  "property": "job-id",
                                  "props": Object {
                                    "data-key": 0,
                                    "data-label": "Job id",
                                  },
                                },
                                Object {
                                  "cell": Object {
                                    "formatters": Array [
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                  },
                                  "data": undefined,
                                  "extraParams": Object {
                                    "actionResolver": undefined,
                                    "actions": undefined,
                                    "allRowsSelected": false,
                                    "areActionsDisabled": undefined,
                                    "canSelectAll": true,
                                    "contentId": "expanded-content",
                                    "dropdownDirection": "down",
                                    "dropdownPosition": "right",
                                    "expandId": "expandable-toggle",
                                    "firstUserColumnIndex": 0,
                                    "onCollapse": undefined,
                                    "onExpand": undefined,
                                    "onRowEdit": undefined,
                                    "onSelect": undefined,
                                    "onSort": undefined,
                                    "rowLabeledBy": "simple-node",
                                    "sortBy": undefined,
                                  },
                                  "header": Object {
                                    "formatters": Array [],
                                    "label": "Status",
                                    "transforms": Array [
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                  "property": "status",
                                  "props": Object {
                                    "data-key": 1,
                                    "data-label": "Status",
                                  },
                                },
                                Object {
                                  "cell": Object {
                                    "formatters": Array [
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                  },
                                  "data": undefined,
                                  "extraParams": Object {
                                    "actionResolver": undefined,
                                    "actions": undefined,
                                    "allRowsSelected": false,
                                    "areActionsDisabled": undefined,
                                    "canSelectAll": true,
                                    "contentId": "expanded-content",
                                    "dropdownDirection": "down",
                                    "dropdownPosition": "right",
                                    "expandId": "expandable-toggle",
                                    "firstUserColumnIndex": 0,
                                    "onCollapse": undefined,
                                    "onExpand": undefined,
                                    "onRowEdit": undefined,
                                    "onSelect": undefined,
                                    "onSort": undefined,
                                    "rowLabeledBy": "simple-node",
                                    "sortBy": undefined,
                                  },
                                  "header": Object {
                                    "formatters": Array [],
                                    "label": "Expiration time",
                                    "transforms": Array [
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                  "property": "expiration-time",
                                  "props": Object {
                                    "data-key": 2,
                                    "data-label": "Expiration time",
                                  },
                                },
                                Object {
                                  "cell": Object {
                                    "formatters": Array [
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                  },
                                  "data": undefined,
                                  "extraParams": Object {
                                    "actionResolver": undefined,
                                    "actions": undefined,
                                    "allRowsSelected": false,
                                    "areActionsDisabled": undefined,
                                    "canSelectAll": true,
                                    "contentId": "expanded-content",
                                    "dropdownDirection": "down",
                                    "dropdownPosition": "right",
                                    "expandId": "expandable-toggle",
                                    "firstUserColumnIndex": 0,
                                    "onCollapse": undefined,
                                    "onExpand": undefined,
                                    "onRowEdit": undefined,
                                    "onSelect": undefined,
                                    "onSort": undefined,
                                    "rowLabeledBy": "simple-node",
                                    "sortBy": undefined,
                                  },
                                  "header": Object {
                                    "formatters": Array [],
                                    "label": "Actions",
                                    "transforms": Array [
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                  "property": "actions",
                                  "props": Object {
                                    "data-key": 3,
                                    "data-label": "Actions",
                                  },
                                },
                              ]
                            }
                            rowIndex={0}
                          >
                            <tr>
                              <HeaderCell
                                data-key={0}
                                data-label="Job id"
                                key="0-header"
                                scope="col"
                              >
                                <th
                                  className=""
                                  data-key={0}
                                  data-label="Job id"
                                  onMouseEnter={[Function]}
                                  scope="col"
                                >
                                  Job id
                                </th>
                              </HeaderCell>
                              <HeaderCell
                                data-key={1}
                                data-label="Status"
                                key="1-header"
                                scope="col"
                              >
                                <th
                                  className=""
                                  data-key={1}
                                  data-label="Status"
                                  onMouseEnter={[Function]}
                                  scope="col"
                                >
                                  Status
                                </th>
                              </HeaderCell>
                              <HeaderCell
                                data-key={2}
                                data-label="Expiration time"
                                key="2-header"
                                scope="col"
                              >
                                <th
                                  className=""
                                  data-key={2}
                                  data-label="Expiration time"
                                  onMouseEnter={[Function]}
                                  scope="col"
                                >
                                  Expiration time
                                </th>
                              </HeaderCell>
                              <HeaderCell
                                data-key={3}
                                data-label="Actions"
                                key="3-header"
                                scope="col"
                              >
                                <th
                                  className=""
                                  data-key={3}
                                  data-label="Actions"
                                  onMouseEnter={[Function]}
                                  scope="col"
                                >
                                  Actions
                                </th>
                              </HeaderCell>
                            </tr>
                          </HeaderRow>
                        </thead>
                      </BaseHeader>
                    </Component>
                  </ContextHeader>
                </TableHeader>
                <Component>
                  <ContextBody
                    className=""
                    headerData={
                      Array [
                        Object {
                          "cell": Object {
                            "formatters": Array [
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "data": undefined,
                          "extraParams": Object {
                            "actionResolver": undefined,
                            "actions": undefined,
                            "allRowsSelected": false,
                            "areActionsDisabled": undefined,
                            "canSelectAll": true,
                            "contentId": "expanded-content",
                            "dropdownDirection": "down",
                            "dropdownPosition": "right",
                            "expandId": "expandable-toggle",
                            "firstUserColumnIndex": 0,
                            "onCollapse": undefined,
                            "onExpand": undefined,
                            "onRowEdit": undefined,
                            "onSelect": undefined,
                            "onSort": undefined,
                            "rowLabeledBy": "simple-node",
                            "sortBy": undefined,
                          },
                          "header": Object {
                            "formatters": Array [],
                            "label": "Job id",
                            "transforms": Array [
                              [Function],
                              [Function],
                            ],
                          },
                          "property": "job-id",
                          "props": Object {
                            "data-key": 0,
                            "data-label": "Job id",
                          },
                        },
                        Object {
                          "cell": Object {
                            "formatters": Array [
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "data": undefined,
                          "extraParams": Object {
                            "actionResolver": undefined,
                            "actions": undefined,
                            "allRowsSelected": false,
                            "areActionsDisabled": undefined,
                            "canSelectAll": true,
                            "contentId": "expanded-content",
                            "dropdownDirection": "down",
                            "dropdownPosition": "right",
                            "expandId": "expandable-toggle",
                            "firstUserColumnIndex": 0,
                            "onCollapse": undefined,
                            "onExpand": undefined,
                            "onRowEdit": undefined,
                            "onSelect": undefined,
                            "onSort": undefined,
                            "rowLabeledBy": "simple-node",
                            "sortBy": undefined,
                          },
                          "header": Object {
                            "formatters": Array [],
                            "label": "Status",
                            "transforms": Array [
                              [Function],
                              [Function],
                            ],
                          },
                          "property": "status",
                          "props": Object {
                            "data-key": 1,
                            "data-label": "Status",
                          },
                        },
                        Object {
                          "cell": Object {
                            "formatters": Array [
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "data": undefined,
                          "extraParams": Object {
                            "actionResolver": undefined,
                            "actions": undefined,
                            "allRowsSelected": false,
                            "areActionsDisabled": undefined,
                            "canSelectAll": true,
                            "contentId": "expanded-content",
                            "dropdownDirection": "down",
                            "dropdownPosition": "right",
                            "expandId": "expandable-toggle",
                            "firstUserColumnIndex": 0,
                            "onCollapse": undefined,
                            "onExpand": undefined,
                            "onRowEdit": undefined,
                            "onSelect": undefined,
                            "onSort": undefined,
                            "rowLabeledBy": "simple-node",
                            "sortBy": undefined,
                          },
                          "header": Object {
                            "formatters": Array [],
                            "label": "Expiration time",
                            "transforms": Array [
                              [Function],
                              [Function],
                            ],
                          },
                          "property": "expiration-time",
                          "props": Object {
                            "data-key": 2,
                            "data-label": "Expiration time",
                          },
                        },
                        Object {
                          "cell": Object {
                            "formatters": Array [
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "data": undefined,
                          "extraParams": Object {
                            "actionResolver": undefined,
                            "actions": undefined,
                            "allRowsSelected": false,
                            "areActionsDisabled": undefined,
                            "canSelectAll": true,
                            "contentId": "expanded-content",
                            "dropdownDirection": "down",
                            "dropdownPosition": "right",
                            "expandId": "expandable-toggle",
                            "firstUserColumnIndex": 0,
                            "onCollapse": undefined,
                            "onExpand": undefined,
                            "onRowEdit": undefined,
                            "onSelect": undefined,
                            "onSort": undefined,
                            "rowLabeledBy": "simple-node",
                            "sortBy": undefined,
                          },
                          "header": Object {
                            "formatters": Array [],
                            "label": "Actions",
                            "transforms": Array [
                              [Function],
                              [Function],
                            ],
                          },
                          "property": "actions",
                          "props": Object {
                            "data-key": 3,
                            "data-label": "Actions",
                          },
                        },
                      ]
                    }
                    headerRows={null}
                    onRow={[Function]}
                    onRowClick={[Function]}
                    rowKey="id"
                    rows={
                      Array [
                        Object {
                          "cells": Array [
                            Object {
                              "title": <Tooltip
                                content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                              >
                                <span>
                                  6e74a57
                                </span>
                              </Tooltip>,
                            },
                            Object {
                              "title": <React.Fragment>
                                <CheckCircleIcon
                                  className="pf-u-mr-sm"
                                  color="var(--pf-global--success-color--100)"
                                />
                                Executed
                              </React.Fragment>,
                            },
                            Object {
                              "title": <React.Fragment>
                                <React.Fragment>
                                   
                                  expires in
                                   
                                  <t
                                    ago={true}
                                    calendar={false}
                                    decimal={false}
                                    element={null}
                                    filter={[Function]}
                                    fromNow={true}
                                    interval={60000}
                                    local={false}
                                    onChange={[Function]}
                                    titleFormat=""
                                    toNow={false}
                                    unit={null}
                                    unix={false}
                                    utc={false}
                                    withTitle={false}
                                  >
                                    2020-08-29T03:35:50.147Z
                                  </t>
                                </React.Fragment>
                              </React.Fragment>,
                            },
                            Object {
                              "title": <Context.Provider
                                value={[Function]}
                              >
                                <MockedJobActionsKebab
                                  job={
                                    Object {
                                      "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                      "endpoint": "http://localhost:4000",
                                      "expirationTime": "2020-08-29T03:35:50.147Z",
                                      "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                      "lastUpdate": "2020-08-27T03:35:50.147Z",
                                      "priority": 0,
                                      "processId": "travels",
                                      "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                      "repeatInterval": null,
                                      "repeatLimit": null,
                                      "retries": 0,
                                      "rootProcessId": null,
                                      "scheduledId": "0",
                                      "status": "EXECUTED",
                                    }
                                  }
                                />
                              </Context.Provider>,
                            },
                          ],
                        },
                      ]
                    }
                  >
                    <Component
                      className=""
                      headerRows={null}
                      mappedRows={
                        Array [
                          Object {
                            "actions": Object {
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <Context.Provider
                                value={[Function]}
                              >
                                <MockedJobActionsKebab
                                  job={
                                    Object {
                                      "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                      "endpoint": "http://localhost:4000",
                                      "expirationTime": "2020-08-29T03:35:50.147Z",
                                      "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                      "lastUpdate": "2020-08-27T03:35:50.147Z",
                                      "priority": 0,
                                      "processId": "travels",
                                      "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                      "repeatInterval": null,
                                      "repeatLimit": null,
                                      "retries": 0,
                                      "rootProcessId": null,
                                      "scheduledId": "0",
                                      "status": "EXECUTED",
                                    }
                                  }
                                />
                              </Context.Provider>,
                            },
                            "cells": Array [
                              Object {
                                "title": <Tooltip
                                  content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                >
                                  <span>
                                    6e74a57
                                  </span>
                                </Tooltip>,
                              },
                              Object {
                                "title": <React.Fragment>
                                  <CheckCircleIcon
                                    className="pf-u-mr-sm"
                                    color="var(--pf-global--success-color--100)"
                                  />
                                  Executed
                                </React.Fragment>,
                              },
                              Object {
                                "title": <React.Fragment>
                                  <React.Fragment>
                                     
                                    expires in
                                     
                                    <t
                                      ago={true}
                                      calendar={false}
                                      decimal={false}
                                      element={null}
                                      filter={[Function]}
                                      fromNow={true}
                                      interval={60000}
                                      local={false}
                                      onChange={[Function]}
                                      titleFormat=""
                                      toNow={false}
                                      unit={null}
                                      unix={false}
                                      utc={false}
                                      withTitle={false}
                                    >
                                      2020-08-29T03:35:50.147Z
                                    </t>
                                  </React.Fragment>
                                </React.Fragment>,
                              },
                              Object {
                                "title": <Context.Provider
                                  value={[Function]}
                                >
                                  <MockedJobActionsKebab
                                    job={
                                      Object {
                                        "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                        "endpoint": "http://localhost:4000",
                                        "expirationTime": "2020-08-29T03:35:50.147Z",
                                        "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                        "lastUpdate": "2020-08-27T03:35:50.147Z",
                                        "priority": 0,
                                        "processId": "travels",
                                        "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                        "repeatInterval": null,
                                        "repeatLimit": null,
                                        "retries": 0,
                                        "rootProcessId": null,
                                        "scheduledId": "0",
                                        "status": "EXECUTED",
                                      }
                                    }
                                  />
                                </Context.Provider>,
                              },
                            ],
                            "expiration-time": Object {
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <React.Fragment>
                                <React.Fragment>
                                   
                                  expires in
                                   
                                  <t
                                    ago={true}
                                    calendar={false}
                                    decimal={false}
                                    element={null}
                                    filter={[Function]}
                                    fromNow={true}
                                    interval={60000}
                                    local={false}
                                    onChange={[Function]}
                                    titleFormat=""
                                    toNow={false}
                                    unit={null}
                                    unix={false}
                                    utc={false}
                                    withTitle={false}
                                  >
                                    2020-08-29T03:35:50.147Z
                                  </t>
                                </React.Fragment>
                              </React.Fragment>,
                            },
                            "id": 0,
                            "isExpanded": undefined,
                            "isFirst": true,
                            "isFirstVisible": true,
                            "isHeightAuto": false,
                            "isLast": true,
                            "isLastVisible": true,
                            "job-id": Object {
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <Tooltip
                                content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                              >
                                <span>
                                  6e74a57
                                </span>
                              </Tooltip>,
                            },
                            "status": Object {
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <React.Fragment>
                                <CheckCircleIcon
                                  className="pf-u-mr-sm"
                                  color="var(--pf-global--success-color--100)"
                                />
                                Executed
                              </React.Fragment>,
                            },
                          },
                        ]
                      }
                      onRow={[Function]}
                      rowKey="id"
                      rows={
                        Array [
                          Object {
                            "actions": Object {
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <Context.Provider
                                value={[Function]}
                              >
                                <MockedJobActionsKebab
                                  job={
                                    Object {
                                      "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                      "endpoint": "http://localhost:4000",
                                      "expirationTime": "2020-08-29T03:35:50.147Z",
                                      "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                      "lastUpdate": "2020-08-27T03:35:50.147Z",
                                      "priority": 0,
                                      "processId": "travels",
                                      "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                      "repeatInterval": null,
                                      "repeatLimit": null,
                                      "retries": 0,
                                      "rootProcessId": null,
                                      "scheduledId": "0",
                                      "status": "EXECUTED",
                                    }
                                  }
                                />
                              </Context.Provider>,
                            },
                            "cells": Array [
                              Object {
                                "title": <Tooltip
                                  content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                >
                                  <span>
                                    6e74a57
                                  </span>
                                </Tooltip>,
                              },
                              Object {
                                "title": <React.Fragment>
                                  <CheckCircleIcon
                                    className="pf-u-mr-sm"
                                    color="var(--pf-global--success-color--100)"
                                  />
                                  Executed
                                </React.Fragment>,
                              },
                              Object {
                                "title": <React.Fragment>
                                  <React.Fragment>
                                     
                                    expires in
                                     
                                    <t
                                      ago={true}
                                      calendar={false}
                                      decimal={false}
                                      element={null}
                                      filter={[Function]}
                                      fromNow={true}
                                      interval={60000}
                                      local={false}
                                      onChange={[Function]}
                                      titleFormat=""
                                      toNow={false}
                                      unit={null}
                                      unix={false}
                                      utc={false}
                                      withTitle={false}
                                    >
                                      2020-08-29T03:35:50.147Z
                                    </t>
                                  </React.Fragment>
                                </React.Fragment>,
                              },
                              Object {
                                "title": <Context.Provider
                                  value={[Function]}
                                >
                                  <MockedJobActionsKebab
                                    job={
                                      Object {
                                        "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                        "endpoint": "http://localhost:4000",
                                        "expirationTime": "2020-08-29T03:35:50.147Z",
                                        "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                        "lastUpdate": "2020-08-27T03:35:50.147Z",
                                        "priority": 0,
                                        "processId": "travels",
                                        "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                        "repeatInterval": null,
                                        "repeatLimit": null,
                                        "retries": 0,
                                        "rootProcessId": null,
                                        "scheduledId": "0",
                                        "status": "EXECUTED",
                                      }
                                    }
                                  />
                                </Context.Provider>,
                              },
                            ],
                            "expiration-time": Object {
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <React.Fragment>
                                <React.Fragment>
                                   
                                  expires in
                                   
                                  <t
                                    ago={true}
                                    calendar={false}
                                    decimal={false}
                                    element={null}
                                    filter={[Function]}
                                    fromNow={true}
                                    interval={60000}
                                    local={false}
                                    onChange={[Function]}
                                    titleFormat=""
                                    toNow={false}
                                    unit={null}
                                    unix={false}
                                    utc={false}
                                    withTitle={false}
                                  >
                                    2020-08-29T03:35:50.147Z
                                  </t>
                                </React.Fragment>
                              </React.Fragment>,
                            },
                            "id": 0,
                            "isExpanded": undefined,
                            "isFirst": true,
                            "isFirstVisible": true,
                            "isHeightAuto": false,
                            "isLast": true,
                            "isLastVisible": true,
                            "job-id": Object {
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <Tooltip
                                content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                              >
                                <span>
                                  6e74a57
                                </span>
                              </Tooltip>,
                            },
                            "status": Object {
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <React.Fragment>
                                <CheckCircleIcon
                                  className="pf-u-mr-sm"
                                  color="var(--pf-global--success-color--100)"
                                />
                                Executed
                              </React.Fragment>,
                            },
                          },
                        ]
                      }
                    >
                      <BaseBody
                        className=""
                        columns={
                          Array [
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "canSelectAll": true,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": undefined,
                                "onExpand": undefined,
                                "onRowEdit": undefined,
                                "onSelect": undefined,
                                "onSort": undefined,
                                "rowLabeledBy": "simple-node",
                                "sortBy": undefined,
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Job id",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "job-id",
                              "props": Object {
                                "data-key": 0,
                                "data-label": "Job id",
                              },
                            },
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "canSelectAll": true,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": undefined,
                                "onExpand": undefined,
                                "onRowEdit": undefined,
                                "onSelect": undefined,
                                "onSort": undefined,
                                "rowLabeledBy": "simple-node",
                                "sortBy": undefined,
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Status",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "status",
                              "props": Object {
                                "data-key": 1,
                                "data-label": "Status",
                              },
                            },
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "canSelectAll": true,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": undefined,
                                "onExpand": undefined,
                                "onRowEdit": undefined,
                                "onSelect": undefined,
                                "onSort": undefined,
                                "rowLabeledBy": "simple-node",
                                "sortBy": undefined,
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Expiration time",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "expiration-time",
                              "props": Object {
                                "data-key": 2,
                                "data-label": "Expiration time",
                              },
                            },
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "canSelectAll": true,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": undefined,
                                "onExpand": undefined,
                                "onRowEdit": undefined,
                                "onSelect": undefined,
                                "onSort": undefined,
                                "rowLabeledBy": "simple-node",
                                "sortBy": undefined,
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Actions",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "actions",
                              "props": Object {
                                "data-key": 3,
                                "data-label": "Actions",
                              },
                            },
                          ]
                        }
                        headerRows={null}
                        mappedRows={
                          Array [
                            Object {
                              "actions": Object {
                                "props": Object {
                                  "isVisible": true,
                                },
                                "title": <Context.Provider
                                  value={[Function]}
                                >
                                  <MockedJobActionsKebab
                                    job={
                                      Object {
                                        "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                        "endpoint": "http://localhost:4000",
                                        "expirationTime": "2020-08-29T03:35:50.147Z",
                                        "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                        "lastUpdate": "2020-08-27T03:35:50.147Z",
                                        "priority": 0,
                                        "processId": "travels",
                                        "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                        "repeatInterval": null,
                                        "repeatLimit": null,
                                        "retries": 0,
                                        "rootProcessId": null,
                                        "scheduledId": "0",
                                        "status": "EXECUTED",
                                      }
                                    }
                                  />
                                </Context.Provider>,
                              },
                              "cells": Array [
                                Object {
                                  "title": <Tooltip
                                    content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                  >
                                    <span>
                                      6e74a57
                                    </span>
                                  </Tooltip>,
                                },
                                Object {
                                  "title": <React.Fragment>
                                    <CheckCircleIcon
                                      className="pf-u-mr-sm"
                                      color="var(--pf-global--success-color--100)"
                                    />
                                    Executed
                                  </React.Fragment>,
                                },
                                Object {
                                  "title": <React.Fragment>
                                    <React.Fragment>
                                       
                                      expires in
                                       
                                      <t
                                        ago={true}
                                        calendar={false}
                                        decimal={false}
                                        element={null}
                                        filter={[Function]}
                                        fromNow={true}
                                        interval={60000}
                                        local={false}
                                        onChange={[Function]}
                                        titleFormat=""
                                        toNow={false}
                                        unit={null}
                                        unix={false}
                                        utc={false}
                                        withTitle={false}
                                      >
                                        2020-08-29T03:35:50.147Z
                                      </t>
                                    </React.Fragment>
                                  </React.Fragment>,
                                },
                                Object {
                                  "title": <Context.Provider
                                    value={[Function]}
                                  >
                                    <MockedJobActionsKebab
                                      job={
                                        Object {
                                          "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                          "endpoint": "http://localhost:4000",
                                          "expirationTime": "2020-08-29T03:35:50.147Z",
                                          "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                          "lastUpdate": "2020-08-27T03:35:50.147Z",
                                          "priority": 0,
                                          "processId": "travels",
                                          "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                          "repeatInterval": null,
                                          "repeatLimit": null,
                                          "retries": 0,
                                          "rootProcessId": null,
                                          "scheduledId": "0",
                                          "status": "EXECUTED",
                                        }
                                      }
                                    />
                                  </Context.Provider>,
                                },
                              ],
                              "expiration-time": Object {
                                "props": Object {
                                  "isVisible": true,
                                },
                                "title": <React.Fragment>
                                  <React.Fragment>
                                     
                                    expires in
                                     
                                    <t
                                      ago={true}
                                      calendar={false}
                                      decimal={false}
                                      element={null}
                                      filter={[Function]}
                                      fromNow={true}
                                      interval={60000}
                                      local={false}
                                      onChange={[Function]}
                                      titleFormat=""
                                      toNow={false}
                                      unit={null}
                                      unix={false}
                                      utc={false}
                                      withTitle={false}
                                    >
                                      2020-08-29T03:35:50.147Z
                                    </t>
                                  </React.Fragment>
                                </React.Fragment>,
                              },
                              "id": 0,
                              "isExpanded": undefined,
                              "isFirst": true,
                              "isFirstVisible": true,
                              "isHeightAuto": false,
                              "isLast": true,
                              "isLastVisible": true,
                              "job-id": Object {
                                "props": Object {
                                  "isVisible": true,
                                },
                                "title": <Tooltip
                                  content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                >
                                  <span>
                                    6e74a57
                                  </span>
                                </Tooltip>,
                              },
                              "status": Object {
                                "props": Object {
                                  "isVisible": true,
                                },
                                "title": <React.Fragment>
                                  <CheckCircleIcon
                                    className="pf-u-mr-sm"
                                    color="var(--pf-global--success-color--100)"
                                  />
                                  Executed
                                </React.Fragment>,
                              },
                            },
                          ]
                        }
                        onRow={[Function]}
                        renderers={
                          Object {
                            "body": Object {
                              "cell": [Function],
                              "row": [Function],
                              "wrapper": [Function],
                            },
                            "header": Object {
                              "cell": [Function],
                              "row": "tr",
                              "wrapper": "thead",
                            },
                            "table": "table",
                          }
                        }
                        rowKey="id"
                        rows={
                          Array [
                            Object {
                              "actions": Object {
                                "props": Object {
                                  "isVisible": true,
                                },
                                "title": <Context.Provider
                                  value={[Function]}
                                >
                                  <MockedJobActionsKebab
                                    job={
                                      Object {
                                        "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                        "endpoint": "http://localhost:4000",
                                        "expirationTime": "2020-08-29T03:35:50.147Z",
                                        "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                        "lastUpdate": "2020-08-27T03:35:50.147Z",
                                        "priority": 0,
                                        "processId": "travels",
                                        "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                        "repeatInterval": null,
                                        "repeatLimit": null,
                                        "retries": 0,
                                        "rootProcessId": null,
                                        "scheduledId": "0",
                                        "status": "EXECUTED",
                                      }
                                    }
                                  />
                                </Context.Provider>,
                              },
                              "cells": Array [
                                Object {
                                  "title": <Tooltip
                                    content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                  >
                                    <span>
                                      6e74a57
                                    </span>
                                  </Tooltip>,
                                },
                                Object {
                                  "title": <React.Fragment>
                                    <CheckCircleIcon
                                      className="pf-u-mr-sm"
                                      color="var(--pf-global--success-color--100)"
                                    />
                                    Executed
                                  </React.Fragment>,
                                },
                                Object {
                                  "title": <React.Fragment>
                                    <React.Fragment>
                                       
                                      expires in
                                       
                                      <t
                                        ago={true}
                                        calendar={false}
                                        decimal={false}
                                        element={null}
                                        filter={[Function]}
                                        fromNow={true}
                                        interval={60000}
                                        local={false}
                                        onChange={[Function]}
                                        titleFormat=""
                                        toNow={false}
                                        unit={null}
                                        unix={false}
                                        utc={false}
                                        withTitle={false}
                                      >
                                        2020-08-29T03:35:50.147Z
                                      </t>
                                    </React.Fragment>
                                  </React.Fragment>,
                                },
                                Object {
                                  "title": <Context.Provider
                                    value={[Function]}
                                  >
                                    <MockedJobActionsKebab
                                      job={
                                        Object {
                                          "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                          "endpoint": "http://localhost:4000",
                                          "expirationTime": "2020-08-29T03:35:50.147Z",
                                          "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                          "lastUpdate": "2020-08-27T03:35:50.147Z",
                                          "priority": 0,
                                          "processId": "travels",
                                          "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                          "repeatInterval": null,
                                          "repeatLimit": null,
                                          "retries": 0,
                                          "rootProcessId": null,
                                          "scheduledId": "0",
                                          "status": "EXECUTED",
                                        }
                                      }
                                    />
                                  </Context.Provider>,
                                },
                              ],
                              "expiration-time": Object {
                                "props": Object {
                                  "isVisible": true,
                                },
                                "title": <React.Fragment>
                                  <React.Fragment>
                                     
                                    expires in
                                     
                                    <t
                                      ago={true}
                                      calendar={false}
                                      decimal={false}
                                      element={null}
                                      filter={[Function]}
                                      fromNow={true}
                                      interval={60000}
                                      local={false}
                                      onChange={[Function]}
                                      titleFormat=""
                                      toNow={false}
                                      unit={null}
                                      unix={false}
                                      utc={false}
                                      withTitle={false}
                                    >
                                      2020-08-29T03:35:50.147Z
                                    </t>
                                  </React.Fragment>
                                </React.Fragment>,
                              },
                              "id": 0,
                              "isExpanded": undefined,
                              "isFirst": true,
                              "isFirstVisible": true,
                              "isHeightAuto": false,
                              "isLast": true,
                              "isLastVisible": true,
                              "job-id": Object {
                                "props": Object {
                                  "isVisible": true,
                                },
                                "title": <Tooltip
                                  content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                >
                                  <span>
                                    6e74a57
                                  </span>
                                </Tooltip>,
                              },
                              "status": Object {
                                "props": Object {
                                  "isVisible": true,
                                },
                                "title": <React.Fragment>
                                  <CheckCircleIcon
                                    className="pf-u-mr-sm"
                                    color="var(--pf-global--success-color--100)"
                                  />
                                  Executed
                                </React.Fragment>,
                              },
                            },
                          ]
                        }
                      >
                        <BodyWrapper
                          className=""
                          headerRows={null}
                          mappedRows={
                            Array [
                              Object {
                                "actions": Object {
                                  "props": Object {
                                    "isVisible": true,
                                  },
                                  "title": <Context.Provider
                                    value={[Function]}
                                  >
                                    <MockedJobActionsKebab
                                      job={
                                        Object {
                                          "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                          "endpoint": "http://localhost:4000",
                                          "expirationTime": "2020-08-29T03:35:50.147Z",
                                          "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                          "lastUpdate": "2020-08-27T03:35:50.147Z",
                                          "priority": 0,
                                          "processId": "travels",
                                          "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                          "repeatInterval": null,
                                          "repeatLimit": null,
                                          "retries": 0,
                                          "rootProcessId": null,
                                          "scheduledId": "0",
                                          "status": "EXECUTED",
                                        }
                                      }
                                    />
                                  </Context.Provider>,
                                },
                                "cells": Array [
                                  Object {
                                    "title": <Tooltip
                                      content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                    >
                                      <span>
                                        6e74a57
                                      </span>
                                    </Tooltip>,
                                  },
                                  Object {
                                    "title": <React.Fragment>
                                      <CheckCircleIcon
                                        className="pf-u-mr-sm"
                                        color="var(--pf-global--success-color--100)"
                                      />
                                      Executed
                                    </React.Fragment>,
                                  },
                                  Object {
                                    "title": <React.Fragment>
                                      <React.Fragment>
                                         
                                        expires in
                                         
                                        <t
                                          ago={true}
                                          calendar={false}
                                          decimal={false}
                                          element={null}
                                          filter={[Function]}
                                          fromNow={true}
                                          interval={60000}
                                          local={false}
                                          onChange={[Function]}
                                          titleFormat=""
                                          toNow={false}
                                          unit={null}
                                          unix={false}
                                          utc={false}
                                          withTitle={false}
                                        >
                                          2020-08-29T03:35:50.147Z
                                        </t>
                                      </React.Fragment>
                                    </React.Fragment>,
                                  },
                                  Object {
                                    "title": <Context.Provider
                                      value={[Function]}
                                    >
                                      <MockedJobActionsKebab
                                        job={
                                          Object {
                                            "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                            "endpoint": "http://localhost:4000",
                                            "expirationTime": "2020-08-29T03:35:50.147Z",
                                            "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                            "lastUpdate": "2020-08-27T03:35:50.147Z",
                                            "priority": 0,
                                            "processId": "travels",
                                            "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                            "repeatInterval": null,
                                            "repeatLimit": null,
                                            "retries": 0,
                                            "rootProcessId": null,
                                            "scheduledId": "0",
                                            "status": "EXECUTED",
                                          }
                                        }
                                      />
                                    </Context.Provider>,
                                  },
                                ],
                                "expiration-time": Object {
                                  "props": Object {
                                    "isVisible": true,
                                  },
                                  "title": <React.Fragment>
                                    <React.Fragment>
                                       
                                      expires in
                                       
                                      <t
                                        ago={true}
                                        calendar={false}
                                        decimal={false}
                                        element={null}
                                        filter={[Function]}
                                        fromNow={true}
                                        interval={60000}
                                        local={false}
                                        onChange={[Function]}
                                        titleFormat=""
                                        toNow={false}
                                        unit={null}
                                        unix={false}
                                        utc={false}
                                        withTitle={false}
                                      >
                                        2020-08-29T03:35:50.147Z
                                      </t>
                                    </React.Fragment>
                                  </React.Fragment>,
                                },
                                "id": 0,
                                "isExpanded": undefined,
                                "isFirst": true,
                                "isFirstVisible": true,
                                "isHeightAuto": false,
                                "isLast": true,
                                "isLastVisible": true,
                                "job-id": Object {
                                  "props": Object {
                                    "isVisible": true,
                                  },
                                  "title": <Tooltip
                                    content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                  >
                                    <span>
                                      6e74a57
                                    </span>
                                  </Tooltip>,
                                },
                                "status": Object {
                                  "props": Object {
                                    "isVisible": true,
                                  },
                                  "title": <React.Fragment>
                                    <CheckCircleIcon
                                      className="pf-u-mr-sm"
                                      color="var(--pf-global--success-color--100)"
                                    />
                                    Executed
                                  </React.Fragment>,
                                },
                              },
                            ]
                          }
                        >
                          <tbody
                            className=""
                          >
                            <BodyRow
                              columns={
                                Array [
                                  Object {
                                    "cell": Object {
                                      "formatters": Array [
                                        [Function],
                                      ],
                                      "transforms": Array [
                                        [Function],
                                      ],
                                    },
                                    "data": undefined,
                                    "extraParams": Object {
                                      "actionResolver": undefined,
                                      "actions": undefined,
                                      "allRowsSelected": false,
                                      "areActionsDisabled": undefined,
                                      "canSelectAll": true,
                                      "contentId": "expanded-content",
                                      "dropdownDirection": "down",
                                      "dropdownPosition": "right",
                                      "expandId": "expandable-toggle",
                                      "firstUserColumnIndex": 0,
                                      "onCollapse": undefined,
                                      "onExpand": undefined,
                                      "onRowEdit": undefined,
                                      "onSelect": undefined,
                                      "onSort": undefined,
                                      "rowLabeledBy": "simple-node",
                                      "sortBy": undefined,
                                    },
                                    "header": Object {
                                      "formatters": Array [],
                                      "label": "Job id",
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "property": "job-id",
                                    "props": Object {
                                      "data-key": 0,
                                      "data-label": "Job id",
                                    },
                                  },
                                  Object {
                                    "cell": Object {
                                      "formatters": Array [
                                        [Function],
                                      ],
                                      "transforms": Array [
                                        [Function],
                                      ],
                                    },
                                    "data": undefined,
                                    "extraParams": Object {
                                      "actionResolver": undefined,
                                      "actions": undefined,
                                      "allRowsSelected": false,
                                      "areActionsDisabled": undefined,
                                      "canSelectAll": true,
                                      "contentId": "expanded-content",
                                      "dropdownDirection": "down",
                                      "dropdownPosition": "right",
                                      "expandId": "expandable-toggle",
                                      "firstUserColumnIndex": 0,
                                      "onCollapse": undefined,
                                      "onExpand": undefined,
                                      "onRowEdit": undefined,
                                      "onSelect": undefined,
                                      "onSort": undefined,
                                      "rowLabeledBy": "simple-node",
                                      "sortBy": undefined,
                                    },
                                    "header": Object {
                                      "formatters": Array [],
                                      "label": "Status",
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "property": "status",
                                    "props": Object {
                                      "data-key": 1,
                                      "data-label": "Status",
                                    },
                                  },
                                  Object {
                                    "cell": Object {
                                      "formatters": Array [
                                        [Function],
                                      ],
                                      "transforms": Array [
                                        [Function],
                                      ],
                                    },
                                    "data": undefined,
                                    "extraParams": Object {
                                      "actionResolver": undefined,
                                      "actions": undefined,
                                      "allRowsSelected": false,
                                      "areActionsDisabled": undefined,
                                      "canSelectAll": true,
                                      "contentId": "expanded-content",
                                      "dropdownDirection": "down",
                                      "dropdownPosition": "right",
                                      "expandId": "expandable-toggle",
                                      "firstUserColumnIndex": 0,
                                      "onCollapse": undefined,
                                      "onExpand": undefined,
                                      "onRowEdit": undefined,
                                      "onSelect": undefined,
                                      "onSort": undefined,
                                      "rowLabeledBy": "simple-node",
                                      "sortBy": undefined,
                                    },
                                    "header": Object {
                                      "formatters": Array [],
                                      "label": "Expiration time",
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "property": "expiration-time",
                                    "props": Object {
                                      "data-key": 2,
                                      "data-label": "Expiration time",
                                    },
                                  },
                                  Object {
                                    "cell": Object {
                                      "formatters": Array [
                                        [Function],
                                      ],
                                      "transforms": Array [
                                        [Function],
                                      ],
                                    },
                                    "data": undefined,
                                    "extraParams": Object {
                                      "actionResolver": undefined,
                                      "actions": undefined,
                                      "allRowsSelected": false,
                                      "areActionsDisabled": undefined,
                                      "canSelectAll": true,
                                      "contentId": "expanded-content",
                                      "dropdownDirection": "down",
                                      "dropdownPosition": "right",
                                      "expandId": "expandable-toggle",
                                      "firstUserColumnIndex": 0,
                                      "onCollapse": undefined,
                                      "onExpand": undefined,
                                      "onRowEdit": undefined,
                                      "onSelect": undefined,
                                      "onSort": undefined,
                                      "rowLabeledBy": "simple-node",
                                      "sortBy": undefined,
                                    },
                                    "header": Object {
                                      "formatters": Array [],
                                      "label": "Actions",
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "property": "actions",
                                    "props": Object {
                                      "data-key": 3,
                                      "data-label": "Actions",
                                    },
                                  },
                                ]
                              }
                              key="0-row"
                              onRow={[Function]}
                              renderers={
                                Object {
                                  "cell": [Function],
                                  "row": [Function],
                                  "wrapper": [Function],
                                }
                              }
                              rowData={
                                Object {
                                  "actions": Object {
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": <Context.Provider
                                      value={[Function]}
                                    >
                                      <MockedJobActionsKebab
                                        job={
                                          Object {
                                            "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                            "endpoint": "http://localhost:4000",
                                            "expirationTime": "2020-08-29T03:35:50.147Z",
                                            "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                            "lastUpdate": "2020-08-27T03:35:50.147Z",
                                            "priority": 0,
                                            "processId": "travels",
                                            "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                            "repeatInterval": null,
                                            "repeatLimit": null,
                                            "retries": 0,
                                            "rootProcessId": null,
                                            "scheduledId": "0",
                                            "status": "EXECUTED",
                                          }
                                        }
                                      />
                                    </Context.Provider>,
                                  },
                                  "cells": Array [
                                    Object {
                                      "title": <Tooltip
                                        content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                      >
                                        <span>
                                          6e74a57
                                        </span>
                                      </Tooltip>,
                                    },
                                    Object {
                                      "title": <React.Fragment>
                                        <CheckCircleIcon
                                          className="pf-u-mr-sm"
                                          color="var(--pf-global--success-color--100)"
                                        />
                                        Executed
                                      </React.Fragment>,
                                    },
                                    Object {
                                      "title": <React.Fragment>
                                        <React.Fragment>
                                           
                                          expires in
                                           
                                          <t
                                            ago={true}
                                            calendar={false}
                                            decimal={false}
                                            element={null}
                                            filter={[Function]}
                                            fromNow={true}
                                            interval={60000}
                                            local={false}
                                            onChange={[Function]}
                                            titleFormat=""
                                            toNow={false}
                                            unit={null}
                                            unix={false}
                                            utc={false}
                                            withTitle={false}
                                          >
                                            2020-08-29T03:35:50.147Z
                                          </t>
                                        </React.Fragment>
                                      </React.Fragment>,
                                    },
                                    Object {
                                      "title": <Context.Provider
                                        value={[Function]}
                                      >
                                        <MockedJobActionsKebab
                                          job={
                                            Object {
                                              "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                              "endpoint": "http://localhost:4000",
                                              "expirationTime": "2020-08-29T03:35:50.147Z",
                                              "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                              "lastUpdate": "2020-08-27T03:35:50.147Z",
                                              "priority": 0,
                                              "processId": "travels",
                                              "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                              "repeatInterval": null,
                                              "repeatLimit": null,
                                              "retries": 0,
                                              "rootProcessId": null,
                                              "scheduledId": "0",
                                              "status": "EXECUTED",
                                            }
                                          }
                                        />
                                      </Context.Provider>,
                                    },
                                  ],
                                  "expiration-time": Object {
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": <React.Fragment>
                                      <React.Fragment>
                                         
                                        expires in
                                         
                                        <t
                                          ago={true}
                                          calendar={false}
                                          decimal={false}
                                          element={null}
                                          filter={[Function]}
                                          fromNow={true}
                                          interval={60000}
                                          local={false}
                                          onChange={[Function]}
                                          titleFormat=""
                                          toNow={false}
                                          unit={null}
                                          unix={false}
                                          utc={false}
                                          withTitle={false}
                                        >
                                          2020-08-29T03:35:50.147Z
                                        </t>
                                      </React.Fragment>
                                    </React.Fragment>,
                                  },
                                  "id": 0,
                                  "isExpanded": undefined,
                                  "isFirst": true,
                                  "isFirstVisible": true,
                                  "isHeightAuto": false,
                                  "isLast": true,
                                  "isLastVisible": true,
                                  "job-id": Object {
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": <Tooltip
                                      content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                    >
                                      <span>
                                        6e74a57
                                      </span>
                                    </Tooltip>,
                                  },
                                  "status": Object {
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": <React.Fragment>
                                      <CheckCircleIcon
                                        className="pf-u-mr-sm"
                                        color="var(--pf-global--success-color--100)"
                                      />
                                      Executed
                                    </React.Fragment>,
                                  },
                                }
                              }
                              rowIndex={0}
                              rowKey="0-row"
                            >
                              <RowWrapper
                                className=""
                                onMouseDown={[Function]}
                                row={
                                  Object {
                                    "actions": Object {
                                      "props": Object {
                                        "isVisible": true,
                                      },
                                      "title": <Context.Provider
                                        value={[Function]}
                                      >
                                        <MockedJobActionsKebab
                                          job={
                                            Object {
                                              "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                              "endpoint": "http://localhost:4000",
                                              "expirationTime": "2020-08-29T03:35:50.147Z",
                                              "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                              "lastUpdate": "2020-08-27T03:35:50.147Z",
                                              "priority": 0,
                                              "processId": "travels",
                                              "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                              "repeatInterval": null,
                                              "repeatLimit": null,
                                              "retries": 0,
                                              "rootProcessId": null,
                                              "scheduledId": "0",
                                              "status": "EXECUTED",
                                            }
                                          }
                                        />
                                      </Context.Provider>,
                                    },
                                    "cells": Array [
                                      Object {
                                        "title": <Tooltip
                                          content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                        >
                                          <span>
                                            6e74a57
                                          </span>
                                        </Tooltip>,
                                      },
                                      Object {
                                        "title": <React.Fragment>
                                          <CheckCircleIcon
                                            className="pf-u-mr-sm"
                                            color="var(--pf-global--success-color--100)"
                                          />
                                          Executed
                                        </React.Fragment>,
                                      },
                                      Object {
                                        "title": <React.Fragment>
                                          <React.Fragment>
                                             
                                            expires in
                                             
                                            <t
                                              ago={true}
                                              calendar={false}
                                              decimal={false}
                                              element={null}
                                              filter={[Function]}
                                              fromNow={true}
                                              interval={60000}
                                              local={false}
                                              onChange={[Function]}
                                              titleFormat=""
                                              toNow={false}
                                              unit={null}
                                              unix={false}
                                              utc={false}
                                              withTitle={false}
                                            >
                                              2020-08-29T03:35:50.147Z
                                            </t>
                                          </React.Fragment>
                                        </React.Fragment>,
                                      },
                                      Object {
                                        "title": <Context.Provider
                                          value={[Function]}
                                        >
                                          <MockedJobActionsKebab
                                            job={
                                              Object {
                                                "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                                "endpoint": "http://localhost:4000",
                                                "expirationTime": "2020-08-29T03:35:50.147Z",
                                                "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                                "lastUpdate": "2020-08-27T03:35:50.147Z",
                                                "priority": 0,
                                                "processId": "travels",
                                                "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                                "repeatInterval": null,
                                                "repeatLimit": null,
                                                "retries": 0,
                                                "rootProcessId": null,
                                                "scheduledId": "0",
                                                "status": "EXECUTED",
                                              }
                                            }
                                          />
                                        </Context.Provider>,
                                      },
                                    ],
                                    "expiration-time": Object {
                                      "props": Object {
                                        "isVisible": true,
                                      },
                                      "title": <React.Fragment>
                                        <React.Fragment>
                                           
                                          expires in
                                           
                                          <t
                                            ago={true}
                                            calendar={false}
                                            decimal={false}
                                            element={null}
                                            filter={[Function]}
                                            fromNow={true}
                                            interval={60000}
                                            local={false}
                                            onChange={[Function]}
                                            titleFormat=""
                                            toNow={false}
                                            unit={null}
                                            unix={false}
                                            utc={false}
                                            withTitle={false}
                                          >
                                            2020-08-29T03:35:50.147Z
                                          </t>
                                        </React.Fragment>
                                      </React.Fragment>,
                                    },
                                    "id": 0,
                                    "isExpanded": undefined,
                                    "isFirst": true,
                                    "isFirstVisible": true,
                                    "isHeightAuto": false,
                                    "isLast": true,
                                    "isLastVisible": true,
                                    "job-id": Object {
                                      "props": Object {
                                        "isVisible": true,
                                      },
                                      "title": <Tooltip
                                        content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                      >
                                        <span>
                                          6e74a57
                                        </span>
                                      </Tooltip>,
                                    },
                                    "status": Object {
                                      "props": Object {
                                        "isVisible": true,
                                      },
                                      "title": <React.Fragment>
                                        <CheckCircleIcon
                                          className="pf-u-mr-sm"
                                          color="var(--pf-global--success-color--100)"
                                        />
                                        Executed
                                      </React.Fragment>,
                                    },
                                  }
                                }
                                rowProps={
                                  Object {
                                    "rowIndex": 0,
                                    "rowKey": "0-row",
                                  }
                                }
                              >
                                <tr
                                  className=""
                                  data-ouia-component-id={9}
                                  data-ouia-component-type="PF4/TableRow"
                                  data-ouia-safe={true}
                                  hidden={false}
                                  onMouseDown={[Function]}
                                >
                                  <BodyCell
                                    data-key={0}
                                    data-label="Job id"
                                    isVisible={true}
                                    key="col-0-row-0"
                                  >
                                    <td
                                      className=""
                                      data-key={0}
                                      data-label="Job id"
                                      onMouseEnter={[Function]}
                                    >
                                      <Tooltip
                                        content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                      >
                                        <Popper
                                          appendTo={[Function]}
                                          distance={15}
                                          enableFlip={true}
                                          flipBehavior={
                                            Array [
                                              "top",
                                              "right",
                                              "bottom",
                                              "left",
                                              "top",
                                              "right",
                                              "bottom",
                                            ]
                                          }
                                          isVisible={false}
                                          onBlur={[Function]}
                                          onDocumentClick={false}
                                          onDocumentKeyDown={[Function]}
                                          onFocus={[Function]}
                                          onMouseEnter={[Function]}
                                          onMouseLeave={[Function]}
                                          onTriggerEnter={[Function]}
                                          placement="top"
                                          popper={
                                            <div
                                              className="pf-c-tooltip"
                                              id="pf-tooltip-2"
                                              role="tooltip"
                                              style={
                                                Object {
                                                  "maxWidth": null,
                                                  "opacity": 0,
                                                  "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                                }
                                              }
                                            >
                                              <TooltipArrow />
                                              <TooltipContent
                                                isLeftAligned={false}
                                              >
                                                6e74a570-31c8-4020-bd70-19be2cb625f3_0
                                              </TooltipContent>
                                            </div>
                                          }
                                          popperMatchesTriggerWidth={false}
                                          positionModifiers={
                                            Object {
                                              "bottom": "pf-m-bottom",
                                              "left": "pf-m-left",
                                              "right": "pf-m-right",
                                              "top": "pf-m-top",
                                            }
                                          }
                                          trigger={
                                            <span
                                              aria-describedby="pf-tooltip-2"
                                            >
                                              6e74a57
                                            </span>
                                          }
                                          zIndex={9999}
                                        >
                                          <FindRefWrapper
                                            onFoundRef={[Function]}
                                          >
                                            <span
                                              aria-describedby="pf-tooltip-2"
                                            >
                                              6e74a57
                                            </span>
                                          </FindRefWrapper>
                                        </Popper>
                                      </Tooltip>
                                    </td>
                                  </BodyCell>
                                  <BodyCell
                                    data-key={1}
                                    data-label="Status"
                                    isVisible={true}
                                    key="col-1-row-0"
                                  >
                                    <td
                                      className=""
                                      data-key={1}
                                      data-label="Status"
                                      onMouseEnter={[Function]}
                                    >
                                      <CheckCircleIcon
                                        className="pf-u-mr-sm"
                                        color="var(--pf-global--success-color--100)"
                                      >
                                        <MockedComponent />
                                      </CheckCircleIcon>
                                      Executed
                                    </td>
                                  </BodyCell>
                                  <BodyCell
                                    data-key={2}
                                    data-label="Expiration time"
                                    isVisible={true}
                                    key="col-2-row-0"
                                  >
                                    <td
                                      className=""
                                      data-key={2}
                                      data-label="Expiration time"
                                      onMouseEnter={[Function]}
                                    >
                                       
                                      expires in
                                       
                                      <t
                                        ago={true}
                                        calendar={false}
                                        decimal={false}
                                        element={null}
                                        filter={[Function]}
                                        fromNow={true}
                                        interval={60000}
                                        local={false}
                                        onChange={[Function]}
                                        titleFormat=""
                                        toNow={false}
                                        unit={null}
                                        unix={false}
                                        utc={false}
                                        withTitle={false}
                                      >
                                        <time
                                          dateTime={"2020-08-29T03:35:50.147Z"}
                                        >
                                          3 months
                                        </time>
                                      </t>
                                    </td>
                                  </BodyCell>
                                  <BodyCell
                                    data-key={3}
                                    data-label="Actions"
                                    isVisible={true}
                                    key="col-3-row-0"
                                  >
                                    <td
                                      className=""
                                      data-key={3}
                                      data-label="Actions"
                                      onMouseEnter={[Function]}
                                    >
                                      <MockedJobActionsKebab
                                        job={
                                          Object {
                                            "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                            "endpoint": "http://localhost:4000",
                                            "expirationTime": "2020-08-29T03:35:50.147Z",
                                            "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                            "lastUpdate": "2020-08-27T03:35:50.147Z",
                                            "priority": 0,
                                            "processId": "travels",
                                            "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                            "repeatInterval": null,
                                            "repeatLimit": null,
                                            "retries": 0,
                                            "rootProcessId": null,
                                            "scheduledId": "0",
                                            "status": "EXECUTED",
                                          }
                                        }
                                      />
                                    </td>
                                  </BodyCell>
                                </tr>
                              </RowWrapper>
                            </BodyRow>
                          </tbody>
                        </BodyWrapper>
                      </BaseBody>
                    </Component>
                  </ContextBody>
                </Component>
              </table>
            </Provider>
          </Table>
        </div>
      </CardBody>
    </article>
  </Card>
</ProcessDetailsJobsPanel>
`;
