// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProcessDefinition list tests render ProcessDefinition list - table 1`] = `
<ProcessDefinitionList
  driver={MockedProcessDefinitionListDriver {}}
  isEnvelopeConnectedToChannel={true}
>
  <div
    data-ouia-component-type="process-definition-list"
    data-ouia-safe={false}
  >
    <ProcessDefinitionListToolbar
      applyFilter={[Function]}
      filterProcessNames={Array []}
      setFilterProcessNames={[Function]}
    >
      <Toolbar
        className="pf-m-toggle-group-container"
        clearAllFilters={[Function]}
        clearFiltersButtonText="Reset to default"
        collapseListedFiltersBreakpoint="xl"
        data-ouia-component-type="process-definition-list-toolbar"
        data-ouia-safe={true}
        id="process-definition-list-with-filter"
      >
        <div
          className="pf-c-toolbar pf-m-toggle-group-container"
          data-ouia-component-id="OUIA-Generated-Toolbar-2"
          data-ouia-component-type="process-definition-list-toolbar"
          data-ouia-safe={true}
          id="process-definition-list-with-filter"
        >
          <ToolbarContent
            isExpanded={false}
            showClearFiltersButton={false}
          >
            <div
              className="pf-c-toolbar__content"
            >
              <div
                className="pf-c-toolbar__content-section"
              >
                <ToolbarToggleGroup
                  breakpoint="xl"
                  toggleIcon={
                    <FilterIcon
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                    />
                  }
                >
                  <div
                    className="pf-c-toolbar__group pf-m-toggle-group pf-m-show-on-xl"
                  >
                    <div
                      className="pf-c-toolbar__toggle"
                    >
                      <Button
                        aria-controls="process-definition-list-with-filter-expandable-content-2"
                        aria-haspopup={false}
                        aria-label="Show Filters"
                        onClick={[Function]}
                        variant="plain"
                      >
                        <ButtonBase
                          aria-controls="process-definition-list-with-filter-expandable-content-2"
                          aria-haspopup={false}
                          aria-label="Show Filters"
                          innerRef={null}
                          onClick={[Function]}
                          variant="plain"
                        >
                          <button
                            aria-controls="process-definition-list-with-filter-expandable-content-2"
                            aria-disabled={false}
                            aria-haspopup={false}
                            aria-label="Show Filters"
                            className="pf-c-button pf-m-plain"
                            data-ouia-component-id="OUIA-Generated-Button-plain-3"
                            data-ouia-component-type="PF4/Button"
                            data-ouia-safe={true}
                            disabled={false}
                            onClick={[Function]}
                            role={null}
                            type="button"
                          >
                            <FilterIcon
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                            >
                              <svg
                                aria-hidden={true}
                                aria-labelledby={null}
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style={
                                  Object {
                                    "verticalAlign": "-0.125em",
                                  }
                                }
                                viewBox="0 0 512 512"
                                width="1em"
                              >
                                <path
                                  d="M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z"
                                />
                              </svg>
                            </FilterIcon>
                          </button>
                        </ButtonBase>
                      </Button>
                    </div>
                    <ForwardRef
                      variant="filter-group"
                    >
                      <ToolbarGroupWithRef
                        innerRef={null}
                        variant="filter-group"
                      >
                        <div
                          className="pf-c-toolbar__group pf-m-filter-group"
                        >
                          <ToolbarFilter
                            categoryName="Process name"
                            chips={Array []}
                            deleteChip={[Function]}
                            key="input-process-name"
                            showToolbarItem={true}
                          >
                            <ToolbarItem>
                              <div
                                className="pf-c-toolbar__item"
                              >
                                <InputGroup>
                                  <div
                                    className="pf-c-input-group"
                                  >
                                    <TextInput
                                      aria-label="process name"
                                      id="processName"
                                      name="processName"
                                      onChange={[Function]}
                                      onKeyPress={[Function]}
                                      placeholder="Filter by process name"
                                      type="search"
                                      value=""
                                    >
                                      <TextInputBase
                                        aria-label="process name"
                                        className=""
                                        id="processName"
                                        innerRef={null}
                                        isDisabled={false}
                                        isLeftTruncated={false}
                                        isReadOnly={false}
                                        isRequired={false}
                                        name="processName"
                                        onChange={[Function]}
                                        onKeyPress={[Function]}
                                        ouiaSafe={true}
                                        placeholder="Filter by process name"
                                        type="search"
                                        validated="default"
                                        value=""
                                      >
                                        <input
                                          aria-invalid={false}
                                          aria-label="process name"
                                          className="pf-c-form-control"
                                          data-ouia-component-id="OUIA-Generated-TextInputBase-3"
                                          data-ouia-component-type="PF4/TextInput"
                                          data-ouia-safe={true}
                                          disabled={false}
                                          id="processName"
                                          name="processName"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onKeyPress={[Function]}
                                          placeholder="Filter by process name"
                                          readOnly={false}
                                          required={false}
                                          type="search"
                                          value=""
                                        />
                                      </TextInputBase>
                                    </TextInput>
                                  </div>
                                </InputGroup>
                              </div>
                            </ToolbarItem>
                          </ToolbarFilter>
                          <ToolbarItem>
                            <div
                              className="pf-c-toolbar__item"
                            >
                              <Button
                                id="apply-filter"
                                onClick={[Function]}
                                variant="primary"
                              >
                                <ButtonBase
                                  id="apply-filter"
                                  innerRef={null}
                                  onClick={[Function]}
                                  variant="primary"
                                >
                                  <button
                                    aria-disabled={false}
                                    aria-label={null}
                                    className="pf-c-button pf-m-primary"
                                    data-ouia-component-id="OUIA-Generated-Button-primary-2"
                                    data-ouia-component-type="PF4/Button"
                                    data-ouia-safe={true}
                                    disabled={false}
                                    id="apply-filter"
                                    onClick={[Function]}
                                    role={null}
                                    type="button"
                                  >
                                    Apply Filter
                                  </button>
                                </ButtonBase>
                              </Button>
                            </div>
                          </ToolbarItem>
                        </div>
                      </ToolbarGroupWithRef>
                    </ForwardRef>
                  </div>
                </ToolbarToggleGroup>
                <ForwardRef
                  variant="icon-button-group"
                >
                  <ToolbarGroupWithRef
                    innerRef={null}
                    variant="icon-button-group"
                  >
                    <div
                      className="pf-c-toolbar__group pf-m-icon-button-group"
                    >
                      <ToolbarItem>
                        <div
                          className="pf-c-toolbar__item"
                        >
                          <Tooltip
                            content="Refresh"
                          >
                            <Popper
                              appendTo={[Function]}
                              distance={15}
                              enableFlip={true}
                              flipBehavior={
                                Array [
                                  "top",
                                  "right",
                                  "bottom",
                                  "left",
                                  "top",
                                  "right",
                                  "bottom",
                                ]
                              }
                              isVisible={false}
                              onBlur={[Function]}
                              onDocumentClick={false}
                              onDocumentKeyDown={[Function]}
                              onFocus={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onTriggerEnter={[Function]}
                              placement="top"
                              popper={
                                <div
                                  className="pf-c-tooltip"
                                  id="pf-tooltip-2"
                                  role="tooltip"
                                  style={
                                    Object {
                                      "maxWidth": null,
                                      "opacity": 0,
                                      "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                    }
                                  }
                                >
                                  <TooltipArrow />
                                  <TooltipContent
                                    isLeftAligned={false}
                                  >
                                    Refresh
                                  </TooltipContent>
                                </div>
                              }
                              popperMatchesTriggerWidth={false}
                              positionModifiers={
                                Object {
                                  "bottom": "pf-m-bottom",
                                  "left": "pf-m-left",
                                  "right": "pf-m-right",
                                  "top": "pf-m-top",
                                }
                              }
                              trigger={
                                <Button
                                  id="refresh"
                                  onClick={[Function]}
                                  variant="plain"
                                >
                                  <SyncIcon
                                    color="currentColor"
                                    noVerticalAlign={false}
                                    size="sm"
                                  />
                                </Button>
                              }
                              zIndex={9999}
                            >
                              <FindRefWrapper
                                onFoundRef={[Function]}
                              >
                                <Button
                                  id="refresh"
                                  onClick={[Function]}
                                  variant="plain"
                                >
                                  <ButtonBase
                                    id="refresh"
                                    innerRef={null}
                                    onClick={[Function]}
                                    variant="plain"
                                  >
                                    <button
                                      aria-disabled={false}
                                      aria-label={null}
                                      className="pf-c-button pf-m-plain"
                                      data-ouia-component-id="OUIA-Generated-Button-plain-4"
                                      data-ouia-component-type="PF4/Button"
                                      data-ouia-safe={true}
                                      disabled={false}
                                      id="refresh"
                                      onClick={[Function]}
                                      role={null}
                                      type="button"
                                    >
                                      <SyncIcon
                                        color="currentColor"
                                        noVerticalAlign={false}
                                        size="sm"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          aria-labelledby={null}
                                          fill="currentColor"
                                          height="1em"
                                          role="img"
                                          style={
                                            Object {
                                              "verticalAlign": "-0.125em",
                                            }
                                          }
                                          viewBox="0 0 512 512"
                                          width="1em"
                                        >
                                          <path
                                            d="M440.65 12.57l4 82.77A247.16 247.16 0 0 0 255.83 8C134.73 8 33.91 94.92 12.29 209.82A12 12 0 0 0 24.09 224h49.05a12 12 0 0 0 11.67-9.26 175.91 175.91 0 0 1 317-56.94l-101.46-4.86a12 12 0 0 0-12.57 12v47.41a12 12 0 0 0 12 12H500a12 12 0 0 0 12-12V12a12 12 0 0 0-12-12h-47.37a12 12 0 0 0-11.98 12.57zM255.83 432a175.61 175.61 0 0 1-146-77.8l101.8 4.87a12 12 0 0 0 12.57-12v-47.4a12 12 0 0 0-12-12H12a12 12 0 0 0-12 12V500a12 12 0 0 0 12 12h47.35a12 12 0 0 0 12-12.6l-4.15-82.57A247.17 247.17 0 0 0 255.83 504c121.11 0 221.93-86.92 243.55-201.82a12 12 0 0 0-11.8-14.18h-49.05a12 12 0 0 0-11.67 9.26A175.86 175.86 0 0 1 255.83 432z"
                                          />
                                        </svg>
                                      </SyncIcon>
                                    </button>
                                  </ButtonBase>
                                </Button>
                              </FindRefWrapper>
                            </Popper>
                          </Tooltip>
                        </div>
                      </ToolbarItem>
                    </div>
                  </ToolbarGroupWithRef>
                </ForwardRef>
              </div>
              <ToolbarExpandableContent
                chipContainerRef={
                  Object {
                    "current": <div
                      class="pf-c-toolbar__group"
                    />,
                  }
                }
                clearAllFilters={[Function]}
                clearFiltersButtonText="Reset to default"
                expandableContentRef={
                  Object {
                    "current": <div
                      class="pf-c-toolbar__expandable-content"
                      id="process-definition-list-with-filter-expandable-content-7"
                    >
                      <div
                        class="pf-c-toolbar__group"
                      />
                      <div
                        class="pf-c-toolbar__group pf-m-chip-container"
                      >
                        <div
                          class="pf-c-toolbar__group"
                        />
                        <div
                          class="pf-c-toolbar__item"
                        >
                          <button
                            aria-disabled="false"
                            class="pf-c-button pf-m-link pf-m-inline"
                            data-ouia-component-id="OUIA-Generated-Button-link-1"
                            data-ouia-component-type="PF4/Button"
                            data-ouia-safe="true"
                            type="button"
                          >
                            Reset to default
                          </button>
                        </div>
                      </div>
                    </div>,
                  }
                }
                id="process-definition-list-with-filter-expandable-content-2"
                isExpanded={false}
                showClearFiltersButton={false}
              >
                <div
                  className="pf-c-toolbar__expandable-content"
                  id="process-definition-list-with-filter-expandable-content-2"
                >
                  <ForwardRef>
                    <ToolbarGroupWithRef
                      innerRef={null}
                    >
                      <div
                        className="pf-c-toolbar__group"
                      />
                    </ToolbarGroupWithRef>
                  </ForwardRef>
                </div>
              </ToolbarExpandableContent>
            </div>
          </ToolbarContent>
          <ToolbarChipGroupContent
            chipGroupContentRef={
              Object {
                "current": <div
                  class="pf-c-toolbar__content"
                >
                  <div
                    aria-hidden="true"
                    class="pf-c-toolbar__group pf-m-hidden"
                    hidden=""
                  >
                    <div
                      class="pf-c-toolbar__item pf-m-chip-group"
                    >
                      <div
                        class="pf-c-chip-group pf-m-category"
                        data-ouia-component-type="PF4/ChipGroup"
                        data-ouia-safe="true"
                      >
                        <div
                          class="pf-c-chip-group__main"
                        >
                          <span
                            aria-hidden="true"
                            class="pf-c-chip-group__label"
                            id="pf-random-id-0"
                          >
                            Process name
                          </span>
                          <ul
                            aria-labelledby="pf-random-id-0"
                            class="pf-c-chip-group__list"
                            role="list"
                          >
                            <li
                              class="pf-c-chip-group__list-item"
                            >
                              <div
                                class="pf-c-chip"
                                data-ouia-component-id="OUIA-Generated-Chip-1"
                                data-ouia-component-type="PF4/Chip"
                                data-ouia-safe="true"
                              >
                                <span
                                  class="pf-c-chip__text"
                                  id="pf-random-id-1"
                                >
                                  process1,process2,process3
                                </span>
                                <button
                                  aria-disabled="false"
                                  aria-label="close"
                                  aria-labelledby="remove_pf-random-id-1 pf-random-id-1"
                                  class="pf-c-button pf-m-plain"
                                  data-ouia-component-id="close"
                                  data-ouia-component-type="PF4/Button"
                                  data-ouia-safe="true"
                                  id="remove_pf-random-id-1"
                                  type="button"
                                >
                                  <svg
                                    aria-hidden="true"
                                    fill="currentColor"
                                    height="1em"
                                    role="img"
                                    style="vertical-align: -0.125em;"
                                    viewBox="0 0 352 512"
                                    width="1em"
                                  >
                                    <path
                                      d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                    />
                                  </svg>
                                </button>
                              </div>
                            </li>
                          </ul>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    class="pf-c-toolbar__group"
                  >
                    <div
                      class="pf-c-toolbar__item"
                    >
                      1
                       filters applied
                    </div>
                  </div>
                  <div
                    class="pf-c-toolbar__item"
                  >
                    <button
                      aria-disabled="false"
                      class="pf-c-button pf-m-link pf-m-inline"
                      data-ouia-component-id="OUIA-Generated-Button-link-2"
                      data-ouia-component-type="PF4/Button"
                      data-ouia-safe="true"
                      type="button"
                    >
                      Reset to default
                    </button>
                  </div>
                </div>,
              }
            }
            clearAllFilters={[Function]}
            clearFiltersButtonText="Reset to default"
            collapseListedFiltersBreakpoint="xl"
            isExpanded={false}
            numberOfFilters={0}
            showClearFiltersButton={false}
          >
            <div
              className="pf-c-toolbar__content pf-m-hidden"
              hidden={true}
            >
              <ForwardRef
                aria-hidden={true}
                className="pf-m-hidden"
                hidden={true}
              >
                <ToolbarGroupWithRef
                  aria-hidden={true}
                  className="pf-m-hidden"
                  hidden={true}
                  innerRef={null}
                >
                  <div
                    aria-hidden={true}
                    className="pf-c-toolbar__group pf-m-hidden"
                    hidden={true}
                  />
                </ToolbarGroupWithRef>
              </ForwardRef>
            </div>
          </ToolbarChipGroupContent>
        </div>
      </Toolbar>
    </ProcessDefinitionListToolbar>
    <Divider>
      <hr
        className="pf-c-divider"
      />
    </Divider>
    <DataTable
      LoadingComponent={
        <Bullseye>
          <KogitoSpinner
            ouiaId="forms-list-loading-process-definitions"
            spinnerText="Loading process definitions..."
          />
        </Bullseye>
      }
      columns={
        Array [
          Object {
            "bodyCellTransformer": [Function],
            "label": "Process Name",
            "path": "processName",
          },
          Object {
            "bodyCellTransformer": [Function],
            "label": "Endpoint",
            "path": "endpoint",
          },
          Object {
            "bodyCellTransformer": [Function],
            "label": "Actions",
            "path": "actions",
          },
        ]
      }
      data={Array []}
      error={false}
      isLoading={true}
    >
      <Table
        aria-label="Data Table"
        borders={true}
        canSelectAll={true}
        canSortFavorites={true}
        cells={Array []}
        className=""
        contentId="expanded-content"
        data-ouia-component-type="data-table"
        data-ouia-safe={false}
        dropdownDirection="down"
        dropdownPosition="right"
        expandId="expandable-toggle"
        gridBreakPoint="grid-md"
        isStickyHeader={false}
        isTreeTable={false}
        onSort={[Function]}
        ouiaSafe={true}
        role="grid"
        rowLabeledBy="simple-node"
        rows={Array []}
        selectVariant="checkbox"
        variant={null}
      >
        <Provider
          aria-label="Data Table"
          borders={true}
          className=""
          columns={Array []}
          data-ouia-component-type="data-table"
          data-ouia-safe={false}
          gridBreakPoint="grid-md"
          isStickyHeader={false}
          isTreeTable={false}
          ouiaSafe={true}
          renderers={
            Object {
              "body": Object {
                "cell": [Function],
                "row": [Function],
                "wrapper": [Function],
              },
              "header": Object {
                "cell": [Function],
              },
            }
          }
          role="grid"
          variant={null}
        >
          <TableComposable
            aria-label="Data Table"
            borders={true}
            className=""
            data-ouia-component-type="data-table"
            data-ouia-safe={false}
            gridBreakPoint="grid-md"
            isStickyHeader={false}
            isTreeTable={false}
            ouiaSafe={true}
            role="grid"
            variant={null}
          >
            <TableComposableBase
              aria-label="Data Table"
              borders={true}
              className=""
              data-ouia-component-type="data-table"
              data-ouia-safe={false}
              gridBreakPoint="grid-md"
              innerRef={null}
              isStickyHeader={false}
              isTreeTable={false}
              ouiaSafe={true}
              role="grid"
              variant={null}
            >
              <table
                aria-label="Data Table"
                className="pf-c-table pf-m-grid-md"
                data-ouia-component-id="OUIA-Generated-Table-4"
                data-ouia-component-type="data-table"
                data-ouia-safe={false}
                role="grid"
              >
                <TableHeader>
                  <ContextHeader
                    headerRows={null}
                  >
                    <Component
                      className=""
                      headerRows={null}
                    >
                      <BaseHeader
                        className=""
                        columns={Array []}
                        headerRows={null}
                        renderers={
                          Object {
                            "body": Object {
                              "cell": [Function],
                              "row": [Function],
                              "wrapper": [Function],
                            },
                            "header": Object {
                              "cell": [Function],
                              "row": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "displayName": "Tr",
                                "render": [Function],
                              },
                              "wrapper": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "displayName": "Thead",
                                "render": [Function],
                              },
                            },
                            "table": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "displayName": "TableComposable",
                              "render": [Function],
                            },
                          }
                        }
                      >
                        <Thead
                          className=""
                        >
                          <TheadBase
                            className=""
                            innerRef={null}
                          >
                            <thead
                              className=""
                            >
                              <HeaderRow
                                key="0-header-row"
                                renderers={
                                  Object {
                                    "cell": [Function],
                                    "row": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "displayName": "Tr",
                                      "render": [Function],
                                    },
                                    "wrapper": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "displayName": "Thead",
                                      "render": [Function],
                                    },
                                  }
                                }
                                rowData={Array []}
                                rowIndex={0}
                              >
                                <Tr>
                                  <TrBase
                                    innerRef={null}
                                  >
                                    <tr
                                      className=""
                                      data-ouia-component-id="OUIA-Generated-TableRow-3"
                                      data-ouia-component-type="PF4/TableRow"
                                      data-ouia-safe={true}
                                      hidden={false}
                                    />
                                  </TrBase>
                                </Tr>
                              </HeaderRow>
                            </thead>
                          </TheadBase>
                        </Thead>
                      </BaseHeader>
                    </Component>
                  </ContextHeader>
                </TableHeader>
                <Component
                  rowKey="rowKey"
                >
                  <ContextBody
                    className=""
                    headerData={Array []}
                    headerRows={null}
                    onRow={[Function]}
                    onRowClick={[Function]}
                    rowKey="rowKey"
                    rows={Array []}
                  />
                </Component>
              </table>
            </TableComposableBase>
          </TableComposable>
        </Provider>
      </Table>
    </DataTable>
  </div>
</ProcessDefinitionList>
`;
