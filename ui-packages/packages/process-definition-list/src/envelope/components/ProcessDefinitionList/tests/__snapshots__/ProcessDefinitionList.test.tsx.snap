// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProcessDefinition list tests render ProcessDefinition list - table 1`] = `
<ProcessDefinitionList
  driver={MockedProcessDefinitionListDriver {}}
  isEnvelopeConnectedToChannel={true}
  singularProcessLabel="Workflow"
>
  <div
    data-ouia-component-type="process-definition-list"
    data-ouia-safe={false}
  >
    <MockedProcessDefinitionListToolbar
      applyFilter={[Function]}
      filterProcessNames={Array []}
      setFilterProcessNames={[Function]}
      singularProcessLabel="Workflow"
    />
    <Divider>
      <hr
        className="pf-c-divider"
      />
    </Divider>
    <DataTable
      LoadingComponent={
        <Bullseye>
          <KogitoSpinner
            ouiaId="forms-list-loading-process-definitions"
            spinnerText="Loading workflow definitions..."
          />
        </Bullseye>
      }
      columns={
        Array [
          Object {
            "bodyCellTransformer": [Function],
            "label": "Workflow Name",
            "path": "processName",
          },
          Object {
            "bodyCellTransformer": [Function],
            "label": "Endpoint",
            "path": "endpoint",
          },
          Object {
            "bodyCellTransformer": [Function],
            "label": "Actions",
            "path": "actions",
          },
        ]
      }
      data={Array []}
      error={false}
      isLoading={true}
    >
      <Table
        aria-label="Data Table"
        borders={true}
        canSelectAll={true}
        canSortFavorites={true}
        cells={Array []}
        className=""
        contentId="expanded-content"
        data-ouia-component-type="data-table"
        data-ouia-safe={false}
        dropdownDirection="down"
        dropdownPosition="right"
        expandId="expandable-toggle"
        gridBreakPoint="grid-md"
        isStickyHeader={false}
        isTreeTable={false}
        onSort={[Function]}
        ouiaSafe={true}
        role="grid"
        rowLabeledBy="simple-node"
        rows={Array []}
        selectVariant="checkbox"
        variant={null}
      >
        <Provider
          aria-label="Data Table"
          borders={true}
          className=""
          columns={Array []}
          data-ouia-component-type="data-table"
          data-ouia-safe={false}
          gridBreakPoint="grid-md"
          isStickyHeader={false}
          isTreeTable={false}
          ouiaSafe={true}
          renderers={
            Object {
              "body": Object {
                "cell": [Function],
                "row": [Function],
                "wrapper": [Function],
              },
              "header": Object {
                "cell": [Function],
              },
            }
          }
          role="grid"
          variant={null}
        >
          <TableComposable
            aria-label="Data Table"
            borders={true}
            className=""
            data-ouia-component-type="data-table"
            data-ouia-safe={false}
            gridBreakPoint="grid-md"
            isStickyHeader={false}
            isTreeTable={false}
            ouiaSafe={true}
            role="grid"
            variant={null}
          >
            <TableComposableBase
              aria-label="Data Table"
              borders={true}
              className=""
              data-ouia-component-type="data-table"
              data-ouia-safe={false}
              gridBreakPoint="grid-md"
              innerRef={null}
              isStickyHeader={false}
              isTreeTable={false}
              ouiaSafe={true}
              role="grid"
              variant={null}
            >
              <table
                aria-label="Data Table"
                className="pf-c-table pf-m-grid-md"
                data-ouia-component-id="OUIA-Generated-Table-4"
                data-ouia-component-type="data-table"
                data-ouia-safe={false}
                role="grid"
              >
                <TableHeader>
                  <ContextHeader
                    headerRows={null}
                  >
                    <Component
                      className=""
                      headerRows={null}
                    >
                      <BaseHeader
                        className=""
                        columns={Array []}
                        headerRows={null}
                        renderers={
                          Object {
                            "body": Object {
                              "cell": [Function],
                              "row": [Function],
                              "wrapper": [Function],
                            },
                            "header": Object {
                              "cell": [Function],
                              "row": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "displayName": "Tr",
                                "render": [Function],
                              },
                              "wrapper": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "displayName": "Thead",
                                "render": [Function],
                              },
                            },
                            "table": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "displayName": "TableComposable",
                              "render": [Function],
                            },
                          }
                        }
                      >
                        <Thead
                          className=""
                        >
                          <TheadBase
                            className=""
                            innerRef={null}
                          >
                            <thead
                              className=""
                            >
                              <HeaderRow
                                key="0-header-row"
                                renderers={
                                  Object {
                                    "cell": [Function],
                                    "row": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "displayName": "Tr",
                                      "render": [Function],
                                    },
                                    "wrapper": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "displayName": "Thead",
                                      "render": [Function],
                                    },
                                  }
                                }
                                rowData={Array []}
                                rowIndex={0}
                              >
                                <Tr>
                                  <TrBase
                                    innerRef={null}
                                  >
                                    <tr
                                      className=""
                                      data-ouia-component-id="OUIA-Generated-TableRow-3"
                                      data-ouia-component-type="PF4/TableRow"
                                      data-ouia-safe={true}
                                      hidden={false}
                                    />
                                  </TrBase>
                                </Tr>
                              </HeaderRow>
                            </thead>
                          </TheadBase>
                        </Thead>
                      </BaseHeader>
                    </Component>
                  </ContextHeader>
                </TableHeader>
                <Component
                  rowKey="rowKey"
                >
                  <ContextBody
                    className=""
                    headerData={Array []}
                    headerRows={null}
                    onRow={[Function]}
                    onRowClick={[Function]}
                    rowKey="rowKey"
                    rows={Array []}
                  />
                </Component>
              </table>
            </TableComposableBase>
          </TableComposable>
        </Provider>
      </Table>
    </DataTable>
  </div>
</ProcessDefinitionList>
`;

exports[`ProcessDefinition list tests render ProcessDefinition list - table with cloud event enabled 1`] = `
<ProcessDefinitionList
  driver={MockedProcessDefinitionListDriver {}}
  isEnvelopeConnectedToChannel={true}
  isTriggerCloudEventEnabled={true}
  singularProcessLabel="Workflow"
>
  <div
    data-ouia-component-type="process-definition-list"
    data-ouia-safe={false}
  >
    <MockedProcessDefinitionListToolbar
      applyFilter={[Function]}
      filterProcessNames={Array []}
      onOpenTriggerCloudEvent={[Function]}
      setFilterProcessNames={[Function]}
      singularProcessLabel="Workflow"
    />
    <Divider>
      <hr
        className="pf-c-divider"
      />
    </Divider>
    <DataTable
      LoadingComponent={
        <Bullseye>
          <KogitoSpinner
            ouiaId="forms-list-loading-process-definitions"
            spinnerText="Loading workflow definitions..."
          />
        </Bullseye>
      }
      columns={
        Array [
          Object {
            "bodyCellTransformer": [Function],
            "label": "Workflow Name",
            "path": "processName",
          },
          Object {
            "bodyCellTransformer": [Function],
            "label": "Endpoint",
            "path": "endpoint",
          },
          Object {
            "bodyCellTransformer": [Function],
            "label": "Actions",
            "path": "actions",
          },
        ]
      }
      data={Array []}
      error={false}
      isLoading={true}
    >
      <Table
        aria-label="Data Table"
        borders={true}
        canSelectAll={true}
        canSortFavorites={true}
        cells={Array []}
        className=""
        contentId="expanded-content"
        data-ouia-component-type="data-table"
        data-ouia-safe={false}
        dropdownDirection="down"
        dropdownPosition="right"
        expandId="expandable-toggle"
        gridBreakPoint="grid-md"
        isStickyHeader={false}
        isTreeTable={false}
        onSort={[Function]}
        ouiaSafe={true}
        role="grid"
        rowLabeledBy="simple-node"
        rows={Array []}
        selectVariant="checkbox"
        variant={null}
      >
        <Provider
          aria-label="Data Table"
          borders={true}
          className=""
          columns={Array []}
          data-ouia-component-type="data-table"
          data-ouia-safe={false}
          gridBreakPoint="grid-md"
          isStickyHeader={false}
          isTreeTable={false}
          ouiaSafe={true}
          renderers={
            Object {
              "body": Object {
                "cell": [Function],
                "row": [Function],
                "wrapper": [Function],
              },
              "header": Object {
                "cell": [Function],
              },
            }
          }
          role="grid"
          variant={null}
        >
          <TableComposable
            aria-label="Data Table"
            borders={true}
            className=""
            data-ouia-component-type="data-table"
            data-ouia-safe={false}
            gridBreakPoint="grid-md"
            isStickyHeader={false}
            isTreeTable={false}
            ouiaSafe={true}
            role="grid"
            variant={null}
          >
            <TableComposableBase
              aria-label="Data Table"
              borders={true}
              className=""
              data-ouia-component-type="data-table"
              data-ouia-safe={false}
              gridBreakPoint="grid-md"
              innerRef={null}
              isStickyHeader={false}
              isTreeTable={false}
              ouiaSafe={true}
              role="grid"
              variant={null}
            >
              <table
                aria-label="Data Table"
                className="pf-c-table pf-m-grid-md"
                data-ouia-component-id="OUIA-Generated-Table-6"
                data-ouia-component-type="data-table"
                data-ouia-safe={false}
                role="grid"
              >
                <TableHeader>
                  <ContextHeader
                    headerRows={null}
                  >
                    <Component
                      className=""
                      headerRows={null}
                    >
                      <BaseHeader
                        className=""
                        columns={Array []}
                        headerRows={null}
                        renderers={
                          Object {
                            "body": Object {
                              "cell": [Function],
                              "row": [Function],
                              "wrapper": [Function],
                            },
                            "header": Object {
                              "cell": [Function],
                              "row": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "displayName": "Tr",
                                "render": [Function],
                              },
                              "wrapper": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "displayName": "Thead",
                                "render": [Function],
                              },
                            },
                            "table": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "displayName": "TableComposable",
                              "render": [Function],
                            },
                          }
                        }
                      >
                        <Thead
                          className=""
                        >
                          <TheadBase
                            className=""
                            innerRef={null}
                          >
                            <thead
                              className=""
                            >
                              <HeaderRow
                                key="0-header-row"
                                renderers={
                                  Object {
                                    "cell": [Function],
                                    "row": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "displayName": "Tr",
                                      "render": [Function],
                                    },
                                    "wrapper": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "displayName": "Thead",
                                      "render": [Function],
                                    },
                                  }
                                }
                                rowData={Array []}
                                rowIndex={0}
                              >
                                <Tr>
                                  <TrBase
                                    innerRef={null}
                                  >
                                    <tr
                                      className=""
                                      data-ouia-component-id="OUIA-Generated-TableRow-5"
                                      data-ouia-component-type="PF4/TableRow"
                                      data-ouia-safe={true}
                                      hidden={false}
                                    />
                                  </TrBase>
                                </Tr>
                              </HeaderRow>
                            </thead>
                          </TheadBase>
                        </Thead>
                      </BaseHeader>
                    </Component>
                  </ContextHeader>
                </TableHeader>
                <Component
                  rowKey="rowKey"
                >
                  <ContextBody
                    className=""
                    headerData={Array []}
                    headerRows={null}
                    onRow={[Function]}
                    onRowClick={[Function]}
                    rowKey="rowKey"
                    rows={Array []}
                  />
                </Component>
              </table>
            </TableComposableBase>
          </TableComposable>
        </Provider>
      </Table>
    </DataTable>
  </div>
</ProcessDefinitionList>
`;
