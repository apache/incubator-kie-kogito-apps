// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DevUIRoutes tests::Process and Tracing enabled Test Jobs management route 1`] = `
<DevUIAppContextProvider
  devUIUrl="http://devUIUrl"
  isProcessEnabled={true}
  isTracingEnabled={true}
  openApiPath="http://openApiPath"
  users={Array []}
>
  <MemoryRouter
    initialEntries={
      Array [
        "/",
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "REPLACE",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "pathname": "/JobsManagement",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/JobsManagement",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <DevUIRoutes
        navigate="JobsManagement"
        trustyServiceUrl="http://url-to-service"
      >
        <Switch>
          <Route
            component={[Function]}
            computedMatch={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/JobsManagement",
                "url": "/JobsManagement",
              }
            }
            exact={true}
            key="3"
            location={
              Object {
                "hash": "",
                "pathname": "/JobsManagement",
                "search": "",
                "state": undefined,
              }
            }
            path="/JobsManagement"
          >
            <MockedJobsManagementPage
              history={
                Object {
                  "action": "REPLACE",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "pathname": "/JobsManagement",
                      "search": "",
                      "state": undefined,
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/JobsManagement",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
              location={
                Object {
                  "hash": "",
                  "pathname": "/JobsManagement",
                  "search": "",
                  "state": undefined,
                }
              }
              match={
                Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/JobsManagement",
                  "url": "/JobsManagement",
                }
              }
            />
          </Route>
        </Switch>
      </DevUIRoutes>
    </Router>
  </MemoryRouter>
</DevUIAppContextProvider>
`;

exports[`DevUIRoutes tests::Process and Tracing enabled Test NoData route 1`] = `
<DevUIAppContextProvider
  devUIUrl="http://devUIUrl"
  isProcessEnabled={true}
  isTracingEnabled={true}
  openApiPath="http://openApiPath"
  users={Array []}
>
  <MemoryRouter
    initialEntries={
      Array [
        "/NoData",
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "pathname": "/NoData",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/NoData",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <DevUIRoutes
        navigate="JobsManagement"
        trustyServiceUrl="http://url-to-service"
      >
        <Switch>
          <Route
            computedMatch={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/NoData",
                "url": "/NoData",
              }
            }
            key="14"
            location={
              Object {
                "hash": "",
                "pathname": "/NoData",
                "search": "",
                "state": undefined,
              }
            }
            path="/NoData"
            render={[Function]}
          >
            <NoData
              defaultButton="Go to jobs management"
              defaultPath="/JobsManagement"
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "pathname": "/NoData",
                      "search": "",
                      "state": undefined,
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/NoData",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
              location={
                Object {
                  "hash": "",
                  "pathname": "/NoData",
                  "search": "",
                  "state": undefined,
                }
              }
              match={
                Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/NoData",
                  "url": "/NoData",
                }
              }
            >
              <MockedComponent />
            </NoData>
          </Route>
        </Switch>
      </DevUIRoutes>
    </Router>
  </MemoryRouter>
</DevUIAppContextProvider>
`;

exports[`DevUIRoutes tests::Process and Tracing enabled Test PageNotFound route 1`] = `
<DevUIAppContextProvider
  devUIUrl="http://devUIUrl"
  isProcessEnabled={true}
  isTracingEnabled={true}
  openApiPath="http://openApiPath"
  users={Array []}
>
  <MemoryRouter
    initialEntries={
      Array [
        "*",
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "pathname": "*",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "*",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <DevUIRoutes
        navigate="JobsManagement"
        trustyServiceUrl="http://url-to-service"
      >
        <Switch>
          <Route
            computedMatch={
              Object {
                "isExact": true,
                "params": Object {
                  "0": "*",
                },
                "path": "*",
                "url": "*",
              }
            }
            key="18"
            location={
              Object {
                "hash": "",
                "pathname": "*",
                "search": "",
                "state": undefined,
              }
            }
            path="*"
            render={[Function]}
          >
            <PageNotFound
              defaultButton="Go to jobs management"
              defaultPath="/JobsManagement"
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "pathname": "*",
                      "search": "",
                      "state": undefined,
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "*",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
              location={
                Object {
                  "hash": "",
                  "pathname": "*",
                  "search": "",
                  "state": undefined,
                }
              }
              match={
                Object {
                  "isExact": true,
                  "params": Object {
                    "0": "*",
                  },
                  "path": "*",
                  "url": "*",
                }
              }
            >
              <MockedComponent />
            </PageNotFound>
          </Route>
        </Switch>
      </DevUIRoutes>
    </Router>
  </MemoryRouter>
</DevUIAppContextProvider>
`;

exports[`DevUIRoutes tests::Process and Tracing enabled audit investigation page test 1`] = `
<DevUIAppContextProvider
  devUIUrl="http://devUIUrl"
  isProcessEnabled={true}
  isTracingEnabled={true}
  openApiPath="http://openApiPath"
  users={Array []}
>
  <MemoryRouter
    initialEntries={
      Array [
        "/Audit",
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "pathname": "/Audit",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/Audit",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <DevUIRoutes
        navigate="JobsManagement"
        trustyServiceUrl="http://url-to-service"
      >
        <Switch>
          <Route
            computedMatch={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/Audit",
                "url": "/Audit",
              }
            }
            key="12"
            location={
              Object {
                "hash": "",
                "pathname": "/Audit",
                "search": "",
                "state": undefined,
              }
            }
            path="/Audit"
          >
            <TrustyApp
              containerConfiguration={
                Object {
                  "basePath": "/Audit",
                  "excludeReactRouter": true,
                  "pageWrapper": false,
                  "serverRoot": "http://url-to-service",
                  "useHrefLinks": false,
                }
              }
              counterfactualEnabled={false}
              explanationEnabled={false}
            >
              <MockedComponent />
            </TrustyApp>
          </Route>
        </Switch>
      </DevUIRoutes>
    </Router>
  </MemoryRouter>
</DevUIAppContextProvider>
`;

exports[`DevUIRoutes tests::Process and Tracing enabled forms list page test 1`] = `
<DevUIAppContextProvider
  devUIUrl="http://devUIUrl"
  isProcessEnabled={true}
  isTracingEnabled={true}
  openApiPath="http://openApiPath"
  users={Array []}
>
  <MemoryRouter
    initialEntries={
      Array [
        "/Forms",
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "pathname": "/Forms",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/Forms",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <DevUIRoutes
        navigate="JobsManagement"
        trustyServiceUrl="http://url-to-service"
      >
        <Switch>
          <Route
            component={[Function]}
            computedMatch={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/Forms",
                "url": "/Forms",
              }
            }
            exact={true}
            key="5"
            location={
              Object {
                "hash": "",
                "pathname": "/Forms",
                "search": "",
                "state": undefined,
              }
            }
            path="/Forms"
          >
            <MockedFormsListPage
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "pathname": "/Forms",
                      "search": "",
                      "state": undefined,
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/Forms",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
              location={
                Object {
                  "hash": "",
                  "pathname": "/Forms",
                  "search": "",
                  "state": undefined,
                }
              }
              match={
                Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/Forms",
                  "url": "/Forms",
                }
              }
            />
          </Route>
        </Switch>
      </DevUIRoutes>
    </Router>
  </MemoryRouter>
</DevUIAppContextProvider>
`;

exports[`DevUIRoutes tests::Process and Tracing enabled jobs management page test 1`] = `
<DevUIAppContextProvider
  devUIUrl="http://devUIUrl"
  isProcessEnabled={true}
  isTracingEnabled={true}
  openApiPath="http://openApiPath"
  users={Array []}
>
  <MemoryRouter
    initialEntries={
      Array [
        "/JobsManagement",
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "pathname": "/JobsManagement",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/JobsManagement",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <DevUIRoutes
        navigate="JobsManagement"
        trustyServiceUrl="http://url-to-service"
      >
        <Switch>
          <Route
            component={[Function]}
            computedMatch={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/JobsManagement",
                "url": "/JobsManagement",
              }
            }
            exact={true}
            key="3"
            location={
              Object {
                "hash": "",
                "pathname": "/JobsManagement",
                "search": "",
                "state": undefined,
              }
            }
            path="/JobsManagement"
          >
            <MockedJobsManagementPage
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "pathname": "/JobsManagement",
                      "search": "",
                      "state": undefined,
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/JobsManagement",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
              location={
                Object {
                  "hash": "",
                  "pathname": "/JobsManagement",
                  "search": "",
                  "state": undefined,
                }
              }
              match={
                Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/JobsManagement",
                  "url": "/JobsManagement",
                }
              }
            />
          </Route>
        </Switch>
      </DevUIRoutes>
    </Router>
  </MemoryRouter>
</DevUIAppContextProvider>
`;

exports[`DevUIRoutes tests::Process and Tracing enabled no data page test 1`] = `
<DevUIAppContextProvider
  devUIUrl="http://devUIUrl"
  isProcessEnabled={true}
  isTracingEnabled={true}
  openApiPath="http://openApiPath"
  users={Array []}
>
  <MemoryRouter
    initialEntries={
      Array [
        "/NoData",
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "pathname": "/NoData",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/NoData",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <DevUIRoutes
        navigate="JobsManagement"
        trustyServiceUrl="http://url-to-service"
      >
        <Switch>
          <Route
            computedMatch={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/NoData",
                "url": "/NoData",
              }
            }
            key="14"
            location={
              Object {
                "hash": "",
                "pathname": "/NoData",
                "search": "",
                "state": undefined,
              }
            }
            path="/NoData"
            render={[Function]}
          >
            <NoData
              defaultButton="Go to jobs management"
              defaultPath="/JobsManagement"
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "pathname": "/NoData",
                      "search": "",
                      "state": undefined,
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/NoData",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
              location={
                Object {
                  "hash": "",
                  "pathname": "/NoData",
                  "search": "",
                  "state": undefined,
                }
              }
              match={
                Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/NoData",
                  "url": "/NoData",
                }
              }
            >
              <MockedComponent />
            </NoData>
          </Route>
        </Switch>
      </DevUIRoutes>
    </Router>
  </MemoryRouter>
</DevUIAppContextProvider>
`;

exports[`DevUIRoutes tests::Process and Tracing enabled page not found page test 1`] = `
<DevUIAppContextProvider
  devUIUrl="http://devUIUrl"
  isProcessEnabled={true}
  isTracingEnabled={true}
  openApiPath="http://openApiPath"
  users={Array []}
>
  <MemoryRouter
    initialEntries={
      Array [
        "*",
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "pathname": "*",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "*",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <DevUIRoutes
        navigate="JobsManagement"
        trustyServiceUrl="http://url-to-service"
      >
        <Switch>
          <Route
            computedMatch={
              Object {
                "isExact": true,
                "params": Object {
                  "0": "*",
                },
                "path": "*",
                "url": "*",
              }
            }
            key="18"
            location={
              Object {
                "hash": "",
                "pathname": "*",
                "search": "",
                "state": undefined,
              }
            }
            path="*"
            render={[Function]}
          >
            <PageNotFound
              defaultButton="Go to jobs management"
              defaultPath="/JobsManagement"
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "pathname": "*",
                      "search": "",
                      "state": undefined,
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "*",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
              location={
                Object {
                  "hash": "",
                  "pathname": "*",
                  "search": "",
                  "state": undefined,
                }
              }
              match={
                Object {
                  "isExact": true,
                  "params": Object {
                    "0": "*",
                  },
                  "path": "*",
                  "url": "*",
                }
              }
            >
              <MockedComponent />
            </PageNotFound>
          </Route>
        </Switch>
      </DevUIRoutes>
    </Router>
  </MemoryRouter>
</DevUIAppContextProvider>
`;

exports[`DevUIRoutes tests::Process and Tracing enabled processes test 1`] = `
<DevUIAppContextProvider
  devUIUrl="http://devUIUrl"
  isProcessEnabled={true}
  isTracingEnabled={true}
  openApiPath="http://openApiPath"
  users={Array []}
>
  <MemoryRouter
    initialEntries={
      Array [
        "/Processes",
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "pathname": "/Processes",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/Processes",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <DevUIRoutes
        navigate="JobsManagement"
        trustyServiceUrl="http://url-to-service"
      >
        <Switch>
          <Route
            component={[Function]}
            computedMatch={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/Processes",
                "url": "/Processes",
              }
            }
            exact={true}
            key="1"
            location={
              Object {
                "hash": "",
                "pathname": "/Processes",
                "search": "",
                "state": undefined,
              }
            }
            path="/Processes"
          >
            <MockedProcessesPage
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "pathname": "/Processes",
                      "search": "",
                      "state": undefined,
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/Processes",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
              location={
                Object {
                  "hash": "",
                  "pathname": "/Processes",
                  "search": "",
                  "state": undefined,
                }
              }
              match={
                Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/Processes",
                  "url": "/Processes",
                }
              }
            />
          </Route>
        </Switch>
      </DevUIRoutes>
    </Router>
  </MemoryRouter>
</DevUIAppContextProvider>
`;
