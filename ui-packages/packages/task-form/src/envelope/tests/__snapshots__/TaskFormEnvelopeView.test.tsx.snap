// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TaskFormEnvelopeView tests Custom Task Form 1`] = `
<ForwardRef
  channelApi={
    Object {
      "notifications": Object {},
      "requests": Object {
        "taskForm__doSubmit": [MockFunction],
        "taskForm__getCustomForm": [MockFunction] {
          "calls": Array [
            Array [],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": Promise {},
            },
          ],
        },
        "taskForm__getTaskFormSchema": [MockFunction] {
          "calls": Array [
            Array [],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": Promise {},
            },
          ],
        },
      },
      "subscribe": [MockFunction],
      "unsubscribe": [MockFunction],
    }
  }
>
  <MockedCustomTaskFormDisplayer
    customForm={
      Object {
        "configuration": Object {
          "resources": Object {
            "scripts": Object {},
            "styles": Object {},
          },
          "schema": "",
        },
        "formInfo": Object {
          "lastModified": 2021-10-07T04:58:18.311Z,
          "name": "travels_VisaApplication",
          "type": "HTML",
        },
        "source": "<div></div>",
      }
    }
    data-ouia-component-id="task-form-envelope-view-custom-task-form"
    data-ouia-component-type="custom-task-form"
    data-ouia-safe={true}
    driver={
      TaskFormEnvelopeViewDriver {
        "channelApi": Object {
          "notifications": Object {},
          "requests": Object {
            "taskForm__doSubmit": [MockFunction],
            "taskForm__getCustomForm": [MockFunction] {
              "calls": Array [
                Array [],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": Promise {},
                },
              ],
            },
            "taskForm__getTaskFormSchema": [MockFunction] {
              "calls": Array [
                Array [],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": Promise {},
                },
              ],
            },
          },
          "subscribe": [MockFunction],
          "unsubscribe": [MockFunction],
        },
      }
    }
    schema={
      Object {
        "$schema": "https://json-schema.org/draft/2019-09/schema",
        "phases": Array [
          "complete",
          "release",
        ],
        "properties": Object {
          "traveller": Object {
            "input": true,
            "output": true,
            "properties": Object {
              "address": Object {
                "properties": Object {
                  "city": Object {
                    "type": "string",
                  },
                  "country": Object {
                    "type": "string",
                  },
                  "street": Object {
                    "type": "string",
                  },
                  "zipCode": Object {
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "email": Object {
                "format": "email",
                "type": "string",
              },
              "firstName": Object {
                "type": "string",
              },
              "lastName": Object {
                "type": "string",
              },
              "nationality": Object {
                "type": "string",
              },
            },
            "required": Array [
              "firstName",
              "lastName",
            ],
            "type": "object",
          },
          "trip": Object {
            "input": true,
            "properties": Object {
              "begin": Object {
                "format": "date-time",
                "type": "string",
              },
              "city": Object {
                "type": "string",
              },
              "country": Object {
                "type": "string",
              },
              "end": Object {
                "format": "date-time",
                "type": "string",
              },
              "visaRequired": Object {
                "type": "boolean",
              },
            },
            "type": "object",
          },
          "visaApplication": Object {
            "input": true,
            "properties": Object {
              "city": Object {
                "type": "string",
              },
              "country": Object {
                "type": "string",
              },
              "duration": Object {
                "type": "integer",
              },
              "firstName": Object {
                "type": "string",
              },
              "lastName": Object {
                "type": "string",
              },
              "nationality": Object {
                "type": "string",
              },
              "passportNumber": Object {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "type": "object",
      }
    }
    user={
      Object {
        "groups": Array [
          "group1",
        ],
        "id": "test",
      }
    }
    userTask={
      Object {
        "actualOwner": null,
        "adminGroups": Array [],
        "adminUsers": Array [],
        "completed": null,
        "description": null,
        "endpoint": "http://localhost:8080/travels/9ae7ce3b-d49c-4f35-b843-8ac3d22fa427/VisaApplication/45a73767-5da3-49bf-9c40-d533c3e77ef3",
        "excludedUsers": Array [],
        "id": "45a73767-5da3-49bf-9c40-d533c3e77ef3",
        "inputs": "{\\"Skippable\\":\\"true\\",\\"trip\\":{\\"city\\":\\"Boston\\",\\"country\\":\\"US\\",\\"begin\\":\\"2020-02-19T23:00:00.000+01:00\\",\\"end\\":\\"2020-02-26T23:00:00.000+01:00\\",\\"visaRequired\\":true},\\"TaskName\\":\\"VisaApplication\\",\\"NodeName\\":\\"Apply for visa\\",\\"traveller\\":{\\"firstName\\":\\"Rachel\\",\\"lastName\\":\\"White\\",\\"email\\":\\"rwhite@gorle.com\\",\\"nationality\\":\\"Polish\\",\\"address\\":{\\"street\\":\\"Cabalone\\",\\"city\\":\\"Zerf\\",\\"zipCode\\":\\"765756\\",\\"country\\":\\"Poland\\"}},\\"Priority\\":\\"1\\"}",
        "lastUpdate": 2020-02-19T11:11:56.282Z,
        "name": "VisaApplication",
        "outputs": "{}",
        "potentialGroups": Array [],
        "potentialUsers": Array [],
        "priority": "1",
        "processId": "travels",
        "processInstanceId": "9ae7ce3b-d49c-4f35-b843-8ac3d22fa427",
        "referenceName": "Apply for visa",
        "rootProcessId": null,
        "rootProcessInstanceId": null,
        "started": 2020-02-19T11:11:56.282Z,
        "state": "Ready",
      }
    }
  />
</ForwardRef>
`;

exports[`TaskFormEnvelopeView tests Empty State 1`] = `
<ForwardRef
  channelApi={
    Object {
      "notifications": Object {},
      "requests": Object {
        "taskForm__doSubmit": [MockFunction],
        "taskForm__getCustomForm": [MockFunction] {
          "calls": Array [
            Array [],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": Promise {},
            },
          ],
        },
        "taskForm__getTaskFormSchema": [MockFunction] {
          "calls": Array [
            Array [],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": Promise {},
            },
          ],
        },
      },
      "subscribe": [MockFunction],
      "unsubscribe": [MockFunction],
    }
  }
>
  <KogitoEmptyState
    body="Cannot find form for task  Apply for visa (45a73)"
    data-ouia-component-id="task-form-envelope-view-no-form"
    data-ouia-component-type="empty-task-form"
    data-ouia-safe={true}
    title="No form to show"
    type={3}
  >
    <MockedComponent />
  </KogitoEmptyState>
</ForwardRef>
`;

exports[`TaskFormEnvelopeView tests Loading 1`] = `
<ForwardRef
  channelApi={
    Object {
      "notifications": Object {},
      "requests": Object {
        "taskForm__doSubmit": [MockFunction],
        "taskForm__getCustomForm": [MockFunction],
        "taskForm__getTaskFormSchema": [MockFunction],
      },
      "subscribe": [MockFunction],
      "unsubscribe": [MockFunction],
    }
  }
>
  <Bullseye
    data-ouia-component-id="task-form-envelope-view-loading-spinner"
    data-ouia-component-type="task-form"
    data-ouia-safe={true}
  >
    <div
      className="pf-l-bullseye"
      data-ouia-component-id="task-form-envelope-view-loading-spinner"
      data-ouia-component-type="task-form"
      data-ouia-safe={true}
    >
      <KogitoSpinner
        spinnerText="Loading task form..."
      >
        <MockedComponent />
      </KogitoSpinner>
    </div>
  </Bullseye>
</ForwardRef>
`;

exports[`TaskFormEnvelopeView tests Task Form 1`] = `
<ForwardRef
  channelApi={
    Object {
      "notifications": Object {},
      "requests": Object {
        "taskForm__doSubmit": [MockFunction],
        "taskForm__getCustomForm": [MockFunction] {
          "calls": Array [
            Array [],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": Promise {},
            },
          ],
        },
        "taskForm__getTaskFormSchema": [MockFunction] {
          "calls": Array [
            Array [],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": Promise {},
            },
          ],
        },
      },
      "subscribe": [MockFunction],
      "unsubscribe": [MockFunction],
    }
  }
>
  <MockedTaskForm
    data-ouia-component-id="task-form-envelope-view-task-form"
    data-ouia-component-type="task-form"
    data-ouia-safe={true}
    driver={
      TaskFormEnvelopeViewDriver {
        "channelApi": Object {
          "notifications": Object {},
          "requests": Object {
            "taskForm__doSubmit": [MockFunction],
            "taskForm__getCustomForm": [MockFunction] {
              "calls": Array [
                Array [],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": Promise {},
                },
              ],
            },
            "taskForm__getTaskFormSchema": [MockFunction] {
              "calls": Array [
                Array [],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": Promise {},
                },
              ],
            },
          },
          "subscribe": [MockFunction],
          "unsubscribe": [MockFunction],
        },
      }
    }
    schema={
      Object {
        "$schema": "https://json-schema.org/draft/2019-09/schema",
        "phases": Array [
          "complete",
          "release",
        ],
        "properties": Object {
          "traveller": Object {
            "input": true,
            "output": true,
            "properties": Object {
              "address": Object {
                "properties": Object {
                  "city": Object {
                    "type": "string",
                  },
                  "country": Object {
                    "type": "string",
                  },
                  "street": Object {
                    "type": "string",
                  },
                  "zipCode": Object {
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "email": Object {
                "format": "email",
                "type": "string",
              },
              "firstName": Object {
                "type": "string",
              },
              "lastName": Object {
                "type": "string",
              },
              "nationality": Object {
                "type": "string",
              },
            },
            "required": Array [
              "firstName",
              "lastName",
            ],
            "type": "object",
          },
          "trip": Object {
            "input": true,
            "properties": Object {
              "begin": Object {
                "format": "date-time",
                "type": "string",
              },
              "city": Object {
                "type": "string",
              },
              "country": Object {
                "type": "string",
              },
              "end": Object {
                "format": "date-time",
                "type": "string",
              },
              "visaRequired": Object {
                "type": "boolean",
              },
            },
            "type": "object",
          },
          "visaApplication": Object {
            "input": true,
            "properties": Object {
              "city": Object {
                "type": "string",
              },
              "country": Object {
                "type": "string",
              },
              "duration": Object {
                "type": "integer",
              },
              "firstName": Object {
                "type": "string",
              },
              "lastName": Object {
                "type": "string",
              },
              "nationality": Object {
                "type": "string",
              },
              "passportNumber": Object {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "type": "object",
      }
    }
    userTask={
      Object {
        "actualOwner": null,
        "adminGroups": Array [],
        "adminUsers": Array [],
        "completed": null,
        "description": null,
        "endpoint": "http://localhost:8080/travels/9ae7ce3b-d49c-4f35-b843-8ac3d22fa427/VisaApplication/45a73767-5da3-49bf-9c40-d533c3e77ef3",
        "excludedUsers": Array [],
        "id": "45a73767-5da3-49bf-9c40-d533c3e77ef3",
        "inputs": "{\\"Skippable\\":\\"true\\",\\"trip\\":{\\"city\\":\\"Boston\\",\\"country\\":\\"US\\",\\"begin\\":\\"2020-02-19T23:00:00.000+01:00\\",\\"end\\":\\"2020-02-26T23:00:00.000+01:00\\",\\"visaRequired\\":true},\\"TaskName\\":\\"VisaApplication\\",\\"NodeName\\":\\"Apply for visa\\",\\"traveller\\":{\\"firstName\\":\\"Rachel\\",\\"lastName\\":\\"White\\",\\"email\\":\\"rwhite@gorle.com\\",\\"nationality\\":\\"Polish\\",\\"address\\":{\\"street\\":\\"Cabalone\\",\\"city\\":\\"Zerf\\",\\"zipCode\\":\\"765756\\",\\"country\\":\\"Poland\\"}},\\"Priority\\":\\"1\\"}",
        "lastUpdate": 2020-02-19T11:11:56.282Z,
        "name": "VisaApplication",
        "outputs": "{}",
        "potentialGroups": Array [],
        "potentialUsers": Array [],
        "priority": "1",
        "processId": "travels",
        "processInstanceId": "9ae7ce3b-d49c-4f35-b843-8ac3d22fa427",
        "referenceName": "Apply for visa",
        "rootProcessId": null,
        "rootProcessInstanceId": null,
        "started": 2020-02-19T11:11:56.282Z,
        "state": "Ready",
      }
    }
  />
</ForwardRef>
`;
