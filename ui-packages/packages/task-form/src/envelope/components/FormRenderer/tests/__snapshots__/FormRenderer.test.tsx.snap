// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FormRenderer test Render form with actions 1`] = `
<FormRenderer
  formActions={
    Array [
      Object {
        "execute": [MockFunction],
        "name": "complete",
      },
    ]
  }
  formSchema={
    Object {
      "phases": Array [
        "complete",
        "release",
      ],
      "properties": Object {
        "traveller": Object {
          "properties": Object {
            "address": Object {
              "properties": Object {
                "city": Object {
                  "type": "string",
                },
                "country": Object {
                  "type": "string",
                },
                "street": Object {
                  "type": "string",
                },
                "zipCode": Object {
                  "type": "string",
                },
              },
              "type": "object",
            },
            "email": Object {
              "format": "email",
              "type": "string",
            },
            "firstName": Object {
              "type": "string",
            },
            "lastName": Object {
              "type": "string",
            },
            "nationality": Object {
              "type": "string",
            },
          },
          "required": Array [
            "firstName",
            "lastName",
          ],
          "type": "object",
        },
        "trip": Object {
          "properties": Object {
            "begin": Object {
              "format": "date-time",
              "type": "string",
            },
            "city": Object {
              "type": "string",
            },
            "country": Object {
              "type": "string",
            },
            "end": Object {
              "format": "date-time",
              "type": "string",
            },
            "visaRequired": Object {
              "type": "boolean",
            },
          },
          "type": "object",
        },
        "visaApplication": Object {
          "properties": Object {
            "city": Object {
              "type": "string",
            },
            "country": Object {
              "type": "string",
            },
            "duration": Object {
              "type": "integer",
            },
            "firstName": Object {
              "type": "string",
            },
            "lastName": Object {
              "type": "string",
            },
            "nationality": Object {
              "type": "string",
            },
            "passportNumber": Object {
              "type": "string",
            },
          },
          "type": "object",
        },
      },
      "type": "object",
    }
  }
  model={
    Object {
      "NodeName": "Apply for visa",
      "Priority": "1",
      "Skippable": "true",
      "TaskName": "VisaApplication",
      "traveller": Object {
        "address": Object {
          "city": "Zerf",
          "country": "Poland",
          "street": "Cabalone",
          "zipCode": "765756",
        },
        "email": "rwhite@gorle.com",
        "firstName": "Rachel",
        "lastName": "White",
        "nationality": "Polish",
      },
      "trip": Object {
        "city": "Boston",
        "country": "US",
        "visaRequired": true,
      },
    }
  }
  onSubmit={[MockFunction]}
  readOnly={false}
>
  <AutoValidatedQuickPatternflyForm
    autosave={false}
    autosaveDelay={0}
    data-ouia-component-type="form-renderer"
    data-ouia-safe={true}
    disabled={false}
    error={null}
    label={true}
    model={
      Object {
        "NodeName": "Apply for visa",
        "Priority": "1",
        "Skippable": "true",
        "TaskName": "VisaApplication",
        "traveller": Object {
          "address": Object {
            "city": "Zerf",
            "country": "Poland",
            "street": "Cabalone",
            "zipCode": "765756",
          },
          "email": "rwhite@gorle.com",
          "firstName": "Rachel",
          "lastName": "White",
          "nationality": "Polish",
        },
        "trip": Object {
          "city": "Boston",
          "country": "US",
          "visaRequired": true,
        },
      }
    }
    noValidate={true}
    onSubmit={[Function]}
    onValidate={[Function]}
    placeholder={true}
    schema={
      JSONSchemaBridge {
        "_compiledSchema": Object {},
        "getField": [Function],
        "getSubfields": [Function],
        "getType": [Function],
        "schema": Object {
          "phases": Array [
            "complete",
            "release",
          ],
          "properties": Object {
            "traveller": Object {
              "properties": Object {
                "address": Object {
                  "properties": Object {
                    "city": Object {
                      "type": "string",
                    },
                    "country": Object {
                      "type": "string",
                    },
                    "street": Object {
                      "type": "string",
                    },
                    "zipCode": Object {
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
                "email": Object {
                  "format": "email",
                  "type": "string",
                },
                "firstName": Object {
                  "type": "string",
                },
                "lastName": Object {
                  "type": "string",
                },
                "nationality": Object {
                  "type": "string",
                },
              },
              "required": Array [
                "firstName",
                "lastName",
              ],
              "type": "object",
            },
            "trip": Object {
              "properties": Object {
                "begin": Object {
                  "format": "date-time",
                  "type": "string",
                },
                "city": Object {
                  "type": "string",
                },
                "country": Object {
                  "type": "string",
                },
                "end": Object {
                  "format": "date-time",
                  "type": "string",
                },
                "visaRequired": Object {
                  "type": "boolean",
                },
              },
              "type": "object",
            },
            "visaApplication": Object {
              "properties": Object {
                "city": Object {
                  "type": "string",
                },
                "country": Object {
                  "type": "string",
                },
                "duration": Object {
                  "type": "integer",
                },
                "firstName": Object {
                  "type": "string",
                },
                "lastName": Object {
                  "type": "string",
                },
                "nationality": Object {
                  "type": "string",
                },
                "passportNumber": Object {
                  "type": "string",
                },
              },
              "type": "object",
            },
          },
          "type": "object",
        },
        "validator": [Function],
      }
    }
    showInlineError={true}
    validate="onChangeAfterSubmit"
  >
    <Form
      data-ouia-component-type="form-renderer"
      data-ouia-safe={true}
      key="reset-0"
      noValidate={true}
      onSubmit={[Function]}
    >
      <form
        className="pf-c-form"
        data-ouia-component-type="form-renderer"
        data-ouia-safe={true}
        noValidate={true}
        onSubmit={[Function]}
      >
        <ErrorsField>
          <MockedComponent />
        </ErrorsField>
        <AutoFields>
          <MockedComponent />
        </AutoFields>
        <MockedFormFooter
          actions={
            Array [
              Object {
                "execute": [MockFunction],
                "name": "complete",
              },
            ]
          }
          enabled={true}
        />
      </form>
    </Form>
  </AutoValidatedQuickPatternflyForm>
</FormRenderer>
`;

exports[`FormRenderer test Render form without actions 1`] = `
<FormRenderer
  formActions={Array []}
  formSchema={
    Object {
      "phases": Array [
        "complete",
        "release",
      ],
      "properties": Object {
        "traveller": Object {
          "properties": Object {
            "address": Object {
              "properties": Object {
                "city": Object {
                  "type": "string",
                },
                "country": Object {
                  "type": "string",
                },
                "street": Object {
                  "type": "string",
                },
                "zipCode": Object {
                  "type": "string",
                },
              },
              "type": "object",
            },
            "email": Object {
              "format": "email",
              "type": "string",
            },
            "firstName": Object {
              "type": "string",
            },
            "lastName": Object {
              "type": "string",
            },
            "nationality": Object {
              "type": "string",
            },
          },
          "required": Array [
            "firstName",
            "lastName",
          ],
          "type": "object",
        },
        "trip": Object {
          "properties": Object {
            "begin": Object {
              "format": "date-time",
              "type": "string",
            },
            "city": Object {
              "type": "string",
            },
            "country": Object {
              "type": "string",
            },
            "end": Object {
              "format": "date-time",
              "type": "string",
            },
            "visaRequired": Object {
              "type": "boolean",
            },
          },
          "type": "object",
        },
        "visaApplication": Object {
          "properties": Object {
            "city": Object {
              "type": "string",
            },
            "country": Object {
              "type": "string",
            },
            "duration": Object {
              "type": "integer",
            },
            "firstName": Object {
              "type": "string",
            },
            "lastName": Object {
              "type": "string",
            },
            "nationality": Object {
              "type": "string",
            },
            "passportNumber": Object {
              "type": "string",
            },
          },
          "type": "object",
        },
      },
      "type": "object",
    }
  }
  model={
    Object {
      "NodeName": "Apply for visa",
      "Priority": "1",
      "Skippable": "true",
      "TaskName": "VisaApplication",
      "traveller": Object {
        "address": Object {
          "city": "Zerf",
          "country": "Poland",
          "street": "Cabalone",
          "zipCode": "765756",
        },
        "email": "rwhite@gorle.com",
        "firstName": "Rachel",
        "lastName": "White",
        "nationality": "Polish",
      },
      "trip": Object {
        "city": "Boston",
        "country": "US",
        "visaRequired": true,
      },
    }
  }
  onSubmit={[MockFunction]}
  readOnly={false}
>
  <AutoValidatedQuickPatternflyForm
    autosave={false}
    autosaveDelay={0}
    data-ouia-component-type="form-renderer"
    data-ouia-safe={true}
    disabled={true}
    error={null}
    label={true}
    model={
      Object {
        "NodeName": "Apply for visa",
        "Priority": "1",
        "Skippable": "true",
        "TaskName": "VisaApplication",
        "traveller": Object {
          "address": Object {
            "city": "Zerf",
            "country": "Poland",
            "street": "Cabalone",
            "zipCode": "765756",
          },
          "email": "rwhite@gorle.com",
          "firstName": "Rachel",
          "lastName": "White",
          "nationality": "Polish",
        },
        "trip": Object {
          "city": "Boston",
          "country": "US",
          "visaRequired": true,
        },
      }
    }
    noValidate={true}
    onSubmit={[Function]}
    onValidate={[Function]}
    placeholder={true}
    schema={
      JSONSchemaBridge {
        "_compiledSchema": Object {},
        "getField": [Function],
        "getSubfields": [Function],
        "getType": [Function],
        "schema": Object {
          "phases": Array [
            "complete",
            "release",
          ],
          "properties": Object {
            "traveller": Object {
              "properties": Object {
                "address": Object {
                  "properties": Object {
                    "city": Object {
                      "type": "string",
                    },
                    "country": Object {
                      "type": "string",
                    },
                    "street": Object {
                      "type": "string",
                    },
                    "zipCode": Object {
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
                "email": Object {
                  "format": "email",
                  "type": "string",
                },
                "firstName": Object {
                  "type": "string",
                },
                "lastName": Object {
                  "type": "string",
                },
                "nationality": Object {
                  "type": "string",
                },
              },
              "required": Array [
                "firstName",
                "lastName",
              ],
              "type": "object",
            },
            "trip": Object {
              "properties": Object {
                "begin": Object {
                  "format": "date-time",
                  "type": "string",
                },
                "city": Object {
                  "type": "string",
                },
                "country": Object {
                  "type": "string",
                },
                "end": Object {
                  "format": "date-time",
                  "type": "string",
                },
                "visaRequired": Object {
                  "type": "boolean",
                },
              },
              "type": "object",
            },
            "visaApplication": Object {
              "properties": Object {
                "city": Object {
                  "type": "string",
                },
                "country": Object {
                  "type": "string",
                },
                "duration": Object {
                  "type": "integer",
                },
                "firstName": Object {
                  "type": "string",
                },
                "lastName": Object {
                  "type": "string",
                },
                "nationality": Object {
                  "type": "string",
                },
                "passportNumber": Object {
                  "type": "string",
                },
              },
              "type": "object",
            },
          },
          "type": "object",
        },
        "validator": [Function],
      }
    }
    showInlineError={true}
    validate="onChangeAfterSubmit"
  >
    <Form
      data-ouia-component-type="form-renderer"
      data-ouia-safe={true}
      key="reset-0"
      noValidate={true}
      onSubmit={[Function]}
    >
      <form
        className="pf-c-form"
        data-ouia-component-type="form-renderer"
        data-ouia-safe={true}
        noValidate={true}
        onSubmit={[Function]}
      >
        <ErrorsField>
          <MockedComponent />
        </ErrorsField>
        <AutoFields>
          <MockedComponent />
        </AutoFields>
        <MockedFormFooter
          actions={Array []}
          enabled={true}
        />
      </form>
    </Form>
  </AutoValidatedQuickPatternflyForm>
</FormRenderer>
`;
