// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Domain Explorer component Check error response for getQueryFields query 1`] = `
<DomainExplorer
  defaultChip={
    Array [
      "metadata / processInstances / state: ACTIVE",
    ]
  }
  defaultFilter={
    Object {
      "metadata": Object {
        "processInstances": Object {
          "state": Object {
            "equal": "ACTIVE",
          },
        },
      },
    }
  }
  domainName="Travels"
  domains={
    Array [
      "Travels",
      "VisaApplications",
    ]
  }
  history={
    Object {
      "locations": Object {
        "key": "ugubul",
      },
    }
  }
  loadingState={false}
  location={
    Object {
      "key": "ugubul",
      "pathname": "/DomainExplorer/Travels",
      "state": Object {
        "finalFilters": Object {
          "metadata": Object {
            "processInstances": Object {
              "state": Object {
                "equal": "ACTIVE",
              },
            },
          },
        },
        "parameters": Array [
          Object {
            "flight": Array [
              "arrival",
            ],
          },
          Object {
            "flight": Array [
              "departure",
            ],
          },
        ],
      },
    }
  }
  match={
    Object {
      "params": Object {
        "domainName": "Travels",
      },
    }
  }
  metaData={
    Object {
      "metadata": Array [
        Object {
          "processInstances": Array [
            "id",
            "processName",
            "state",
            "start",
            "lastUpdate",
            "businessKey",
            "serviceUrl",
          ],
        },
      ],
    }
  }
  rememberedChips={
    Array [
      "metadata / processInstances / state: ACTIVE",
    ]
  }
  rememberedFilters={
    Object {
      "metadata": Object {
        "processInstances": Object {
          "state": Object {
            "equal": "ACTIVE",
          },
        },
      },
    }
  }
  rememberedParams={
    Array [
      Object {
        "flight": Array [
          "arrival",
        ],
      },
      Object {
        "flight": Array [
          "departure",
        ],
      },
    ]
  }
  rememberedSelections={Array []}
>
  <withRouter(ServerErrors)
    error={Object {}}
    variant="large"
  >
    <ServerErrors
      error={Object {}}
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
      location={
        Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        }
      }
      match={
        Object {
          "isExact": true,
          "params": Object {},
          "path": "/",
          "url": "/",
        }
      }
      variant="large"
    >
      <PageSection
        variant="light"
      >
        <section
          className="pf-c-page__main-section pf-m-light"
        >
          <Bullseye
            data-ouia-component-type="server-errors"
            data-ouia-safe={true}
          >
            <div
              className="pf-l-bullseye"
              data-ouia-component-type="server-errors"
              data-ouia-safe={true}
            >
              <EmptyState
                variant="full"
              >
                <div
                  className="pf-c-empty-state"
                >
                  <div
                    className="pf-c-empty-state__content"
                  >
                    <EmptyStateIcon
                      color="var(--pf-global--danger-color--100)"
                      icon={[Function]}
                    >
                      <ExclamationCircleIcon
                        aria-hidden="true"
                        className="pf-c-empty-state__icon"
                        color="var(--pf-global--danger-color--100)"
                        noVerticalAlign={false}
                        size="sm"
                      >
                        <svg
                          aria-hidden="true"
                          aria-labelledby={null}
                          className="pf-c-empty-state__icon"
                          fill="var(--pf-global--danger-color--100)"
                          height="1em"
                          role="img"
                          style={
                            Object {
                              "verticalAlign": "-0.125em",
                            }
                          }
                          viewBox="0 0 512 512"
                          width="1em"
                        >
                          <path
                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                            transform=""
                          />
                        </svg>
                      </ExclamationCircleIcon>
                    </EmptyStateIcon>
                    <Title
                      headingLevel="h1"
                      size="4xl"
                    >
                      <h1
                        className="pf-c-title pf-m-4xl"
                      >
                        Error fetching data
                      </h1>
                    </Title>
                    <EmptyStateBody>
                      <div
                        className="pf-c-empty-state__body"
                      >
                        An error occurred while accessing data.
                         
                        <Button
                          id="display-error"
                          isInline={true}
                          onClick={[Function]}
                          variant="link"
                        >
                          <button
                            aria-disabled={false}
                            aria-label={null}
                            className="pf-c-button pf-m-link pf-m-inline"
                            data-ouia-component-id={120}
                            data-ouia-component-type="PF4/Button"
                            data-ouia-safe={true}
                            disabled={false}
                            id="display-error"
                            onClick={[Function]}
                            type="button"
                          >
                            See more details
                          </button>
                        </Button>
                      </div>
                    </EmptyStateBody>
                    <Button
                      id="goback-button"
                      onClick={[Function]}
                      variant="primary"
                    >
                      <button
                        aria-disabled={false}
                        aria-label={null}
                        className="pf-c-button pf-m-primary"
                        data-ouia-component-id={121}
                        data-ouia-component-type="PF4/Button"
                        data-ouia-safe={true}
                        disabled={false}
                        id="goback-button"
                        onClick={[Function]}
                        type="button"
                      >
                        Go back
                      </button>
                    </Button>
                  </div>
                </div>
              </EmptyState>
            </div>
          </Bullseye>
        </section>
      </PageSection>
    </ServerErrors>
  </withRouter(ServerErrors)>
</DomainExplorer>
`;

exports[`Domain Explorer component Mock query testing 1`] = `
<DomainExplorer
  defaultChip={
    Array [
      "metadata / processInstances / state: ACTIVE",
    ]
  }
  defaultFilter={
    Object {
      "metadata": Object {
        "processInstances": Object {
          "state": Object {
            "equal": "ACTIVE",
          },
        },
      },
    }
  }
  domainName="Travels"
  domains={
    Array [
      "Travels",
      "VisaApplications",
    ]
  }
  history={
    Object {
      "locations": Object {
        "key": "ugubul",
      },
    }
  }
  loadingState={false}
  location={
    Object {
      "key": "ugubul",
      "pathname": "/DomainExplorer/Travels",
      "state": Object {
        "finalFilters": Object {
          "metadata": Object {
            "processInstances": Object {
              "state": Object {
                "equal": "ACTIVE",
              },
            },
          },
        },
        "parameters": Array [
          Object {
            "flight": Array [
              "arrival",
            ],
          },
          Object {
            "flight": Array [
              "departure",
            ],
          },
        ],
      },
    }
  }
  match={
    Object {
      "params": Object {
        "domainName": "Travels",
      },
    }
  }
  metaData={
    Object {
      "metadata": Array [
        Object {
          "processInstances": Array [
            "id",
            "processName",
            "state",
            "start",
            "lastUpdate",
            "businessKey",
            "serviceUrl",
          ],
        },
      ],
    }
  }
  rememberedChips={
    Array [
      "metadata / processInstances / state: ACTIVE",
    ]
  }
  rememberedFilters={
    Object {
      "metadata": Object {
        "processInstances": Object {
          "state": Object {
            "equal": "ACTIVE",
          },
        },
      },
    }
  }
  rememberedParams={
    Array [
      Object {
        "flight": Array [
          "arrival",
        ],
      },
      Object {
        "flight": Array [
          "departure",
        ],
      },
    ]
  }
  rememberedSelections={Array []}
>
  <Toolbar
    className="pf-m-toggle-group-container"
    clearAllFilters={[Function]}
    clearFiltersButtonText="Reset to default"
    collapseListedFiltersBreakpoint="md"
    id="data-toolbar-with-chip-groups"
  >
    <div
      className="pf-c-toolbar pf-m-toggle-group-container"
      id="data-toolbar-with-chip-groups"
    >
      <ToolbarContent
        isExpanded={false}
        showClearFiltersButton={false}
      >
        <div
          className="pf-c-toolbar__content"
        >
          <div
            className="pf-c-toolbar__content-section"
          >
            <ToolbarToggleGroup
              breakpoint="xl"
              toggleIcon={
                <FilterIcon
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
              }
            >
              <div
                className="pf-c-toolbar__group pf-m-toggle-group pf-m-show-on-xl"
              >
                <div
                  className="pf-c-toolbar__toggle"
                >
                  <Button
                    aria-controls="data-toolbar-with-chip-groups-expandable-content-20"
                    aria-haspopup={false}
                    aria-label="Show Filters"
                    onClick={[Function]}
                    variant="plain"
                  >
                    <button
                      aria-controls="data-toolbar-with-chip-groups-expandable-content-20"
                      aria-disabled={false}
                      aria-haspopup={false}
                      aria-label="Show Filters"
                      className="pf-c-button pf-m-plain"
                      data-ouia-component-id={186}
                      data-ouia-component-type="PF4/Button"
                      data-ouia-safe={true}
                      disabled={false}
                      onClick={[Function]}
                      type="button"
                    >
                      <FilterIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                      >
                        <svg
                          aria-hidden={true}
                          aria-labelledby={null}
                          fill="currentColor"
                          height="1em"
                          role="img"
                          style={
                            Object {
                              "verticalAlign": "-0.125em",
                            }
                          }
                          viewBox="0 0 512 512"
                          width="1em"
                        >
                          <path
                            d="M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z"
                            transform=""
                          />
                        </svg>
                      </FilterIcon>
                    </button>
                  </Button>
                </div>
                <ToolbarFilter
                  categoryName="Filters"
                  chips={
                    Array [
                      "metadata / processInstances / state: ACTIVE",
                    ]
                  }
                  deleteChip={[Function]}
                  showToolbarItem={true}
                >
                  <ToolbarItem>
                    <div
                      className="pf-c-toolbar__item"
                    >
                      <Memo(DomainExplorerFilterOptions)
                        filterChips={
                          Array [
                            "metadata / processInstances / state: ACTIVE",
                          ]
                        }
                        finalFilters={
                          Object {
                            "metadata": Object {
                              "processInstances": Object {
                                "state": Object {
                                  "equal": "ACTIVE",
                                },
                              },
                            },
                          }
                        }
                        generateFilterQuery={[Function]}
                        getQueryTypes={
                          Object {
                            "data": Object {
                              "__schema": Object {
                                "queryType": Array [
                                  Object {
                                    "inputFields": Array [
                                      Object {
                                        "name": "test",
                                        "type": Object {
                                          "kind": "INPUT_OBJECT",
                                          "name": "StringArgument",
                                        },
                                      },
                                    ],
                                    "name": "TestArgument",
                                  },
                                  Object {
                                    "inputFields": Array [
                                      Object {
                                        "name": "city",
                                        "type": Object {
                                          "kind": "INPUT_OBJECT",
                                          "name": "StringArgument",
                                        },
                                      },
                                      Object {
                                        "name": "country",
                                        "type": Object {
                                          "kind": "INPUT_OBJECT",
                                          "name": "StringArgument",
                                        },
                                      },
                                      Object {
                                        "name": "street",
                                        "type": Object {
                                          "kind": "INPUT_OBJECT",
                                          "name": "TestArgument",
                                        },
                                      },
                                      Object {
                                        "name": "zipCode",
                                        "type": Object {
                                          "kind": "INPUT_OBJECT",
                                          "name": "StringArgument",
                                        },
                                      },
                                    ],
                                    "kind": "INPUT_OBJECT",
                                    "name": "AddressArgument",
                                  },
                                  Object {
                                    "inputFields": Array [
                                      Object {
                                        "name": "id",
                                        "type": Object {
                                          "kind": "LIST",
                                          "name": null,
                                        },
                                      },
                                      Object {
                                        "name": "equal",
                                        "type": Object {
                                          "kind": "SCALAR",
                                          "name": "String",
                                        },
                                      },
                                      Object {
                                        "name": "isNull",
                                        "type": Object {
                                          "kind": "SCALAR",
                                          "name": "Boolean",
                                        },
                                      },
                                    ],
                                    "kind": "INPUT_OBJECT",
                                    "name": "IdArgument",
                                  },
                                ],
                              },
                            },
                            "loading": false,
                          }
                        }
                        getSchema={
                          Object {
                            "data": Object {},
                            "loading": false,
                          }
                        }
                        reset={false}
                        runQuery={false}
                        setFilterChips={[Function]}
                        setFinalFilters={[Function]}
                        setOffset={[Function]}
                        setReset={[Function]}
                        setRunQuery={[Function]}
                      >
                        <ToolbarItem
                          data-ouia-component-type="filter-options"
                          data-ouia-safe={true}
                        >
                          <div
                            className="pf-c-toolbar__item"
                            data-ouia-component-type="filter-options"
                            data-ouia-safe={true}
                          >
                            <Select
                              aria-label=""
                              aria-labelledby="Select a field"
                              className=""
                              clearSelectionsAriaLabel="Clear all"
                              createText="Create"
                              customBadgeText={null}
                              customContent={null}
                              direction="down"
                              hasInlineFilter={false}
                              id="select-field"
                              inlineFilterPlaceholderText={null}
                              inputIdPrefix=""
                              isCreatable={false}
                              isDisabled={false}
                              isGrouped={true}
                              isOpen={false}
                              isPlain={false}
                              maxHeight="60vh"
                              menuAppendTo="inline"
                              noResultsFoundText="No results found"
                              onClear={[Function]}
                              onCreateOption={[Function]}
                              onFilter={null}
                              onSelect={[Function]}
                              onToggle={[Function]}
                              ouiaSafe={true}
                              placeholderText="Select a field"
                              removeSelectionAriaLabel="Remove"
                              selections="id"
                              toggleAriaLabel="Options menu"
                              toggleIcon={null}
                              toggleId={null}
                              typeAheadAriaLabel=""
                              variant="single"
                              width=""
                            >
                              <GenerateId
                                prefix="pf-random-id-"
                              >
                                <div
                                  className="pf-c-select"
                                  data-ouia-component-id={187}
                                  data-ouia-component-type="PF4/Select"
                                  data-ouia-safe={true}
                                >
                                  <SelectToggle
                                    aria-label="Options menu"
                                    aria-labelledby="Select a field pf-select-toggle-id-44"
                                    className=""
                                    handleTypeaheadKeys={[Function]}
                                    hasClearButton={false}
                                    id="pf-select-toggle-id-44"
                                    isActive={false}
                                    isDisabled={false}
                                    isOpen={false}
                                    isPlain={false}
                                    menuRef={
                                      Object {
                                        "current": null,
                                      }
                                    }
                                    onClose={[Function]}
                                    onEnter={[Function]}
                                    onToggle={[Function]}
                                    parentRef={
                                      Object {
                                        "current": <div
                                          class="pf-c-select"
                                          data-ouia-component-id="187"
                                          data-ouia-component-type="PF4/Select"
                                          data-ouia-safe="true"
                                        >
                                          <button
                                            aria-expanded="false"
                                            aria-haspopup="listbox"
                                            aria-labelledby="Select a field pf-select-toggle-id-44"
                                            class="pf-c-select__toggle"
                                            id="pf-select-toggle-id-44"
                                            type="button"
                                          >
                                            <div
                                              class="pf-c-select__toggle-wrapper"
                                            >
                                              <span
                                                class="pf-c-select__toggle-text"
                                              >
                                                id
                                              </span>
                                            </div>
                                            <span
                                              class="pf-c-select__toggle-arrow"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                fill="currentColor"
                                                height="1em"
                                                role="img"
                                                style="vertical-align: -0.125em;"
                                                viewBox="0 0 320 512"
                                                width="1em"
                                              >
                                                <path
                                                  d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                  transform=""
                                                />
                                              </svg>
                                            </span>
                                          </button>
                                        </div>,
                                      }
                                    }
                                    type="button"
                                    variant="single"
                                  >
                                    <button
                                      aria-expanded={false}
                                      aria-haspopup="listbox"
                                      aria-labelledby="Select a field pf-select-toggle-id-44"
                                      className="pf-c-select__toggle"
                                      disabled={false}
                                      id="pf-select-toggle-id-44"
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      type="button"
                                    >
                                      <div
                                        className="pf-c-select__toggle-wrapper"
                                      >
                                        <span
                                          className="pf-c-select__toggle-text"
                                        >
                                          id
                                        </span>
                                      </div>
                                      <span
                                        className="pf-c-select__toggle-arrow"
                                      >
                                        <CaretDownIcon
                                          color="currentColor"
                                          noVerticalAlign={false}
                                          size="sm"
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 320 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                              transform=""
                                            />
                                          </svg>
                                        </CaretDownIcon>
                                      </span>
                                    </button>
                                  </SelectToggle>
                                </div>
                              </GenerateId>
                            </Select>
                            <Select
                              aria-label="Location"
                              aria-labelledby=""
                              className=""
                              clearSelectionsAriaLabel="Clear all"
                              createText="Create"
                              customBadgeText={null}
                              customContent={null}
                              direction="down"
                              hasInlineFilter={false}
                              id="select-operator"
                              inlineFilterPlaceholderText={null}
                              inputIdPrefix=""
                              isCreatable={false}
                              isDisabled={false}
                              isGrouped={false}
                              isOpen={false}
                              isPlain={false}
                              menuAppendTo="inline"
                              noResultsFoundText="No results found"
                              onClear={[Function]}
                              onCreateOption={[Function]}
                              onFilter={null}
                              onSelect={[Function]}
                              onToggle={[Function]}
                              ouiaSafe={true}
                              placeholderText="operator"
                              removeSelectionAriaLabel="Remove"
                              selections="equal"
                              toggleAriaLabel="Options menu"
                              toggleIcon={null}
                              toggleId={null}
                              typeAheadAriaLabel=""
                              variant="single"
                              width=""
                            >
                              <GenerateId
                                prefix="pf-random-id-"
                              >
                                <div
                                  className="pf-c-select"
                                  data-ouia-component-id={188}
                                  data-ouia-component-type="PF4/Select"
                                  data-ouia-safe={true}
                                >
                                  <SelectToggle
                                    aria-label="Options menu"
                                    aria-labelledby=" pf-select-toggle-id-45"
                                    className=""
                                    handleTypeaheadKeys={[Function]}
                                    hasClearButton={false}
                                    id="pf-select-toggle-id-45"
                                    isActive={false}
                                    isDisabled={false}
                                    isOpen={false}
                                    isPlain={false}
                                    menuRef={
                                      Object {
                                        "current": null,
                                      }
                                    }
                                    onClose={[Function]}
                                    onEnter={[Function]}
                                    onToggle={[Function]}
                                    parentRef={
                                      Object {
                                        "current": <div
                                          class="pf-c-select"
                                          data-ouia-component-id="188"
                                          data-ouia-component-type="PF4/Select"
                                          data-ouia-safe="true"
                                        >
                                          <button
                                            aria-expanded="false"
                                            aria-haspopup="listbox"
                                            aria-labelledby=" pf-select-toggle-id-45"
                                            class="pf-c-select__toggle"
                                            id="pf-select-toggle-id-45"
                                            type="button"
                                          >
                                            <div
                                              class="pf-c-select__toggle-wrapper"
                                            >
                                              <span
                                                class="pf-c-select__toggle-text"
                                              >
                                                equal
                                              </span>
                                            </div>
                                            <span
                                              class="pf-c-select__toggle-arrow"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                fill="currentColor"
                                                height="1em"
                                                role="img"
                                                style="vertical-align: -0.125em;"
                                                viewBox="0 0 320 512"
                                                width="1em"
                                              >
                                                <path
                                                  d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                  transform=""
                                                />
                                              </svg>
                                            </span>
                                          </button>
                                        </div>,
                                      }
                                    }
                                    type="button"
                                    variant="single"
                                  >
                                    <button
                                      aria-expanded={false}
                                      aria-haspopup="listbox"
                                      aria-labelledby=" pf-select-toggle-id-45"
                                      className="pf-c-select__toggle"
                                      disabled={false}
                                      id="pf-select-toggle-id-45"
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      type="button"
                                    >
                                      <div
                                        className="pf-c-select__toggle-wrapper"
                                      >
                                        <span
                                          className="pf-c-select__toggle-text"
                                        >
                                          equal
                                        </span>
                                      </div>
                                      <span
                                        className="pf-c-select__toggle-arrow"
                                      >
                                        <CaretDownIcon
                                          color="currentColor"
                                          noVerticalAlign={false}
                                          size="sm"
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 320 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                              transform=""
                                            />
                                          </svg>
                                        </CaretDownIcon>
                                      </span>
                                    </button>
                                  </SelectToggle>
                                </div>
                              </GenerateId>
                            </Select>
                            <ForwardRef
                              aria-label="filter text for id"
                              className="kogito-common--filter-options__inputs"
                              id="textBox-input"
                              name="filterText"
                              onChange={[Function]}
                              placeholder="value"
                              type="search"
                              value=""
                            >
                              <TextInputBase
                                aria-label="filter text for id"
                                className="kogito-common--filter-options__inputs"
                                id="textBox-input"
                                innerRef={null}
                                isDisabled={false}
                                isReadOnly={false}
                                isRequired={false}
                                name="filterText"
                                onChange={[Function]}
                                placeholder="value"
                                type="search"
                                validated="default"
                                value=""
                              >
                                <input
                                  aria-invalid={false}
                                  aria-label="filter text for id"
                                  className="pf-c-form-control kogito-common--filter-options__inputs"
                                  disabled={false}
                                  id="textBox-input"
                                  name="filterText"
                                  onChange={[Function]}
                                  placeholder="value"
                                  readOnly={false}
                                  required={false}
                                  type="search"
                                  value=""
                                />
                              </TextInputBase>
                            </ForwardRef>
                            <Button
                              id="button-with-string"
                              isDisabled={true}
                              onClick={[Function]}
                              variant="primary"
                            >
                              <button
                                aria-disabled={true}
                                aria-label={null}
                                className="pf-c-button pf-m-primary pf-m-disabled"
                                data-ouia-component-id={189}
                                data-ouia-component-type="PF4/Button"
                                data-ouia-safe={true}
                                disabled={true}
                                id="button-with-string"
                                onClick={[Function]}
                                tabIndex={null}
                                type="button"
                              >
                                Apply Filter
                              </button>
                            </Button>
                          </div>
                        </ToolbarItem>
                      </Memo(DomainExplorerFilterOptions)>
                    </div>
                  </ToolbarItem>
                  <Portal
                    containerInfo={
                      <div
                        class="pf-c-toolbar__group"
                      >
                        <div
                          class="pf-c-toolbar__item pf-m-chip-group"
                        >
                          <div
                            class="pf-c-chip-group pf-m-category"
                          >
                            <span
                              aria-hidden="true"
                              class="pf-c-chip-group__label"
                              id="pf-random-id-10"
                            >
                              Filters
                            </span>
                            <ul
                              aria-labelledby="pf-random-id-10"
                              class="pf-c-chip-group__list"
                              role="list"
                            >
                              <li
                                class="pf-c-chip-group__list-item"
                              >
                                <div
                                  class="pf-c-chip"
                                  data-ouia-component-id="190"
                                  data-ouia-component-type="PF4/Chip"
                                  data-ouia-safe="true"
                                >
                                  <span
                                    class="pf-c-chip__text"
                                    id="pf-random-id-11"
                                  >
                                    metadata / processInstances / state: ACTIVE
                                  </span>
                                  <button
                                    aria-disabled="false"
                                    aria-label="close"
                                    aria-labelledby="remove_pf-random-id-11 pf-random-id-11"
                                    class="pf-c-button pf-m-plain"
                                    data-ouia-component-id="191"
                                    data-ouia-component-type="PF4/Button"
                                    data-ouia-safe="true"
                                    id="remove_pf-random-id-11"
                                    type="button"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      fill="currentColor"
                                      height="1em"
                                      role="img"
                                      style="vertical-align: -0.125em;"
                                      viewBox="0 0 352 512"
                                      width="1em"
                                    >
                                      <path
                                        d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                        transform=""
                                      />
                                    </svg>
                                  </button>
                                </div>
                              </li>
                            </ul>
                          </div>
                        </div>
                      </div>
                    }
                  >
                    <ToolbarItem
                      variant="chip-group"
                    >
                      <div
                        className="pf-c-toolbar__item pf-m-chip-group"
                      >
                        <ChipGroup
                          aria-label="Chip group category"
                          categoryName="Filters"
                          closeBtnAriaLabel="Close chip group"
                          collapsedText="\${remaining} more"
                          defaultIsOpen={false}
                          expandedText="Show Less"
                          isClosable={false}
                          key="Filters"
                          numChips={3}
                          onClick={[Function]}
                          tooltipPosition="top"
                        >
                          <GenerateId
                            prefix="pf-random-id-"
                          >
                            <div
                              className="pf-c-chip-group pf-m-category"
                            >
                              <span
                                aria-hidden="true"
                                className="pf-c-chip-group__label"
                                id="pf-random-id-10"
                              >
                                Filters
                              </span>
                              <ul
                                aria-labelledby="pf-random-id-10"
                                className="pf-c-chip-group__list"
                                role="list"
                              >
                                <li
                                  className="pf-c-chip-group__list-item"
                                  key="0"
                                >
                                  <Chip
                                    className=""
                                    closeBtnAriaLabel="close"
                                    component="div"
                                    isOverflowChip={false}
                                    isReadOnly={false}
                                    key=".$metadata / processInstances / state=2 ACTIVE"
                                    onClick={[Function]}
                                    tooltipPosition="top"
                                  >
                                    <GenerateId
                                      prefix="pf-random-id-"
                                    >
                                      <div
                                        className="pf-c-chip"
                                        data-ouia-component-id={190}
                                        data-ouia-component-type="PF4/Chip"
                                        data-ouia-safe={true}
                                      >
                                        <span
                                          className="pf-c-chip__text"
                                          id="pf-random-id-11"
                                        >
                                          metadata / processInstances / state: ACTIVE
                                        </span>
                                        <Button
                                          aria-label="close"
                                          aria-labelledby="remove_pf-random-id-11 pf-random-id-11"
                                          id="remove_pf-random-id-11"
                                          onClick={[Function]}
                                          variant="plain"
                                        >
                                          <button
                                            aria-disabled={false}
                                            aria-label="close"
                                            aria-labelledby="remove_pf-random-id-11 pf-random-id-11"
                                            className="pf-c-button pf-m-plain"
                                            data-ouia-component-id={191}
                                            data-ouia-component-type="PF4/Button"
                                            data-ouia-safe={true}
                                            disabled={false}
                                            id="remove_pf-random-id-11"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            <TimesIcon
                                              aria-hidden="true"
                                              color="currentColor"
                                              noVerticalAlign={false}
                                              size="sm"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                aria-labelledby={null}
                                                fill="currentColor"
                                                height="1em"
                                                role="img"
                                                style={
                                                  Object {
                                                    "verticalAlign": "-0.125em",
                                                  }
                                                }
                                                viewBox="0 0 352 512"
                                                width="1em"
                                              >
                                                <path
                                                  d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                                  transform=""
                                                />
                                              </svg>
                                            </TimesIcon>
                                          </button>
                                        </Button>
                                      </div>
                                    </GenerateId>
                                  </Chip>
                                </li>
                              </ul>
                            </div>
                          </GenerateId>
                        </ChipGroup>
                      </div>
                    </ToolbarItem>
                  </Portal>
                </ToolbarFilter>
              </div>
            </ToolbarToggleGroup>
            <ForwardRef>
              <ToolbarGroupWithRef
                innerRef={null}
              >
                <div
                  className="pf-c-toolbar__group"
                >
                  <ToolbarItem>
                    <div
                      className="pf-c-toolbar__item"
                    >
                      <MockedDomainExplorerManageColumns
                        columnPickerType="Travels"
                        data={
                          Array [
                            Object {
                              "name": "id",
                              "type": Object {
                                "fields": null,
                                "kind": "SCALAR",
                                "name": "String",
                              },
                            },
                            Object {
                              "name": "flight",
                              "type": Object {
                                "fields": Array [
                                  Object {
                                    "name": "arrival",
                                    "type": Object {
                                      "kind": "SCALAR",
                                      "name": "String",
                                    },
                                  },
                                ],
                                "kind": "OBJECT",
                                "name": "Flight",
                              },
                            },
                          ]
                        }
                        enableRefresh={true}
                        getPicker={
                          Object {
                            "data": Object {
                              "__type": Object {
                                "fields": Array [
                                  Object {
                                    "name": "flight",
                                    "type": Object {
                                      "fields": Array [
                                        Object {
                                          "name": "arrival",
                                          "type": Object {
                                            "kind": "SCALAR",
                                            "name": "String",
                                          },
                                        },
                                      ],
                                      "kind": "OBJECT",
                                      "name": "Flight",
                                    },
                                  },
                                  Object {
                                    "name": "id",
                                    "type": Object {
                                      "fields": null,
                                      "kind": "SCALAR",
                                      "name": "String",
                                    },
                                  },
                                ],
                              },
                            },
                            "loading": false,
                          }
                        }
                        getQueryTypes={
                          Object {
                            "data": Object {
                              "__schema": Object {
                                "queryType": Array [
                                  Object {
                                    "inputFields": Array [
                                      Object {
                                        "name": "test",
                                        "type": Object {
                                          "kind": "INPUT_OBJECT",
                                          "name": "StringArgument",
                                        },
                                      },
                                    ],
                                    "name": "TestArgument",
                                  },
                                  Object {
                                    "inputFields": Array [
                                      Object {
                                        "name": "city",
                                        "type": Object {
                                          "kind": "INPUT_OBJECT",
                                          "name": "StringArgument",
                                        },
                                      },
                                      Object {
                                        "name": "country",
                                        "type": Object {
                                          "kind": "INPUT_OBJECT",
                                          "name": "StringArgument",
                                        },
                                      },
                                      Object {
                                        "name": "street",
                                        "type": Object {
                                          "kind": "INPUT_OBJECT",
                                          "name": "TestArgument",
                                        },
                                      },
                                      Object {
                                        "name": "zipCode",
                                        "type": Object {
                                          "kind": "INPUT_OBJECT",
                                          "name": "StringArgument",
                                        },
                                      },
                                    ],
                                    "kind": "INPUT_OBJECT",
                                    "name": "AddressArgument",
                                  },
                                  Object {
                                    "inputFields": Array [
                                      Object {
                                        "name": "id",
                                        "type": Object {
                                          "kind": "LIST",
                                          "name": null,
                                        },
                                      },
                                      Object {
                                        "name": "equal",
                                        "type": Object {
                                          "kind": "SCALAR",
                                          "name": "String",
                                        },
                                      },
                                      Object {
                                        "name": "isNull",
                                        "type": Object {
                                          "kind": "SCALAR",
                                          "name": "Boolean",
                                        },
                                      },
                                    ],
                                    "kind": "INPUT_OBJECT",
                                    "name": "IdArgument",
                                  },
                                ],
                              },
                            },
                            "loading": false,
                          }
                        }
                        isModalOpen={false}
                        metaData={
                          Object {
                            "metadata": Array [
                              Object {
                                "processInstances": Array [
                                  "id",
                                  "processName",
                                  "state",
                                  "start",
                                  "lastUpdate",
                                  "businessKey",
                                  "serviceUrl",
                                ],
                              },
                            ],
                          }
                        }
                        selected={Array []}
                        setEnableRefresh={[Function]}
                        setIsModalOpen={[Function]}
                        setOffsetVal={[Function]}
                        setPageSize={[Function]}
                        setParameters={[Function]}
                        setRunQuery={[Function]}
                        setSelected={[Function]}
                      />
                    </div>
                  </ToolbarItem>
                </div>
              </ToolbarGroupWithRef>
            </ForwardRef>
          </div>
          <ToolbarExpandableContent
            chipContainerRef={
              Object {
                "current": <div
                  class="pf-c-toolbar__group"
                />,
              }
            }
            clearAllFilters={[Function]}
            clearFiltersButtonText="Reset to default"
            expandableContentRef={
              Object {
                "current": <div
                  class="pf-c-toolbar__expandable-content"
                  id="data-toolbar-with-chip-groups-expandable-content-20"
                >
                  <div
                    class="pf-c-toolbar__group"
                  />
                  <div
                    class="pf-c-toolbar__group pf-m-chip-container"
                  >
                    <div
                      class="pf-c-toolbar__group"
                    />
                    <div
                      class="pf-c-toolbar__item"
                    >
                      <button
                        aria-disabled="false"
                        class="pf-c-button pf-m-link pf-m-inline"
                        data-ouia-component-id="192"
                        data-ouia-component-type="PF4/Button"
                        data-ouia-safe="true"
                        type="button"
                      >
                        Reset to default
                      </button>
                    </div>
                  </div>
                </div>,
              }
            }
            id="data-toolbar-with-chip-groups-expandable-content-20"
            isExpanded={false}
            showClearFiltersButton={true}
          >
            <div
              className="pf-c-toolbar__expandable-content"
              id="data-toolbar-with-chip-groups-expandable-content-20"
            >
              <ForwardRef>
                <ToolbarGroupWithRef
                  innerRef={null}
                >
                  <div
                    className="pf-c-toolbar__group"
                  />
                </ToolbarGroupWithRef>
              </ForwardRef>
              <ForwardRef
                className="pf-m-chip-container"
              >
                <ToolbarGroupWithRef
                  className="pf-m-chip-container"
                  innerRef={null}
                >
                  <div
                    className="pf-c-toolbar__group pf-m-chip-container"
                  >
                    <ForwardRef>
                      <ToolbarGroupWithRef
                        innerRef={
                          Object {
                            "current": <div
                              class="pf-c-toolbar__group"
                            />,
                          }
                        }
                      >
                        <div
                          className="pf-c-toolbar__group"
                        />
                      </ToolbarGroupWithRef>
                    </ForwardRef>
                    <ToolbarItem>
                      <div
                        className="pf-c-toolbar__item"
                      >
                        <Button
                          isInline={true}
                          onClick={[Function]}
                          variant="link"
                        >
                          <button
                            aria-disabled={false}
                            aria-label={null}
                            className="pf-c-button pf-m-link pf-m-inline"
                            data-ouia-component-id={192}
                            data-ouia-component-type="PF4/Button"
                            data-ouia-safe={true}
                            disabled={false}
                            onClick={[Function]}
                            type="button"
                          >
                            Reset to default
                          </button>
                        </Button>
                      </div>
                    </ToolbarItem>
                  </div>
                </ToolbarGroupWithRef>
              </ForwardRef>
            </div>
          </ToolbarExpandableContent>
        </div>
      </ToolbarContent>
      <ToolbarChipGroupContent
        chipGroupContentRef={
          Object {
            "current": <div
              class="pf-c-toolbar__content"
            >
              <div
                class="pf-c-toolbar__group"
              >
                <div
                  class="pf-c-toolbar__item pf-m-chip-group"
                >
                  <div
                    class="pf-c-chip-group pf-m-category"
                  >
                    <span
                      aria-hidden="true"
                      class="pf-c-chip-group__label"
                      id="pf-random-id-10"
                    >
                      Filters
                    </span>
                    <ul
                      aria-labelledby="pf-random-id-10"
                      class="pf-c-chip-group__list"
                      role="list"
                    >
                      <li
                        class="pf-c-chip-group__list-item"
                      >
                        <div
                          class="pf-c-chip"
                          data-ouia-component-id="190"
                          data-ouia-component-type="PF4/Chip"
                          data-ouia-safe="true"
                        >
                          <span
                            class="pf-c-chip__text"
                            id="pf-random-id-11"
                          >
                            metadata / processInstances / state: ACTIVE
                          </span>
                          <button
                            aria-disabled="false"
                            aria-label="close"
                            aria-labelledby="remove_pf-random-id-11 pf-random-id-11"
                            class="pf-c-button pf-m-plain"
                            data-ouia-component-id="191"
                            data-ouia-component-type="PF4/Button"
                            data-ouia-safe="true"
                            id="remove_pf-random-id-11"
                            type="button"
                          >
                            <svg
                              aria-hidden="true"
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style="vertical-align: -0.125em;"
                              viewBox="0 0 352 512"
                              width="1em"
                            >
                              <path
                                d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                transform=""
                              />
                            </svg>
                          </button>
                        </div>
                      </li>
                    </ul>
                  </div>
                </div>
              </div>
              <div
                class="pf-c-toolbar__item"
              >
                <button
                  aria-disabled="false"
                  class="pf-c-button pf-m-link pf-m-inline"
                  data-ouia-component-id="193"
                  data-ouia-component-type="PF4/Button"
                  data-ouia-safe="true"
                  type="button"
                >
                  Reset to default
                </button>
              </div>
            </div>,
          }
        }
        clearAllFilters={[Function]}
        clearFiltersButtonText="Reset to default"
        collapseListedFiltersBreakpoint="md"
        isExpanded={false}
        numberOfFilters={1}
        showClearFiltersButton={true}
      >
        <div
          className="pf-c-toolbar__content"
        >
          <ForwardRef
            className=""
          >
            <ToolbarGroupWithRef
              className=""
              innerRef={null}
            >
              <div
                className="pf-c-toolbar__group"
              />
            </ToolbarGroupWithRef>
          </ForwardRef>
          <ToolbarItem>
            <div
              className="pf-c-toolbar__item"
            >
              <Button
                isInline={true}
                onClick={[Function]}
                variant="link"
              >
                <button
                  aria-disabled={false}
                  aria-label={null}
                  className="pf-c-button pf-m-link pf-m-inline"
                  data-ouia-component-id={193}
                  data-ouia-component-type="PF4/Button"
                  data-ouia-safe={true}
                  disabled={false}
                  onClick={[Function]}
                  type="button"
                >
                  Reset to default
                </button>
              </Button>
            </div>
          </ToolbarItem>
        </div>
      </ToolbarChipGroupContent>
    </div>
  </Toolbar>
  <Card
    className="kogito-common--domain-explorer__table-OverFlow"
    data-ouia-component-type="domain-explorer"
    data-ouia-safe={true}
  >
    <article
      className="pf-c-card kogito-common--domain-explorer__table-OverFlow"
      data-ouia-component-id={194}
      data-ouia-component-type="PF4/Card"
      data-ouia-safe={true}
    >
      <MockedDomainExplorerTable
        columnFilters={
          Array [
            undefined,
            undefined,
          ]
        }
        displayEmptyState={false}
        displayTable={true}
        filterChips={
          Array [
            "metadata / processInstances / state: ACTIVE",
          ]
        }
        filterError=""
        finalFilters={
          Object {
            "metadata": Object {
              "processInstances": Object {
                "state": Object {
                  "equal": "ACTIVE",
                },
              },
            },
          }
        }
        handleRetry={[Function]}
        isLoadingMore={false}
        offset={0}
        onDeleteChip={[Function]}
        parameters={
          Array [
            Object {
              "flight": Array [
                "arrival",
              ],
            },
            Object {
              "flight": Array [
                "departure",
              ],
            },
          ]
        }
        rows={Array []}
        selected={Array []}
        setOrderByObj={[Function]}
        setRows={[Function]}
        setRunQuery={[Function]}
        setSortBy={[Function]}
        sortBy={Object {}}
        tableLoading={false}
      />
    </article>
  </Card>
</DomainExplorer>
`;

exports[`Domain Explorer component Snapshot test with default prop 1`] = `
<DomainExplorer
  defaultChip={
    Array [
      "metadata / processInstances / state: ACTIVE",
    ]
  }
  defaultFilter={
    Object {
      "metadata": Object {
        "processInstances": Object {
          "state": Object {
            "equal": "ACTIVE",
          },
        },
      },
    }
  }
  domainName="Travels"
  domains={
    Array [
      "Travels",
      "VisaApplications",
    ]
  }
  history={
    Object {
      "locations": Object {
        "key": "ugubul",
      },
    }
  }
  loadingState={false}
  location={
    Object {
      "key": "ugubul",
      "pathname": "/DomainExplorer/Travels",
      "state": Object {
        "finalFilters": Object {
          "metadata": Object {
            "processInstances": Object {
              "state": Object {
                "equal": "ACTIVE",
              },
            },
          },
        },
        "parameters": Array [
          Object {
            "flight": Array [
              "arrival",
            ],
          },
          Object {
            "flight": Array [
              "departure",
            ],
          },
        ],
      },
    }
  }
  match={
    Object {
      "params": Object {
        "domainName": "Travels",
      },
    }
  }
  metaData={
    Object {
      "metadata": Array [
        Object {
          "processInstances": Array [
            "id",
            "processName",
            "state",
            "start",
            "lastUpdate",
            "businessKey",
            "serviceUrl",
          ],
        },
      ],
    }
  }
  rememberedChips={
    Array [
      "metadata / processInstances / state: ACTIVE",
    ]
  }
  rememberedFilters={
    Object {
      "metadata": Object {
        "processInstances": Object {
          "state": Object {
            "equal": "ACTIVE",
          },
        },
      },
    }
  }
  rememberedParams={
    Array [
      Object {
        "flight": Array [
          "arrival",
        ],
      },
      Object {
        "flight": Array [
          "departure",
        ],
      },
    ]
  }
  rememberedSelections={Array []}
>
  <Toolbar
    className="pf-m-toggle-group-container"
    clearAllFilters={[Function]}
    clearFiltersButtonText="Reset to default"
    collapseListedFiltersBreakpoint="md"
    id="data-toolbar-with-chip-groups"
  >
    <div
      className="pf-c-toolbar pf-m-toggle-group-container"
      id="data-toolbar-with-chip-groups"
    >
      <ToolbarContent
        isExpanded={false}
        showClearFiltersButton={false}
      >
        <div
          className="pf-c-toolbar__content"
        >
          <div
            className="pf-c-toolbar__content-section"
          >
            <ToolbarToggleGroup
              breakpoint="xl"
              toggleIcon={
                <FilterIcon
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
              }
            >
              <div
                className="pf-c-toolbar__group pf-m-toggle-group pf-m-show-on-xl"
              >
                <div
                  className="pf-c-toolbar__toggle"
                >
                  <Button
                    aria-controls="data-toolbar-with-chip-groups-expandable-content-5"
                    aria-haspopup={false}
                    aria-label="Show Filters"
                    onClick={[Function]}
                    variant="plain"
                  >
                    <button
                      aria-controls="data-toolbar-with-chip-groups-expandable-content-5"
                      aria-disabled={false}
                      aria-haspopup={false}
                      aria-label="Show Filters"
                      className="pf-c-button pf-m-plain"
                      data-ouia-component-id={46}
                      data-ouia-component-type="PF4/Button"
                      data-ouia-safe={true}
                      disabled={false}
                      onClick={[Function]}
                      type="button"
                    >
                      <FilterIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                      >
                        <svg
                          aria-hidden={true}
                          aria-labelledby={null}
                          fill="currentColor"
                          height="1em"
                          role="img"
                          style={
                            Object {
                              "verticalAlign": "-0.125em",
                            }
                          }
                          viewBox="0 0 512 512"
                          width="1em"
                        >
                          <path
                            d="M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z"
                            transform=""
                          />
                        </svg>
                      </FilterIcon>
                    </button>
                  </Button>
                </div>
                <ToolbarFilter
                  categoryName="Filters"
                  chips={
                    Array [
                      "metadata / processInstances / state: ACTIVE",
                    ]
                  }
                  deleteChip={[Function]}
                  showToolbarItem={true}
                >
                  <ToolbarItem>
                    <div
                      className="pf-c-toolbar__item"
                    >
                      <Memo(DomainExplorerFilterOptions)
                        filterChips={
                          Array [
                            "metadata / processInstances / state: ACTIVE",
                          ]
                        }
                        finalFilters={
                          Object {
                            "metadata": Object {
                              "processInstances": Object {
                                "state": Object {
                                  "equal": "ACTIVE",
                                },
                              },
                            },
                          }
                        }
                        generateFilterQuery={[Function]}
                        getQueryTypes={
                          Object {
                            "data": Object {
                              "__schema": Object {
                                "queryType": Array [
                                  Object {
                                    "inputFields": Array [
                                      Object {
                                        "name": "test",
                                        "type": Object {
                                          "kind": "INPUT_OBJECT",
                                          "name": "StringArgument",
                                        },
                                      },
                                    ],
                                    "name": "TestArgument",
                                  },
                                  Object {
                                    "inputFields": Array [
                                      Object {
                                        "name": "city",
                                        "type": Object {
                                          "kind": "INPUT_OBJECT",
                                          "name": "StringArgument",
                                        },
                                      },
                                      Object {
                                        "name": "country",
                                        "type": Object {
                                          "kind": "INPUT_OBJECT",
                                          "name": "StringArgument",
                                        },
                                      },
                                      Object {
                                        "name": "street",
                                        "type": Object {
                                          "kind": "INPUT_OBJECT",
                                          "name": "TestArgument",
                                        },
                                      },
                                      Object {
                                        "name": "zipCode",
                                        "type": Object {
                                          "kind": "INPUT_OBJECT",
                                          "name": "StringArgument",
                                        },
                                      },
                                    ],
                                    "kind": "INPUT_OBJECT",
                                    "name": "AddressArgument",
                                  },
                                  Object {
                                    "inputFields": Array [
                                      Object {
                                        "name": "id",
                                        "type": Object {
                                          "kind": "LIST",
                                          "name": null,
                                        },
                                      },
                                      Object {
                                        "name": "equal",
                                        "type": Object {
                                          "kind": "SCALAR",
                                          "name": "String",
                                        },
                                      },
                                      Object {
                                        "name": "isNull",
                                        "type": Object {
                                          "kind": "SCALAR",
                                          "name": "Boolean",
                                        },
                                      },
                                    ],
                                    "kind": "INPUT_OBJECT",
                                    "name": "IdArgument",
                                  },
                                ],
                              },
                            },
                            "loading": false,
                          }
                        }
                        getSchema={
                          Object {
                            "data": Object {},
                            "loading": false,
                          }
                        }
                        reset={false}
                        runQuery={false}
                        setFilterChips={[Function]}
                        setFinalFilters={[Function]}
                        setOffset={[Function]}
                        setReset={[Function]}
                        setRunQuery={[Function]}
                      >
                        <ToolbarItem
                          data-ouia-component-type="filter-options"
                          data-ouia-safe={true}
                        >
                          <div
                            className="pf-c-toolbar__item"
                            data-ouia-component-type="filter-options"
                            data-ouia-safe={true}
                          >
                            <Select
                              aria-label=""
                              aria-labelledby="Select a field"
                              className=""
                              clearSelectionsAriaLabel="Clear all"
                              createText="Create"
                              customBadgeText={null}
                              customContent={null}
                              direction="down"
                              hasInlineFilter={false}
                              id="select-field"
                              inlineFilterPlaceholderText={null}
                              inputIdPrefix=""
                              isCreatable={false}
                              isDisabled={false}
                              isGrouped={true}
                              isOpen={false}
                              isPlain={false}
                              maxHeight="60vh"
                              menuAppendTo="inline"
                              noResultsFoundText="No results found"
                              onClear={[Function]}
                              onCreateOption={[Function]}
                              onFilter={null}
                              onSelect={[Function]}
                              onToggle={[Function]}
                              ouiaSafe={true}
                              placeholderText="Select a field"
                              removeSelectionAriaLabel="Remove"
                              selections="id"
                              toggleAriaLabel="Options menu"
                              toggleIcon={null}
                              toggleId={null}
                              typeAheadAriaLabel=""
                              variant="single"
                              width=""
                            >
                              <GenerateId
                                prefix="pf-random-id-"
                              >
                                <div
                                  className="pf-c-select"
                                  data-ouia-component-id={47}
                                  data-ouia-component-type="PF4/Select"
                                  data-ouia-safe={true}
                                >
                                  <SelectToggle
                                    aria-label="Options menu"
                                    aria-labelledby="Select a field pf-select-toggle-id-12"
                                    className=""
                                    handleTypeaheadKeys={[Function]}
                                    hasClearButton={false}
                                    id="pf-select-toggle-id-12"
                                    isActive={false}
                                    isDisabled={false}
                                    isOpen={false}
                                    isPlain={false}
                                    menuRef={
                                      Object {
                                        "current": null,
                                      }
                                    }
                                    onClose={[Function]}
                                    onEnter={[Function]}
                                    onToggle={[Function]}
                                    parentRef={
                                      Object {
                                        "current": <div
                                          class="pf-c-select"
                                          data-ouia-component-id="74"
                                          data-ouia-component-type="PF4/Select"
                                          data-ouia-safe="true"
                                        >
                                          <button
                                            aria-expanded="false"
                                            aria-haspopup="listbox"
                                            aria-labelledby="Select a field pf-select-toggle-id-18"
                                            class="pf-c-select__toggle"
                                            id="pf-select-toggle-id-18"
                                            type="button"
                                          >
                                            <div
                                              class="pf-c-select__toggle-wrapper"
                                            >
                                              <span
                                                class="pf-c-select__toggle-text"
                                              >
                                                id
                                              </span>
                                            </div>
                                            <span
                                              class="pf-c-select__toggle-arrow"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                fill="currentColor"
                                                height="1em"
                                                role="img"
                                                style="vertical-align: -0.125em;"
                                                viewBox="0 0 320 512"
                                                width="1em"
                                              >
                                                <path
                                                  d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                  transform=""
                                                />
                                              </svg>
                                            </span>
                                          </button>
                                        </div>,
                                      }
                                    }
                                    type="button"
                                    variant="single"
                                  >
                                    <button
                                      aria-expanded={false}
                                      aria-haspopup="listbox"
                                      aria-labelledby="Select a field pf-select-toggle-id-12"
                                      className="pf-c-select__toggle"
                                      disabled={false}
                                      id="pf-select-toggle-id-12"
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      type="button"
                                    >
                                      <div
                                        className="pf-c-select__toggle-wrapper"
                                      >
                                        <span
                                          className="pf-c-select__toggle-text"
                                        >
                                          id
                                        </span>
                                      </div>
                                      <span
                                        className="pf-c-select__toggle-arrow"
                                      >
                                        <CaretDownIcon
                                          color="currentColor"
                                          noVerticalAlign={false}
                                          size="sm"
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 320 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                              transform=""
                                            />
                                          </svg>
                                        </CaretDownIcon>
                                      </span>
                                    </button>
                                  </SelectToggle>
                                </div>
                              </GenerateId>
                            </Select>
                            <Select
                              aria-label="Location"
                              aria-labelledby=""
                              className=""
                              clearSelectionsAriaLabel="Clear all"
                              createText="Create"
                              customBadgeText={null}
                              customContent={null}
                              direction="down"
                              hasInlineFilter={false}
                              id="select-operator"
                              inlineFilterPlaceholderText={null}
                              inputIdPrefix=""
                              isCreatable={false}
                              isDisabled={false}
                              isGrouped={false}
                              isOpen={false}
                              isPlain={false}
                              menuAppendTo="inline"
                              noResultsFoundText="No results found"
                              onClear={[Function]}
                              onCreateOption={[Function]}
                              onFilter={null}
                              onSelect={[Function]}
                              onToggle={[Function]}
                              ouiaSafe={true}
                              placeholderText="operator"
                              removeSelectionAriaLabel="Remove"
                              selections="equal"
                              toggleAriaLabel="Options menu"
                              toggleIcon={null}
                              toggleId={null}
                              typeAheadAriaLabel=""
                              variant="single"
                              width=""
                            >
                              <GenerateId
                                prefix="pf-random-id-"
                              >
                                <div
                                  className="pf-c-select"
                                  data-ouia-component-id={48}
                                  data-ouia-component-type="PF4/Select"
                                  data-ouia-safe={true}
                                >
                                  <SelectToggle
                                    aria-label="Options menu"
                                    aria-labelledby=" pf-select-toggle-id-13"
                                    className=""
                                    handleTypeaheadKeys={[Function]}
                                    hasClearButton={false}
                                    id="pf-select-toggle-id-13"
                                    isActive={false}
                                    isDisabled={false}
                                    isOpen={false}
                                    isPlain={false}
                                    menuRef={
                                      Object {
                                        "current": null,
                                      }
                                    }
                                    onClose={[Function]}
                                    onEnter={[Function]}
                                    onToggle={[Function]}
                                    parentRef={
                                      Object {
                                        "current": <div
                                          class="pf-c-select"
                                          data-ouia-component-id="75"
                                          data-ouia-component-type="PF4/Select"
                                          data-ouia-safe="true"
                                        >
                                          <button
                                            aria-expanded="false"
                                            aria-haspopup="listbox"
                                            aria-labelledby=" pf-select-toggle-id-19"
                                            class="pf-c-select__toggle"
                                            id="pf-select-toggle-id-19"
                                            type="button"
                                          >
                                            <div
                                              class="pf-c-select__toggle-wrapper"
                                            >
                                              <span
                                                class="pf-c-select__toggle-text"
                                              >
                                                equal
                                              </span>
                                            </div>
                                            <span
                                              class="pf-c-select__toggle-arrow"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                fill="currentColor"
                                                height="1em"
                                                role="img"
                                                style="vertical-align: -0.125em;"
                                                viewBox="0 0 320 512"
                                                width="1em"
                                              >
                                                <path
                                                  d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                  transform=""
                                                />
                                              </svg>
                                            </span>
                                          </button>
                                        </div>,
                                      }
                                    }
                                    type="button"
                                    variant="single"
                                  >
                                    <button
                                      aria-expanded={false}
                                      aria-haspopup="listbox"
                                      aria-labelledby=" pf-select-toggle-id-13"
                                      className="pf-c-select__toggle"
                                      disabled={false}
                                      id="pf-select-toggle-id-13"
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      type="button"
                                    >
                                      <div
                                        className="pf-c-select__toggle-wrapper"
                                      >
                                        <span
                                          className="pf-c-select__toggle-text"
                                        >
                                          equal
                                        </span>
                                      </div>
                                      <span
                                        className="pf-c-select__toggle-arrow"
                                      >
                                        <CaretDownIcon
                                          color="currentColor"
                                          noVerticalAlign={false}
                                          size="sm"
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 320 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                              transform=""
                                            />
                                          </svg>
                                        </CaretDownIcon>
                                      </span>
                                    </button>
                                  </SelectToggle>
                                </div>
                              </GenerateId>
                            </Select>
                            <ForwardRef
                              aria-label="filter text for id"
                              className="kogito-common--filter-options__inputs"
                              id="textBox-input"
                              name="filterText"
                              onChange={[Function]}
                              placeholder="value"
                              type="search"
                              value=""
                            >
                              <TextInputBase
                                aria-label="filter text for id"
                                className="kogito-common--filter-options__inputs"
                                id="textBox-input"
                                innerRef={null}
                                isDisabled={false}
                                isReadOnly={false}
                                isRequired={false}
                                name="filterText"
                                onChange={[Function]}
                                placeholder="value"
                                type="search"
                                validated="default"
                                value=""
                              >
                                <input
                                  aria-invalid={false}
                                  aria-label="filter text for id"
                                  className="pf-c-form-control kogito-common--filter-options__inputs"
                                  disabled={false}
                                  id="textBox-input"
                                  name="filterText"
                                  onChange={[Function]}
                                  placeholder="value"
                                  readOnly={false}
                                  required={false}
                                  type="search"
                                  value=""
                                />
                              </TextInputBase>
                            </ForwardRef>
                            <Button
                              id="button-with-string"
                              isDisabled={true}
                              onClick={[Function]}
                              variant="primary"
                            >
                              <button
                                aria-disabled={true}
                                aria-label={null}
                                className="pf-c-button pf-m-primary pf-m-disabled"
                                data-ouia-component-id={49}
                                data-ouia-component-type="PF4/Button"
                                data-ouia-safe={true}
                                disabled={true}
                                id="button-with-string"
                                onClick={[Function]}
                                tabIndex={null}
                                type="button"
                              >
                                Apply Filter
                              </button>
                            </Button>
                          </div>
                        </ToolbarItem>
                      </Memo(DomainExplorerFilterOptions)>
                    </div>
                  </ToolbarItem>
                  <Portal
                    containerInfo={
                      <div
                        class="pf-c-toolbar__group"
                      >
                        <div
                          class="pf-c-toolbar__item pf-m-chip-group"
                        >
                          <div
                            class="pf-c-chip-group pf-m-category"
                          >
                            <span
                              aria-hidden="true"
                              class="pf-c-chip-group__label"
                              id="pf-random-id-4"
                            >
                              Filters
                            </span>
                            <ul
                              aria-labelledby="pf-random-id-4"
                              class="pf-c-chip-group__list"
                              role="list"
                            >
                              <li
                                class="pf-c-chip-group__list-item"
                              >
                                <div
                                  class="pf-c-chip"
                                  data-ouia-component-id="77"
                                  data-ouia-component-type="PF4/Chip"
                                  data-ouia-safe="true"
                                >
                                  <span
                                    class="pf-c-chip__text"
                                    id="pf-random-id-5"
                                  >
                                    metadata / processInstances / state: ACTIVE
                                  </span>
                                  <button
                                    aria-disabled="false"
                                    aria-label="close"
                                    aria-labelledby="remove_pf-random-id-5 pf-random-id-5"
                                    class="pf-c-button pf-m-plain"
                                    data-ouia-component-id="78"
                                    data-ouia-component-type="PF4/Button"
                                    data-ouia-safe="true"
                                    id="remove_pf-random-id-5"
                                    type="button"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      fill="currentColor"
                                      height="1em"
                                      role="img"
                                      style="vertical-align: -0.125em;"
                                      viewBox="0 0 352 512"
                                      width="1em"
                                    >
                                      <path
                                        d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                        transform=""
                                      />
                                    </svg>
                                  </button>
                                </div>
                              </li>
                            </ul>
                          </div>
                        </div>
                      </div>
                    }
                  >
                    <ToolbarItem
                      variant="chip-group"
                    >
                      <div
                        className="pf-c-toolbar__item pf-m-chip-group"
                      >
                        <ChipGroup
                          aria-label="Chip group category"
                          categoryName="Filters"
                          closeBtnAriaLabel="Close chip group"
                          collapsedText="\${remaining} more"
                          defaultIsOpen={false}
                          expandedText="Show Less"
                          isClosable={false}
                          key="Filters"
                          numChips={3}
                          onClick={[Function]}
                          tooltipPosition="top"
                        >
                          <GenerateId
                            prefix="pf-random-id-"
                          >
                            <div
                              className="pf-c-chip-group pf-m-category"
                            >
                              <span
                                aria-hidden="true"
                                className="pf-c-chip-group__label"
                                id="pf-random-id-4"
                              >
                                Filters
                              </span>
                              <ul
                                aria-labelledby="pf-random-id-4"
                                className="pf-c-chip-group__list"
                                role="list"
                              >
                                <li
                                  className="pf-c-chip-group__list-item"
                                  key="0"
                                >
                                  <Chip
                                    className=""
                                    closeBtnAriaLabel="close"
                                    component="div"
                                    isOverflowChip={false}
                                    isReadOnly={false}
                                    key=".$metadata / processInstances / state=2 ACTIVE"
                                    onClick={[Function]}
                                    tooltipPosition="top"
                                  >
                                    <GenerateId
                                      prefix="pf-random-id-"
                                    >
                                      <div
                                        className="pf-c-chip"
                                        data-ouia-component-id={50}
                                        data-ouia-component-type="PF4/Chip"
                                        data-ouia-safe={true}
                                      >
                                        <span
                                          className="pf-c-chip__text"
                                          id="pf-random-id-5"
                                        >
                                          metadata / processInstances / state: ACTIVE
                                        </span>
                                        <Button
                                          aria-label="close"
                                          aria-labelledby="remove_pf-random-id-5 pf-random-id-5"
                                          id="remove_pf-random-id-5"
                                          onClick={[Function]}
                                          variant="plain"
                                        >
                                          <button
                                            aria-disabled={false}
                                            aria-label="close"
                                            aria-labelledby="remove_pf-random-id-5 pf-random-id-5"
                                            className="pf-c-button pf-m-plain"
                                            data-ouia-component-id={51}
                                            data-ouia-component-type="PF4/Button"
                                            data-ouia-safe={true}
                                            disabled={false}
                                            id="remove_pf-random-id-5"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            <TimesIcon
                                              aria-hidden="true"
                                              color="currentColor"
                                              noVerticalAlign={false}
                                              size="sm"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                aria-labelledby={null}
                                                fill="currentColor"
                                                height="1em"
                                                role="img"
                                                style={
                                                  Object {
                                                    "verticalAlign": "-0.125em",
                                                  }
                                                }
                                                viewBox="0 0 352 512"
                                                width="1em"
                                              >
                                                <path
                                                  d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                                  transform=""
                                                />
                                              </svg>
                                            </TimesIcon>
                                          </button>
                                        </Button>
                                      </div>
                                    </GenerateId>
                                  </Chip>
                                </li>
                              </ul>
                            </div>
                          </GenerateId>
                        </ChipGroup>
                      </div>
                    </ToolbarItem>
                  </Portal>
                </ToolbarFilter>
              </div>
            </ToolbarToggleGroup>
            <ForwardRef>
              <ToolbarGroupWithRef
                innerRef={null}
              >
                <div
                  className="pf-c-toolbar__group"
                >
                  <ToolbarItem>
                    <div
                      className="pf-c-toolbar__item"
                    >
                      <MockedDomainExplorerManageColumns
                        columnPickerType="Travels"
                        data={
                          Array [
                            Object {
                              "name": "id",
                              "type": Object {
                                "fields": null,
                                "kind": "SCALAR",
                                "name": "String",
                              },
                            },
                            Object {
                              "name": "flight",
                              "type": Object {
                                "fields": Array [
                                  Object {
                                    "name": "arrival",
                                    "type": Object {
                                      "kind": "SCALAR",
                                      "name": "String",
                                    },
                                  },
                                ],
                                "kind": "OBJECT",
                                "name": "Flight",
                              },
                            },
                          ]
                        }
                        enableRefresh={true}
                        getPicker={
                          Object {
                            "data": Object {
                              "__type": Object {
                                "fields": Array [
                                  Object {
                                    "name": "flight",
                                    "type": Object {
                                      "fields": Array [
                                        Object {
                                          "name": "arrival",
                                          "type": Object {
                                            "kind": "SCALAR",
                                            "name": "String",
                                          },
                                        },
                                      ],
                                      "kind": "OBJECT",
                                      "name": "Flight",
                                    },
                                  },
                                  Object {
                                    "name": "id",
                                    "type": Object {
                                      "fields": null,
                                      "kind": "SCALAR",
                                      "name": "String",
                                    },
                                  },
                                ],
                              },
                            },
                            "loading": false,
                          }
                        }
                        getQueryTypes={
                          Object {
                            "data": Object {
                              "__schema": Object {
                                "queryType": Array [
                                  Object {
                                    "inputFields": Array [
                                      Object {
                                        "name": "test",
                                        "type": Object {
                                          "kind": "INPUT_OBJECT",
                                          "name": "StringArgument",
                                        },
                                      },
                                    ],
                                    "name": "TestArgument",
                                  },
                                  Object {
                                    "inputFields": Array [
                                      Object {
                                        "name": "city",
                                        "type": Object {
                                          "kind": "INPUT_OBJECT",
                                          "name": "StringArgument",
                                        },
                                      },
                                      Object {
                                        "name": "country",
                                        "type": Object {
                                          "kind": "INPUT_OBJECT",
                                          "name": "StringArgument",
                                        },
                                      },
                                      Object {
                                        "name": "street",
                                        "type": Object {
                                          "kind": "INPUT_OBJECT",
                                          "name": "TestArgument",
                                        },
                                      },
                                      Object {
                                        "name": "zipCode",
                                        "type": Object {
                                          "kind": "INPUT_OBJECT",
                                          "name": "StringArgument",
                                        },
                                      },
                                    ],
                                    "kind": "INPUT_OBJECT",
                                    "name": "AddressArgument",
                                  },
                                  Object {
                                    "inputFields": Array [
                                      Object {
                                        "name": "id",
                                        "type": Object {
                                          "kind": "LIST",
                                          "name": null,
                                        },
                                      },
                                      Object {
                                        "name": "equal",
                                        "type": Object {
                                          "kind": "SCALAR",
                                          "name": "String",
                                        },
                                      },
                                      Object {
                                        "name": "isNull",
                                        "type": Object {
                                          "kind": "SCALAR",
                                          "name": "Boolean",
                                        },
                                      },
                                    ],
                                    "kind": "INPUT_OBJECT",
                                    "name": "IdArgument",
                                  },
                                ],
                              },
                            },
                            "loading": false,
                          }
                        }
                        isModalOpen={false}
                        metaData={
                          Object {
                            "metadata": Array [
                              Object {
                                "processInstances": Array [
                                  "id",
                                  "processName",
                                  "state",
                                  "start",
                                  "lastUpdate",
                                  "businessKey",
                                  "serviceUrl",
                                ],
                              },
                            ],
                          }
                        }
                        selected={Array []}
                        setEnableRefresh={[Function]}
                        setIsModalOpen={[Function]}
                        setOffsetVal={[Function]}
                        setPageSize={[Function]}
                        setParameters={[Function]}
                        setRunQuery={[Function]}
                        setSelected={[Function]}
                      />
                    </div>
                  </ToolbarItem>
                </div>
              </ToolbarGroupWithRef>
            </ForwardRef>
          </div>
          <ToolbarExpandableContent
            chipContainerRef={
              Object {
                "current": <div
                  class="pf-c-toolbar__group"
                />,
              }
            }
            clearAllFilters={[Function]}
            clearFiltersButtonText="Reset to default"
            expandableContentRef={
              Object {
                "current": <div
                  class="pf-c-toolbar__expandable-content"
                  id="data-toolbar-with-chip-groups-expandable-content-8"
                >
                  <div
                    class="pf-c-toolbar__group"
                  />
                  <div
                    class="pf-c-toolbar__group pf-m-chip-container"
                  >
                    <div
                      class="pf-c-toolbar__group"
                    />
                    <div
                      class="pf-c-toolbar__item"
                    >
                      <button
                        aria-disabled="false"
                        class="pf-c-button pf-m-link pf-m-inline"
                        data-ouia-component-id="79"
                        data-ouia-component-type="PF4/Button"
                        data-ouia-safe="true"
                        type="button"
                      >
                        Reset to default
                      </button>
                    </div>
                  </div>
                </div>,
              }
            }
            id="data-toolbar-with-chip-groups-expandable-content-5"
            isExpanded={false}
            showClearFiltersButton={true}
          >
            <div
              className="pf-c-toolbar__expandable-content"
              id="data-toolbar-with-chip-groups-expandable-content-5"
            >
              <ForwardRef>
                <ToolbarGroupWithRef
                  innerRef={null}
                >
                  <div
                    className="pf-c-toolbar__group"
                  />
                </ToolbarGroupWithRef>
              </ForwardRef>
              <ForwardRef
                className="pf-m-chip-container"
              >
                <ToolbarGroupWithRef
                  className="pf-m-chip-container"
                  innerRef={null}
                >
                  <div
                    className="pf-c-toolbar__group pf-m-chip-container"
                  >
                    <ForwardRef>
                      <ToolbarGroupWithRef
                        innerRef={
                          Object {
                            "current": <div
                              class="pf-c-toolbar__group"
                            />,
                          }
                        }
                      >
                        <div
                          className="pf-c-toolbar__group"
                        />
                      </ToolbarGroupWithRef>
                    </ForwardRef>
                    <ToolbarItem>
                      <div
                        className="pf-c-toolbar__item"
                      >
                        <Button
                          isInline={true}
                          onClick={[Function]}
                          variant="link"
                        >
                          <button
                            aria-disabled={false}
                            aria-label={null}
                            className="pf-c-button pf-m-link pf-m-inline"
                            data-ouia-component-id={52}
                            data-ouia-component-type="PF4/Button"
                            data-ouia-safe={true}
                            disabled={false}
                            onClick={[Function]}
                            type="button"
                          >
                            Reset to default
                          </button>
                        </Button>
                      </div>
                    </ToolbarItem>
                  </div>
                </ToolbarGroupWithRef>
              </ForwardRef>
            </div>
          </ToolbarExpandableContent>
        </div>
      </ToolbarContent>
      <ToolbarChipGroupContent
        chipGroupContentRef={
          Object {
            "current": <div
              class="pf-c-toolbar__content"
            >
              <div
                class="pf-c-toolbar__group"
              >
                <div
                  class="pf-c-toolbar__item pf-m-chip-group"
                >
                  <div
                    class="pf-c-chip-group pf-m-category"
                  >
                    <span
                      aria-hidden="true"
                      class="pf-c-chip-group__label"
                      id="pf-random-id-4"
                    >
                      Filters
                    </span>
                    <ul
                      aria-labelledby="pf-random-id-4"
                      class="pf-c-chip-group__list"
                      role="list"
                    >
                      <li
                        class="pf-c-chip-group__list-item"
                      >
                        <div
                          class="pf-c-chip"
                          data-ouia-component-id="77"
                          data-ouia-component-type="PF4/Chip"
                          data-ouia-safe="true"
                        >
                          <span
                            class="pf-c-chip__text"
                            id="pf-random-id-5"
                          >
                            metadata / processInstances / state: ACTIVE
                          </span>
                          <button
                            aria-disabled="false"
                            aria-label="close"
                            aria-labelledby="remove_pf-random-id-5 pf-random-id-5"
                            class="pf-c-button pf-m-plain"
                            data-ouia-component-id="78"
                            data-ouia-component-type="PF4/Button"
                            data-ouia-safe="true"
                            id="remove_pf-random-id-5"
                            type="button"
                          >
                            <svg
                              aria-hidden="true"
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style="vertical-align: -0.125em;"
                              viewBox="0 0 352 512"
                              width="1em"
                            >
                              <path
                                d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                transform=""
                              />
                            </svg>
                          </button>
                        </div>
                      </li>
                    </ul>
                  </div>
                </div>
              </div>
              <div
                class="pf-c-toolbar__item"
              >
                <button
                  aria-disabled="false"
                  class="pf-c-button pf-m-link pf-m-inline"
                  data-ouia-component-id="80"
                  data-ouia-component-type="PF4/Button"
                  data-ouia-safe="true"
                  type="button"
                >
                  Reset to default
                </button>
              </div>
            </div>,
          }
        }
        clearAllFilters={[Function]}
        clearFiltersButtonText="Reset to default"
        collapseListedFiltersBreakpoint="md"
        isExpanded={false}
        numberOfFilters={1}
        showClearFiltersButton={true}
      >
        <div
          className="pf-c-toolbar__content"
        >
          <ForwardRef
            className=""
          >
            <ToolbarGroupWithRef
              className=""
              innerRef={null}
            >
              <div
                className="pf-c-toolbar__group"
              />
            </ToolbarGroupWithRef>
          </ForwardRef>
          <ToolbarItem>
            <div
              className="pf-c-toolbar__item"
            >
              <Button
                isInline={true}
                onClick={[Function]}
                variant="link"
              >
                <button
                  aria-disabled={false}
                  aria-label={null}
                  className="pf-c-button pf-m-link pf-m-inline"
                  data-ouia-component-id={53}
                  data-ouia-component-type="PF4/Button"
                  data-ouia-safe={true}
                  disabled={false}
                  onClick={[Function]}
                  type="button"
                >
                  Reset to default
                </button>
              </Button>
            </div>
          </ToolbarItem>
        </div>
      </ToolbarChipGroupContent>
    </div>
  </Toolbar>
  <Card
    className="kogito-common--domain-explorer__table-OverFlow"
    data-ouia-component-type="domain-explorer"
    data-ouia-safe={true}
  >
    <article
      className="pf-c-card kogito-common--domain-explorer__table-OverFlow"
      data-ouia-component-id={54}
      data-ouia-component-type="PF4/Card"
      data-ouia-safe={true}
    >
      <MockedDomainExplorerTable
        columnFilters={Array []}
        displayEmptyState={false}
        displayTable={false}
        filterChips={
          Array [
            "metadata / processInstances / state: ACTIVE",
          ]
        }
        filterError={[TypeError: Cannot read property 'data' of undefined]}
        finalFilters={
          Object {
            "metadata": Object {
              "processInstances": Object {
                "state": Object {
                  "equal": "ACTIVE",
                },
              },
            },
          }
        }
        handleRetry={[Function]}
        isLoadingMore={false}
        offset={0}
        onDeleteChip={[Function]}
        parameters={
          Array [
            Object {
              "flight": Array [
                "arrival",
              ],
            },
            Object {
              "flight": Array [
                "departure",
              ],
            },
          ]
        }
        rows={Array []}
        selected={Array []}
        setOrderByObj={[Function]}
        setRows={[Function]}
        setRunQuery={[Function]}
        setSortBy={[Function]}
        sortBy={Object {}}
        tableLoading={false}
      />
    </article>
  </Card>
</DomainExplorer>
`;

exports[`Domain Explorer component check assertions on rememberedParams 1`] = `
<DomainExplorer
  defaultChip={
    Array [
      "metadata / processInstances / state: ACTIVE",
    ]
  }
  defaultFilter={
    Object {
      "metadata": Object {
        "processInstances": Object {
          "state": Object {
            "equal": "ACTIVE",
          },
        },
      },
    }
  }
  domainName="Travels"
  domains={
    Array [
      "Travels",
      "VisaApplications",
    ]
  }
  history={
    Object {
      "locations": Object {
        "key": "ugubul",
      },
    }
  }
  loadingState={false}
  location={
    Object {
      "key": "ugubul",
      "pathname": "/DomainExplorer/Travels",
      "state": Object {
        "finalFilters": Object {
          "metadata": Object {
            "processInstances": Object {
              "state": Object {
                "equal": "ACTIVE",
              },
            },
          },
        },
        "parameters": Array [
          Object {
            "flight": Array [
              "arrival",
            ],
          },
          Object {
            "flight": Array [
              "departure",
            ],
          },
        ],
      },
    }
  }
  match={
    Object {
      "params": Object {
        "domainName": "Travels",
      },
    }
  }
  metaData={
    Object {
      "metadata": Array [
        Object {
          "processInstances": Array [
            "id",
            "processName",
            "state",
            "start",
            "lastUpdate",
            "businessKey",
            "serviceUrl",
          ],
        },
      ],
    }
  }
  rememberedChips={
    Array [
      "metadata / processInstances / state: ACTIVE",
    ]
  }
  rememberedFilters={
    Object {
      "metadata": Object {
        "processInstances": Object {
          "state": Object {
            "equal": "ACTIVE",
          },
        },
      },
    }
  }
  rememberedParams={
    Array [
      Object {
        "flight": Array [
          "arrival",
        ],
      },
      Object {
        "flight": Array [
          "departure",
        ],
      },
    ]
  }
  rememberedSelections={Array []}
>
  <Toolbar
    className="pf-m-toggle-group-container"
    clearAllFilters={[Function]}
    clearFiltersButtonText="Reset to default"
    collapseListedFiltersBreakpoint="md"
    id="data-toolbar-with-chip-groups"
  >
    <div
      className="pf-c-toolbar pf-m-toggle-group-container"
      id="data-toolbar-with-chip-groups"
    >
      <ToolbarContent
        isExpanded={false}
        showClearFiltersButton={false}
      >
        <div
          className="pf-c-toolbar__content"
        >
          <div
            className="pf-c-toolbar__content-section"
          >
            <ToolbarToggleGroup
              breakpoint="xl"
              toggleIcon={
                <FilterIcon
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
              }
            >
              <div
                className="pf-c-toolbar__group pf-m-toggle-group pf-m-show-on-xl"
              >
                <div
                  className="pf-c-toolbar__toggle"
                >
                  <Button
                    aria-controls="data-toolbar-with-chip-groups-expandable-content-28"
                    aria-haspopup={false}
                    aria-label="Show Filters"
                    onClick={[Function]}
                    variant="plain"
                  >
                    <button
                      aria-controls="data-toolbar-with-chip-groups-expandable-content-28"
                      aria-disabled={false}
                      aria-haspopup={false}
                      aria-label="Show Filters"
                      className="pf-c-button pf-m-plain"
                      data-ouia-component-id={267}
                      data-ouia-component-type="PF4/Button"
                      data-ouia-safe={true}
                      disabled={false}
                      onClick={[Function]}
                      type="button"
                    >
                      <FilterIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                      >
                        <svg
                          aria-hidden={true}
                          aria-labelledby={null}
                          fill="currentColor"
                          height="1em"
                          role="img"
                          style={
                            Object {
                              "verticalAlign": "-0.125em",
                            }
                          }
                          viewBox="0 0 512 512"
                          width="1em"
                        >
                          <path
                            d="M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z"
                            transform=""
                          />
                        </svg>
                      </FilterIcon>
                    </button>
                  </Button>
                </div>
                <ToolbarFilter
                  categoryName="Filters"
                  chips={
                    Array [
                      "metadata / processInstances / state: ACTIVE",
                    ]
                  }
                  deleteChip={[Function]}
                  showToolbarItem={true}
                >
                  <ToolbarItem>
                    <div
                      className="pf-c-toolbar__item"
                    >
                      <Memo(DomainExplorerFilterOptions)
                        filterChips={
                          Array [
                            "metadata / processInstances / state: ACTIVE",
                          ]
                        }
                        finalFilters={
                          Object {
                            "metadata": Object {
                              "processInstances": Object {
                                "state": Object {
                                  "equal": "ACTIVE",
                                },
                              },
                            },
                          }
                        }
                        generateFilterQuery={[Function]}
                        getQueryTypes={
                          Object {
                            "data": Object {
                              "__schema": Object {
                                "queryType": Array [
                                  Object {
                                    "inputFields": Array [
                                      Object {
                                        "name": "test",
                                        "type": Object {
                                          "kind": "INPUT_OBJECT",
                                          "name": "StringArgument",
                                        },
                                      },
                                    ],
                                    "name": "TestArgument",
                                  },
                                  Object {
                                    "inputFields": Array [
                                      Object {
                                        "name": "city",
                                        "type": Object {
                                          "kind": "INPUT_OBJECT",
                                          "name": "StringArgument",
                                        },
                                      },
                                      Object {
                                        "name": "country",
                                        "type": Object {
                                          "kind": "INPUT_OBJECT",
                                          "name": "StringArgument",
                                        },
                                      },
                                      Object {
                                        "name": "street",
                                        "type": Object {
                                          "kind": "INPUT_OBJECT",
                                          "name": "TestArgument",
                                        },
                                      },
                                      Object {
                                        "name": "zipCode",
                                        "type": Object {
                                          "kind": "INPUT_OBJECT",
                                          "name": "StringArgument",
                                        },
                                      },
                                    ],
                                    "kind": "INPUT_OBJECT",
                                    "name": "AddressArgument",
                                  },
                                  Object {
                                    "inputFields": Array [
                                      Object {
                                        "name": "id",
                                        "type": Object {
                                          "kind": "LIST",
                                          "name": null,
                                        },
                                      },
                                      Object {
                                        "name": "equal",
                                        "type": Object {
                                          "kind": "SCALAR",
                                          "name": "String",
                                        },
                                      },
                                      Object {
                                        "name": "isNull",
                                        "type": Object {
                                          "kind": "SCALAR",
                                          "name": "Boolean",
                                        },
                                      },
                                    ],
                                    "kind": "INPUT_OBJECT",
                                    "name": "IdArgument",
                                  },
                                ],
                              },
                            },
                            "loading": false,
                          }
                        }
                        getSchema={
                          Object {
                            "data": Object {},
                            "loading": false,
                          }
                        }
                        reset={false}
                        runQuery={false}
                        setFilterChips={[Function]}
                        setFinalFilters={[Function]}
                        setOffset={[Function]}
                        setReset={[Function]}
                        setRunQuery={[Function]}
                      >
                        <ToolbarItem
                          data-ouia-component-type="filter-options"
                          data-ouia-safe={true}
                        >
                          <div
                            className="pf-c-toolbar__item"
                            data-ouia-component-type="filter-options"
                            data-ouia-safe={true}
                          >
                            <Select
                              aria-label=""
                              aria-labelledby="Select a field"
                              className=""
                              clearSelectionsAriaLabel="Clear all"
                              createText="Create"
                              customBadgeText={null}
                              customContent={null}
                              direction="down"
                              hasInlineFilter={false}
                              id="select-field"
                              inlineFilterPlaceholderText={null}
                              inputIdPrefix=""
                              isCreatable={false}
                              isDisabled={false}
                              isGrouped={true}
                              isOpen={false}
                              isPlain={false}
                              maxHeight="60vh"
                              menuAppendTo="inline"
                              noResultsFoundText="No results found"
                              onClear={[Function]}
                              onCreateOption={[Function]}
                              onFilter={null}
                              onSelect={[Function]}
                              onToggle={[Function]}
                              ouiaSafe={true}
                              placeholderText="Select a field"
                              removeSelectionAriaLabel="Remove"
                              selections="id"
                              toggleAriaLabel="Options menu"
                              toggleIcon={null}
                              toggleId={null}
                              typeAheadAriaLabel=""
                              variant="single"
                              width=""
                            >
                              <GenerateId
                                prefix="pf-random-id-"
                              >
                                <div
                                  className="pf-c-select"
                                  data-ouia-component-id={268}
                                  data-ouia-component-type="PF4/Select"
                                  data-ouia-safe={true}
                                >
                                  <SelectToggle
                                    aria-label="Options menu"
                                    aria-labelledby="Select a field pf-select-toggle-id-62"
                                    className=""
                                    handleTypeaheadKeys={[Function]}
                                    hasClearButton={false}
                                    id="pf-select-toggle-id-62"
                                    isActive={false}
                                    isDisabled={false}
                                    isOpen={false}
                                    isPlain={false}
                                    menuRef={
                                      Object {
                                        "current": null,
                                      }
                                    }
                                    onClose={[Function]}
                                    onEnter={[Function]}
                                    onToggle={[Function]}
                                    parentRef={
                                      Object {
                                        "current": <div
                                          class="pf-c-select"
                                          data-ouia-component-id="268"
                                          data-ouia-component-type="PF4/Select"
                                          data-ouia-safe="true"
                                        >
                                          <button
                                            aria-expanded="false"
                                            aria-haspopup="listbox"
                                            aria-labelledby="Select a field pf-select-toggle-id-62"
                                            class="pf-c-select__toggle"
                                            id="pf-select-toggle-id-62"
                                            type="button"
                                          >
                                            <div
                                              class="pf-c-select__toggle-wrapper"
                                            >
                                              <span
                                                class="pf-c-select__toggle-text"
                                              >
                                                id
                                              </span>
                                            </div>
                                            <span
                                              class="pf-c-select__toggle-arrow"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                fill="currentColor"
                                                height="1em"
                                                role="img"
                                                style="vertical-align: -0.125em;"
                                                viewBox="0 0 320 512"
                                                width="1em"
                                              >
                                                <path
                                                  d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                  transform=""
                                                />
                                              </svg>
                                            </span>
                                          </button>
                                        </div>,
                                      }
                                    }
                                    type="button"
                                    variant="single"
                                  >
                                    <button
                                      aria-expanded={false}
                                      aria-haspopup="listbox"
                                      aria-labelledby="Select a field pf-select-toggle-id-62"
                                      className="pf-c-select__toggle"
                                      disabled={false}
                                      id="pf-select-toggle-id-62"
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      type="button"
                                    >
                                      <div
                                        className="pf-c-select__toggle-wrapper"
                                      >
                                        <span
                                          className="pf-c-select__toggle-text"
                                        >
                                          id
                                        </span>
                                      </div>
                                      <span
                                        className="pf-c-select__toggle-arrow"
                                      >
                                        <CaretDownIcon
                                          color="currentColor"
                                          noVerticalAlign={false}
                                          size="sm"
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 320 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                              transform=""
                                            />
                                          </svg>
                                        </CaretDownIcon>
                                      </span>
                                    </button>
                                  </SelectToggle>
                                </div>
                              </GenerateId>
                            </Select>
                            <Select
                              aria-label="Location"
                              aria-labelledby=""
                              className=""
                              clearSelectionsAriaLabel="Clear all"
                              createText="Create"
                              customBadgeText={null}
                              customContent={null}
                              direction="down"
                              hasInlineFilter={false}
                              id="select-operator"
                              inlineFilterPlaceholderText={null}
                              inputIdPrefix=""
                              isCreatable={false}
                              isDisabled={false}
                              isGrouped={false}
                              isOpen={false}
                              isPlain={false}
                              menuAppendTo="inline"
                              noResultsFoundText="No results found"
                              onClear={[Function]}
                              onCreateOption={[Function]}
                              onFilter={null}
                              onSelect={[Function]}
                              onToggle={[Function]}
                              ouiaSafe={true}
                              placeholderText="operator"
                              removeSelectionAriaLabel="Remove"
                              selections="equal"
                              toggleAriaLabel="Options menu"
                              toggleIcon={null}
                              toggleId={null}
                              typeAheadAriaLabel=""
                              variant="single"
                              width=""
                            >
                              <GenerateId
                                prefix="pf-random-id-"
                              >
                                <div
                                  className="pf-c-select"
                                  data-ouia-component-id={269}
                                  data-ouia-component-type="PF4/Select"
                                  data-ouia-safe={true}
                                >
                                  <SelectToggle
                                    aria-label="Options menu"
                                    aria-labelledby=" pf-select-toggle-id-63"
                                    className=""
                                    handleTypeaheadKeys={[Function]}
                                    hasClearButton={false}
                                    id="pf-select-toggle-id-63"
                                    isActive={false}
                                    isDisabled={false}
                                    isOpen={false}
                                    isPlain={false}
                                    menuRef={
                                      Object {
                                        "current": null,
                                      }
                                    }
                                    onClose={[Function]}
                                    onEnter={[Function]}
                                    onToggle={[Function]}
                                    parentRef={
                                      Object {
                                        "current": <div
                                          class="pf-c-select"
                                          data-ouia-component-id="269"
                                          data-ouia-component-type="PF4/Select"
                                          data-ouia-safe="true"
                                        >
                                          <button
                                            aria-expanded="false"
                                            aria-haspopup="listbox"
                                            aria-labelledby=" pf-select-toggle-id-63"
                                            class="pf-c-select__toggle"
                                            id="pf-select-toggle-id-63"
                                            type="button"
                                          >
                                            <div
                                              class="pf-c-select__toggle-wrapper"
                                            >
                                              <span
                                                class="pf-c-select__toggle-text"
                                              >
                                                equal
                                              </span>
                                            </div>
                                            <span
                                              class="pf-c-select__toggle-arrow"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                fill="currentColor"
                                                height="1em"
                                                role="img"
                                                style="vertical-align: -0.125em;"
                                                viewBox="0 0 320 512"
                                                width="1em"
                                              >
                                                <path
                                                  d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                  transform=""
                                                />
                                              </svg>
                                            </span>
                                          </button>
                                        </div>,
                                      }
                                    }
                                    type="button"
                                    variant="single"
                                  >
                                    <button
                                      aria-expanded={false}
                                      aria-haspopup="listbox"
                                      aria-labelledby=" pf-select-toggle-id-63"
                                      className="pf-c-select__toggle"
                                      disabled={false}
                                      id="pf-select-toggle-id-63"
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      type="button"
                                    >
                                      <div
                                        className="pf-c-select__toggle-wrapper"
                                      >
                                        <span
                                          className="pf-c-select__toggle-text"
                                        >
                                          equal
                                        </span>
                                      </div>
                                      <span
                                        className="pf-c-select__toggle-arrow"
                                      >
                                        <CaretDownIcon
                                          color="currentColor"
                                          noVerticalAlign={false}
                                          size="sm"
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 320 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                              transform=""
                                            />
                                          </svg>
                                        </CaretDownIcon>
                                      </span>
                                    </button>
                                  </SelectToggle>
                                </div>
                              </GenerateId>
                            </Select>
                            <ForwardRef
                              aria-label="filter text for id"
                              className="kogito-common--filter-options__inputs"
                              id="textBox-input"
                              name="filterText"
                              onChange={[Function]}
                              placeholder="value"
                              type="search"
                              value=""
                            >
                              <TextInputBase
                                aria-label="filter text for id"
                                className="kogito-common--filter-options__inputs"
                                id="textBox-input"
                                innerRef={null}
                                isDisabled={false}
                                isReadOnly={false}
                                isRequired={false}
                                name="filterText"
                                onChange={[Function]}
                                placeholder="value"
                                type="search"
                                validated="default"
                                value=""
                              >
                                <input
                                  aria-invalid={false}
                                  aria-label="filter text for id"
                                  className="pf-c-form-control kogito-common--filter-options__inputs"
                                  disabled={false}
                                  id="textBox-input"
                                  name="filterText"
                                  onChange={[Function]}
                                  placeholder="value"
                                  readOnly={false}
                                  required={false}
                                  type="search"
                                  value=""
                                />
                              </TextInputBase>
                            </ForwardRef>
                            <Button
                              id="button-with-string"
                              isDisabled={true}
                              onClick={[Function]}
                              variant="primary"
                            >
                              <button
                                aria-disabled={true}
                                aria-label={null}
                                className="pf-c-button pf-m-primary pf-m-disabled"
                                data-ouia-component-id={270}
                                data-ouia-component-type="PF4/Button"
                                data-ouia-safe={true}
                                disabled={true}
                                id="button-with-string"
                                onClick={[Function]}
                                tabIndex={null}
                                type="button"
                              >
                                Apply Filter
                              </button>
                            </Button>
                          </div>
                        </ToolbarItem>
                      </Memo(DomainExplorerFilterOptions)>
                    </div>
                  </ToolbarItem>
                  <Portal
                    containerInfo={
                      <div
                        class="pf-c-toolbar__group"
                      >
                        <div
                          class="pf-c-toolbar__item pf-m-chip-group"
                        >
                          <div
                            class="pf-c-chip-group pf-m-category"
                          >
                            <span
                              aria-hidden="true"
                              class="pf-c-chip-group__label"
                              id="pf-random-id-16"
                            >
                              Filters
                            </span>
                            <ul
                              aria-labelledby="pf-random-id-16"
                              class="pf-c-chip-group__list"
                              role="list"
                            >
                              <li
                                class="pf-c-chip-group__list-item"
                              >
                                <div
                                  class="pf-c-chip"
                                  data-ouia-component-id="271"
                                  data-ouia-component-type="PF4/Chip"
                                  data-ouia-safe="true"
                                >
                                  <span
                                    class="pf-c-chip__text"
                                    id="pf-random-id-17"
                                  >
                                    metadata / processInstances / state: ACTIVE
                                  </span>
                                  <button
                                    aria-disabled="false"
                                    aria-label="close"
                                    aria-labelledby="remove_pf-random-id-17 pf-random-id-17"
                                    class="pf-c-button pf-m-plain"
                                    data-ouia-component-id="272"
                                    data-ouia-component-type="PF4/Button"
                                    data-ouia-safe="true"
                                    id="remove_pf-random-id-17"
                                    type="button"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      fill="currentColor"
                                      height="1em"
                                      role="img"
                                      style="vertical-align: -0.125em;"
                                      viewBox="0 0 352 512"
                                      width="1em"
                                    >
                                      <path
                                        d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                        transform=""
                                      />
                                    </svg>
                                  </button>
                                </div>
                              </li>
                            </ul>
                          </div>
                        </div>
                      </div>
                    }
                  >
                    <ToolbarItem
                      variant="chip-group"
                    >
                      <div
                        className="pf-c-toolbar__item pf-m-chip-group"
                      >
                        <ChipGroup
                          aria-label="Chip group category"
                          categoryName="Filters"
                          closeBtnAriaLabel="Close chip group"
                          collapsedText="\${remaining} more"
                          defaultIsOpen={false}
                          expandedText="Show Less"
                          isClosable={false}
                          key="Filters"
                          numChips={3}
                          onClick={[Function]}
                          tooltipPosition="top"
                        >
                          <GenerateId
                            prefix="pf-random-id-"
                          >
                            <div
                              className="pf-c-chip-group pf-m-category"
                            >
                              <span
                                aria-hidden="true"
                                className="pf-c-chip-group__label"
                                id="pf-random-id-16"
                              >
                                Filters
                              </span>
                              <ul
                                aria-labelledby="pf-random-id-16"
                                className="pf-c-chip-group__list"
                                role="list"
                              >
                                <li
                                  className="pf-c-chip-group__list-item"
                                  key="0"
                                >
                                  <Chip
                                    className=""
                                    closeBtnAriaLabel="close"
                                    component="div"
                                    isOverflowChip={false}
                                    isReadOnly={false}
                                    key=".$metadata / processInstances / state=2 ACTIVE"
                                    onClick={[Function]}
                                    tooltipPosition="top"
                                  >
                                    <GenerateId
                                      prefix="pf-random-id-"
                                    >
                                      <div
                                        className="pf-c-chip"
                                        data-ouia-component-id={271}
                                        data-ouia-component-type="PF4/Chip"
                                        data-ouia-safe={true}
                                      >
                                        <span
                                          className="pf-c-chip__text"
                                          id="pf-random-id-17"
                                        >
                                          metadata / processInstances / state: ACTIVE
                                        </span>
                                        <Button
                                          aria-label="close"
                                          aria-labelledby="remove_pf-random-id-17 pf-random-id-17"
                                          id="remove_pf-random-id-17"
                                          onClick={[Function]}
                                          variant="plain"
                                        >
                                          <button
                                            aria-disabled={false}
                                            aria-label="close"
                                            aria-labelledby="remove_pf-random-id-17 pf-random-id-17"
                                            className="pf-c-button pf-m-plain"
                                            data-ouia-component-id={272}
                                            data-ouia-component-type="PF4/Button"
                                            data-ouia-safe={true}
                                            disabled={false}
                                            id="remove_pf-random-id-17"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            <TimesIcon
                                              aria-hidden="true"
                                              color="currentColor"
                                              noVerticalAlign={false}
                                              size="sm"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                aria-labelledby={null}
                                                fill="currentColor"
                                                height="1em"
                                                role="img"
                                                style={
                                                  Object {
                                                    "verticalAlign": "-0.125em",
                                                  }
                                                }
                                                viewBox="0 0 352 512"
                                                width="1em"
                                              >
                                                <path
                                                  d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                                  transform=""
                                                />
                                              </svg>
                                            </TimesIcon>
                                          </button>
                                        </Button>
                                      </div>
                                    </GenerateId>
                                  </Chip>
                                </li>
                              </ul>
                            </div>
                          </GenerateId>
                        </ChipGroup>
                      </div>
                    </ToolbarItem>
                  </Portal>
                </ToolbarFilter>
              </div>
            </ToolbarToggleGroup>
            <ForwardRef>
              <ToolbarGroupWithRef
                innerRef={null}
              >
                <div
                  className="pf-c-toolbar__group"
                >
                  <ToolbarItem>
                    <div
                      className="pf-c-toolbar__item"
                    >
                      <MockedDomainExplorerManageColumns
                        columnPickerType="Travels"
                        data={
                          Array [
                            Object {
                              "name": "id",
                              "type": Object {
                                "fields": null,
                                "kind": "SCALAR",
                                "name": "String",
                              },
                            },
                            Object {
                              "name": "flight",
                              "type": Object {
                                "fields": Array [
                                  Object {
                                    "name": "arrival",
                                    "type": Object {
                                      "kind": "SCALAR",
                                      "name": "String",
                                    },
                                  },
                                ],
                                "kind": "OBJECT",
                                "name": "Flight",
                              },
                            },
                          ]
                        }
                        enableRefresh={true}
                        getPicker={
                          Object {
                            "data": Object {
                              "__type": Object {
                                "fields": Array [
                                  Object {
                                    "name": "flight",
                                    "type": Object {
                                      "fields": Array [
                                        Object {
                                          "name": "arrival",
                                          "type": Object {
                                            "kind": "SCALAR",
                                            "name": "String",
                                          },
                                        },
                                      ],
                                      "kind": "OBJECT",
                                      "name": "Flight",
                                    },
                                  },
                                  Object {
                                    "name": "id",
                                    "type": Object {
                                      "fields": null,
                                      "kind": "SCALAR",
                                      "name": "String",
                                    },
                                  },
                                ],
                              },
                            },
                            "loading": false,
                          }
                        }
                        getQueryTypes={
                          Object {
                            "data": Object {
                              "__schema": Object {
                                "queryType": Array [
                                  Object {
                                    "inputFields": Array [
                                      Object {
                                        "name": "test",
                                        "type": Object {
                                          "kind": "INPUT_OBJECT",
                                          "name": "StringArgument",
                                        },
                                      },
                                    ],
                                    "name": "TestArgument",
                                  },
                                  Object {
                                    "inputFields": Array [
                                      Object {
                                        "name": "city",
                                        "type": Object {
                                          "kind": "INPUT_OBJECT",
                                          "name": "StringArgument",
                                        },
                                      },
                                      Object {
                                        "name": "country",
                                        "type": Object {
                                          "kind": "INPUT_OBJECT",
                                          "name": "StringArgument",
                                        },
                                      },
                                      Object {
                                        "name": "street",
                                        "type": Object {
                                          "kind": "INPUT_OBJECT",
                                          "name": "TestArgument",
                                        },
                                      },
                                      Object {
                                        "name": "zipCode",
                                        "type": Object {
                                          "kind": "INPUT_OBJECT",
                                          "name": "StringArgument",
                                        },
                                      },
                                    ],
                                    "kind": "INPUT_OBJECT",
                                    "name": "AddressArgument",
                                  },
                                  Object {
                                    "inputFields": Array [
                                      Object {
                                        "name": "id",
                                        "type": Object {
                                          "kind": "LIST",
                                          "name": null,
                                        },
                                      },
                                      Object {
                                        "name": "equal",
                                        "type": Object {
                                          "kind": "SCALAR",
                                          "name": "String",
                                        },
                                      },
                                      Object {
                                        "name": "isNull",
                                        "type": Object {
                                          "kind": "SCALAR",
                                          "name": "Boolean",
                                        },
                                      },
                                    ],
                                    "kind": "INPUT_OBJECT",
                                    "name": "IdArgument",
                                  },
                                ],
                              },
                            },
                            "loading": false,
                          }
                        }
                        isModalOpen={false}
                        metaData={
                          Object {
                            "metadata": Array [
                              Object {
                                "processInstances": Array [
                                  "id",
                                  "processName",
                                  "state",
                                  "start",
                                  "lastUpdate",
                                  "businessKey",
                                  "serviceUrl",
                                ],
                              },
                            ],
                          }
                        }
                        selected={Array []}
                        setEnableRefresh={[Function]}
                        setIsModalOpen={[Function]}
                        setOffsetVal={[Function]}
                        setPageSize={[Function]}
                        setParameters={[Function]}
                        setRunQuery={[Function]}
                        setSelected={[Function]}
                      />
                    </div>
                  </ToolbarItem>
                </div>
              </ToolbarGroupWithRef>
            </ForwardRef>
          </div>
          <ToolbarExpandableContent
            chipContainerRef={
              Object {
                "current": <div
                  class="pf-c-toolbar__group"
                />,
              }
            }
            clearAllFilters={[Function]}
            clearFiltersButtonText="Reset to default"
            expandableContentRef={
              Object {
                "current": <div
                  class="pf-c-toolbar__expandable-content"
                  id="data-toolbar-with-chip-groups-expandable-content-28"
                >
                  <div
                    class="pf-c-toolbar__group"
                  />
                  <div
                    class="pf-c-toolbar__group pf-m-chip-container"
                  >
                    <div
                      class="pf-c-toolbar__group"
                    />
                    <div
                      class="pf-c-toolbar__item"
                    >
                      <button
                        aria-disabled="false"
                        class="pf-c-button pf-m-link pf-m-inline"
                        data-ouia-component-id="273"
                        data-ouia-component-type="PF4/Button"
                        data-ouia-safe="true"
                        type="button"
                      >
                        Reset to default
                      </button>
                    </div>
                  </div>
                </div>,
              }
            }
            id="data-toolbar-with-chip-groups-expandable-content-28"
            isExpanded={false}
            showClearFiltersButton={true}
          >
            <div
              className="pf-c-toolbar__expandable-content"
              id="data-toolbar-with-chip-groups-expandable-content-28"
            >
              <ForwardRef>
                <ToolbarGroupWithRef
                  innerRef={null}
                >
                  <div
                    className="pf-c-toolbar__group"
                  />
                </ToolbarGroupWithRef>
              </ForwardRef>
              <ForwardRef
                className="pf-m-chip-container"
              >
                <ToolbarGroupWithRef
                  className="pf-m-chip-container"
                  innerRef={null}
                >
                  <div
                    className="pf-c-toolbar__group pf-m-chip-container"
                  >
                    <ForwardRef>
                      <ToolbarGroupWithRef
                        innerRef={
                          Object {
                            "current": <div
                              class="pf-c-toolbar__group"
                            />,
                          }
                        }
                      >
                        <div
                          className="pf-c-toolbar__group"
                        />
                      </ToolbarGroupWithRef>
                    </ForwardRef>
                    <ToolbarItem>
                      <div
                        className="pf-c-toolbar__item"
                      >
                        <Button
                          isInline={true}
                          onClick={[Function]}
                          variant="link"
                        >
                          <button
                            aria-disabled={false}
                            aria-label={null}
                            className="pf-c-button pf-m-link pf-m-inline"
                            data-ouia-component-id={273}
                            data-ouia-component-type="PF4/Button"
                            data-ouia-safe={true}
                            disabled={false}
                            onClick={[Function]}
                            type="button"
                          >
                            Reset to default
                          </button>
                        </Button>
                      </div>
                    </ToolbarItem>
                  </div>
                </ToolbarGroupWithRef>
              </ForwardRef>
            </div>
          </ToolbarExpandableContent>
        </div>
      </ToolbarContent>
      <ToolbarChipGroupContent
        chipGroupContentRef={
          Object {
            "current": <div
              class="pf-c-toolbar__content"
            >
              <div
                class="pf-c-toolbar__group"
              >
                <div
                  class="pf-c-toolbar__item pf-m-chip-group"
                >
                  <div
                    class="pf-c-chip-group pf-m-category"
                  >
                    <span
                      aria-hidden="true"
                      class="pf-c-chip-group__label"
                      id="pf-random-id-16"
                    >
                      Filters
                    </span>
                    <ul
                      aria-labelledby="pf-random-id-16"
                      class="pf-c-chip-group__list"
                      role="list"
                    >
                      <li
                        class="pf-c-chip-group__list-item"
                      >
                        <div
                          class="pf-c-chip"
                          data-ouia-component-id="271"
                          data-ouia-component-type="PF4/Chip"
                          data-ouia-safe="true"
                        >
                          <span
                            class="pf-c-chip__text"
                            id="pf-random-id-17"
                          >
                            metadata / processInstances / state: ACTIVE
                          </span>
                          <button
                            aria-disabled="false"
                            aria-label="close"
                            aria-labelledby="remove_pf-random-id-17 pf-random-id-17"
                            class="pf-c-button pf-m-plain"
                            data-ouia-component-id="272"
                            data-ouia-component-type="PF4/Button"
                            data-ouia-safe="true"
                            id="remove_pf-random-id-17"
                            type="button"
                          >
                            <svg
                              aria-hidden="true"
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style="vertical-align: -0.125em;"
                              viewBox="0 0 352 512"
                              width="1em"
                            >
                              <path
                                d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                transform=""
                              />
                            </svg>
                          </button>
                        </div>
                      </li>
                    </ul>
                  </div>
                </div>
              </div>
              <div
                class="pf-c-toolbar__item"
              >
                <button
                  aria-disabled="false"
                  class="pf-c-button pf-m-link pf-m-inline"
                  data-ouia-component-id="274"
                  data-ouia-component-type="PF4/Button"
                  data-ouia-safe="true"
                  type="button"
                >
                  Reset to default
                </button>
              </div>
            </div>,
          }
        }
        clearAllFilters={[Function]}
        clearFiltersButtonText="Reset to default"
        collapseListedFiltersBreakpoint="md"
        isExpanded={false}
        numberOfFilters={1}
        showClearFiltersButton={true}
      >
        <div
          className="pf-c-toolbar__content"
        >
          <ForwardRef
            className=""
          >
            <ToolbarGroupWithRef
              className=""
              innerRef={null}
            >
              <div
                className="pf-c-toolbar__group"
              />
            </ToolbarGroupWithRef>
          </ForwardRef>
          <ToolbarItem>
            <div
              className="pf-c-toolbar__item"
            >
              <Button
                isInline={true}
                onClick={[Function]}
                variant="link"
              >
                <button
                  aria-disabled={false}
                  aria-label={null}
                  className="pf-c-button pf-m-link pf-m-inline"
                  data-ouia-component-id={274}
                  data-ouia-component-type="PF4/Button"
                  data-ouia-safe={true}
                  disabled={false}
                  onClick={[Function]}
                  type="button"
                >
                  Reset to default
                </button>
              </Button>
            </div>
          </ToolbarItem>
        </div>
      </ToolbarChipGroupContent>
    </div>
  </Toolbar>
  <Card
    className="kogito-common--domain-explorer__table-OverFlow"
    data-ouia-component-type="domain-explorer"
    data-ouia-safe={true}
  >
    <article
      className="pf-c-card kogito-common--domain-explorer__table-OverFlow"
      data-ouia-component-id={275}
      data-ouia-component-type="PF4/Card"
      data-ouia-safe={true}
    >
      <MockedDomainExplorerTable
        columnFilters={Array []}
        displayEmptyState={false}
        displayTable={false}
        filterChips={
          Array [
            "metadata / processInstances / state: ACTIVE",
          ]
        }
        filterError={[TypeError: Cannot read property 'data' of undefined]}
        finalFilters={
          Object {
            "metadata": Object {
              "processInstances": Object {
                "state": Object {
                  "equal": "ACTIVE",
                },
              },
            },
          }
        }
        handleRetry={[Function]}
        isLoadingMore={false}
        offset={0}
        onDeleteChip={[Function]}
        parameters={
          Array [
            Object {
              "flight": Array [
                "arrival",
              ],
            },
            Object {
              "flight": Array [
                "departure",
              ],
            },
          ]
        }
        rows={Array []}
        selected={Array []}
        setOrderByObj={[Function]}
        setRows={[Function]}
        setRunQuery={[Function]}
        setSortBy={[Function]}
        sortBy={Object {}}
        tableLoading={false}
      />
    </article>
  </Card>
</DomainExplorer>
`;
