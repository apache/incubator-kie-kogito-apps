// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`KogitoPageLayout component tests snapshot tests 1`] = `
<KogitoPageLayout
  BrandAltText="Kogito logo"
  BrandClick={[MockFunction]}
  BrandSrc="../../../../static/kogito.png"
  PageNav={
    <React.Fragment>
      page Navigation elements
    </React.Fragment>
  }
>
  <Page
    className="kogito-common--PageLayout"
    defaultManagedSidebarIsOpen={true}
    header={
      <PageHeader
        data-ouia-header="true"
        headerTools={
          <PageHeaderTools>
            <Context.Provider
              value="../../../../static/kogito.png"
            >
              <PageToolbar />
            </Context.Provider>
            <Avatar
              alt="Kogito Logo"
              src="avatar.svg"
            />
          </PageHeaderTools>
        }
        isNavOpen={true}
        logo={
          <Brand
            alt="Kogito logo"
            onClick={[MockFunction]}
            src="../../../../static/kogito.png"
          />
        }
        onNavToggle={[Function]}
        showNavToggle={true}
      />
    }
    isManagedSidebar={false}
    mainContainerId="main-content-page-layout-default-nav"
    mainTabIndex={-1}
    onPageResize={[Function]}
    sidebar={
      <PageSidebar
        data-ouia-navigation="true"
        isNavOpen={true}
        nav={
          <React.Fragment>
            page Navigation elements
          </React.Fragment>
        }
        theme="dark"
      />
    }
  >
    <div
      className="pf-c-page kogito-common--PageLayout"
    >
      <PageHeader
        data-ouia-header="true"
        headerTools={
          <PageHeaderTools>
            <Context.Provider
              value="../../../../static/kogito.png"
            >
              <PageToolbar />
            </Context.Provider>
            <Avatar
              alt="Kogito Logo"
              src="avatar.svg"
            />
          </PageHeaderTools>
        }
        isNavOpen={true}
        logo={
          <Brand
            alt="Kogito logo"
            onClick={[MockFunction]}
            src="../../../../static/kogito.png"
          />
        }
        onNavToggle={[Function]}
        showNavToggle={true}
      >
        <header
          className="pf-c-page__header"
          data-ouia-header="true"
        >
          <div
            className="pf-c-page__header-brand"
          >
            <div
              className="pf-c-page__header-brand-toggle"
            >
              <Button
                aria-controls="page-sidebar"
                aria-expanded="true"
                aria-label="Global navigation"
                id="nav-toggle"
                onClick={[Function]}
                variant="plain"
              >
                <button
                  aria-controls="page-sidebar"
                  aria-disabled={false}
                  aria-expanded="true"
                  aria-label="Global navigation"
                  className="pf-c-button pf-m-plain"
                  data-ouia-component-id={2}
                  data-ouia-component-type="PF4/Button"
                  data-ouia-safe={true}
                  disabled={false}
                  id="nav-toggle"
                  onClick={[Function]}
                  type="button"
                >
                  <BarsIcon
                    color="currentColor"
                    noVerticalAlign={false}
                    size="sm"
                  >
                    <svg
                      aria-hidden={true}
                      aria-labelledby={null}
                      fill="currentColor"
                      height="1em"
                      role="img"
                      style={
                        Object {
                          "verticalAlign": "-0.125em",
                        }
                      }
                      viewBox="0 0 448 512"
                      width="1em"
                    >
                      <path
                        d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"
                        transform=""
                      />
                    </svg>
                  </BarsIcon>
                </button>
              </Button>
            </div>
            <a
              className="pf-c-page__header-brand-link"
            >
              <Brand
                alt="Kogito logo"
                onClick={[MockFunction]}
                src="../../../../static/kogito.png"
              >
                <img
                  alt="Kogito logo"
                  className="pf-c-brand"
                  onClick={[MockFunction]}
                  src="../../../../static/kogito.png"
                />
              </Brand>
            </a>
          </div>
          <PageHeaderTools>
            <div
              className="pf-c-page__header-tools"
            >
              <PageToolbar>
                <AboutModalBox
                  handleModalToggleProp={[Function]}
                  isOpenProp={false}
                >
                  <AboutModal
                    appendTo={null}
                    backgroundImageSrc="kogitoAbout.png"
                    brandImageAlt="Kogito Logo"
                    brandImageSrc="../../../../static/kogito.png"
                    className="kogito-common--aboutModalBox"
                    data-ouia-component-type="AboutModalBox"
                    data-ouia-safe={true}
                    isOpen={false}
                    noAboutModalBoxContentContainer={false}
                    onClose={[Function]}
                    productName=""
                    trademark="undefined is part of Kogito, an open source software released under the Apache Software License 2.0"
                  >
                    <Portal
                      containerInfo={<div />}
                    >
                      <AboutModalContainer
                        aboutModalBoxContentId="pf-about-modal-content-0"
                        aboutModalBoxHeaderId="pf-about-modal-title-0"
                        backgroundImageSrc="kogitoAbout.png"
                        brandImageAlt="Kogito Logo"
                        brandImageSrc="../../../../static/kogito.png"
                        className="kogito-common--aboutModalBox"
                        data-ouia-component-type="AboutModalBox"
                        data-ouia-safe={true}
                        isOpen={false}
                        noAboutModalBoxContentContainer={false}
                        onClose={[Function]}
                        productName=""
                        trademark="undefined is part of Kogito, an open source software released under the Apache Software License 2.0"
                      />
                    </Portal>
                  </AboutModal>
                </AboutModalBox>
                <Toolbar
                  data-ouia-component-type="page-toolbar"
                  data-ouia-safe={true}
                >
                  <GenerateId
                    prefix="pf-random-id-"
                  >
                    <div
                      className="pf-c-toolbar"
                      data-ouia-component-type="page-toolbar"
                      data-ouia-safe={true}
                      id="pf-random-id-0"
                    >
                      <ForwardRef>
                        <ToolbarGroupWithRef
                          innerRef={null}
                        >
                          <div
                            className="pf-c-toolbar__group"
                          >
                            <ToolbarItem
                              className="pf-u-screen-reader pf-u-visible-on-md"
                            >
                              <div
                                className="pf-c-toolbar__item pf-u-screen-reader pf-u-visible-on-md"
                              >
                                <Dropdown
                                  dropdownItems={
                                    Array [
                                      <DropdownItem
                                        onClick={[Function]}
                                      >
                                        About
                                      </DropdownItem>,
                                    ]
                                  }
                                  isOpen={false}
                                  isPlain={true}
                                  onSelect={[Function]}
                                  position="right"
                                  toggle={
                                    <DropdownToggle
                                      onToggle={[Function]}
                                    >
                                      Anonymous
                                    </DropdownToggle>
                                  }
                                >
                                  <DropdownWithContext
                                    autoFocus={true}
                                    className=""
                                    direction="down"
                                    dropdownItems={
                                      Array [
                                        <DropdownItem
                                          onClick={[Function]}
                                        >
                                          About
                                        </DropdownItem>,
                                      ]
                                    }
                                    isGrouped={false}
                                    isOpen={false}
                                    isPlain={true}
                                    menuAppendTo="inline"
                                    onSelect={[Function]}
                                    position="right"
                                    toggle={
                                      <DropdownToggle
                                        onToggle={[Function]}
                                      >
                                        Anonymous
                                      </DropdownToggle>
                                    }
                                  >
                                    <div
                                      className="pf-c-dropdown pf-m-align-right"
                                      data-ouia-component-id={1}
                                      data-ouia-component-type="PF4/Dropdown"
                                      data-ouia-safe={true}
                                    >
                                      <DropdownToggle
                                        aria-haspopup={true}
                                        getMenuRef={[Function]}
                                        id="pf-dropdown-toggle-id-0"
                                        isOpen={false}
                                        isPlain={true}
                                        key=".0"
                                        onEnter={[Function]}
                                        onToggle={[Function]}
                                        parentRef={
                                          Object {
                                            "current": <div
                                              class="pf-c-dropdown pf-m-align-right"
                                              data-ouia-component-id="1"
                                              data-ouia-component-type="PF4/Dropdown"
                                              data-ouia-safe="true"
                                            >
                                              <button
                                                aria-expanded="false"
                                                aria-haspopup="true"
                                                class="pf-c-dropdown__toggle pf-m-plain"
                                                id="pf-dropdown-toggle-id-0"
                                                type="button"
                                              >
                                                <span
                                                  class="pf-c-dropdown__toggle-text"
                                                >
                                                  Anonymous
                                                </span>
                                                <span
                                                  class="pf-c-dropdown__toggle-icon"
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    fill="currentColor"
                                                    height="1em"
                                                    role="img"
                                                    style="vertical-align: -0.125em;"
                                                    viewBox="0 0 320 512"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                      transform=""
                                                    />
                                                  </svg>
                                                </span>
                                              </button>
                                            </div>,
                                          }
                                        }
                                      >
                                        <Toggle
                                          aria-haspopup={true}
                                          bubbleEvent={false}
                                          className=""
                                          getMenuRef={[Function]}
                                          id="pf-dropdown-toggle-id-0"
                                          isActive={false}
                                          isDisabled={false}
                                          isOpen={false}
                                          isPlain={true}
                                          isPrimary={false}
                                          isSplitButton={false}
                                          onEnter={[Function]}
                                          onToggle={[Function]}
                                          parentRef={
                                            Object {
                                              "current": <div
                                                class="pf-c-dropdown pf-m-align-right"
                                                data-ouia-component-id="1"
                                                data-ouia-component-type="PF4/Dropdown"
                                                data-ouia-safe="true"
                                              >
                                                <button
                                                  aria-expanded="false"
                                                  aria-haspopup="true"
                                                  class="pf-c-dropdown__toggle pf-m-plain"
                                                  id="pf-dropdown-toggle-id-0"
                                                  type="button"
                                                >
                                                  <span
                                                    class="pf-c-dropdown__toggle-text"
                                                  >
                                                    Anonymous
                                                  </span>
                                                  <span
                                                    class="pf-c-dropdown__toggle-icon"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style="vertical-align: -0.125em;"
                                                      viewBox="0 0 320 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </span>
                                                </button>
                                              </div>,
                                            }
                                          }
                                        >
                                          <button
                                            aria-expanded={false}
                                            aria-haspopup={true}
                                            className="pf-c-dropdown__toggle pf-m-plain"
                                            disabled={false}
                                            id="pf-dropdown-toggle-id-0"
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            type="button"
                                          >
                                            <span
                                              className="pf-c-dropdown__toggle-text"
                                            >
                                              Anonymous
                                            </span>
                                            <span
                                              className="pf-c-dropdown__toggle-icon"
                                            >
                                              <CaretDownIcon
                                                color="currentColor"
                                                noVerticalAlign={false}
                                                size="sm"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  aria-labelledby={null}
                                                  fill="currentColor"
                                                  height="1em"
                                                  role="img"
                                                  style={
                                                    Object {
                                                      "verticalAlign": "-0.125em",
                                                    }
                                                  }
                                                  viewBox="0 0 320 512"
                                                  width="1em"
                                                >
                                                  <path
                                                    d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                    transform=""
                                                  />
                                                </svg>
                                              </CaretDownIcon>
                                            </span>
                                          </button>
                                        </Toggle>
                                      </DropdownToggle>
                                    </div>
                                  </DropdownWithContext>
                                </Dropdown>
                              </div>
                            </ToolbarItem>
                          </div>
                        </ToolbarGroupWithRef>
                      </ForwardRef>
                      <ToolbarChipGroupContent
                        chipGroupContentRef={
                          Object {
                            "current": <div
                              class="pf-c-toolbar__content pf-m-hidden"
                              hidden=""
                            >
                              <div
                                class="pf-c-toolbar__group"
                              />
                            </div>,
                          }
                        }
                        clearFiltersButtonText="Clear all filters"
                        collapseListedFiltersBreakpoint="lg"
                        isExpanded={false}
                        numberOfFilters={0}
                        showClearFiltersButton={false}
                      >
                        <div
                          className="pf-c-toolbar__content pf-m-hidden"
                          hidden={true}
                        >
                          <ForwardRef
                            className=""
                          >
                            <ToolbarGroupWithRef
                              className=""
                              innerRef={null}
                            >
                              <div
                                className="pf-c-toolbar__group"
                              />
                            </ToolbarGroupWithRef>
                          </ForwardRef>
                        </div>
                      </ToolbarChipGroupContent>
                    </div>
                  </GenerateId>
                </Toolbar>
              </PageToolbar>
              <Avatar
                alt="Kogito Logo"
                src="avatar.svg"
              >
                <img
                  alt="Kogito Logo"
                  className="pf-c-avatar"
                  src="avatar.svg"
                />
              </Avatar>
            </div>
          </PageHeaderTools>
        </header>
      </PageHeader>
      <PageSidebar
        data-ouia-navigation="true"
        isNavOpen={true}
        nav={
          <React.Fragment>
            page Navigation elements
          </React.Fragment>
        }
        theme="dark"
      >
        <div
          className="pf-c-page__sidebar pf-m-expanded"
          data-ouia-navigation="true"
          id="page-sidebar"
        >
          <div
            className="pf-c-page__sidebar-body"
          >
            page Navigation elements
          </div>
        </div>
      </PageSidebar>
      <main
        className="pf-c-page__main"
        id="main-content-page-layout-default-nav"
        tabIndex={-1}
      >
        children rendered
      </main>
    </div>
  </Page>
</KogitoPageLayout>
`;
