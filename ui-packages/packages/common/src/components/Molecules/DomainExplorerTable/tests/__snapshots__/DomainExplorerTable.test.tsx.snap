// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Domain Explorer Table Component Snapshot test with default props 1`] = `
<DomainExplorerTable
  columnFilters={
    Array [
      Object {
        "flight": Object {
          "__typename": "Flight",
          "arrival": "Hello World",
          "departure": "Hello World",
          "flightNumber": "Hello World",
          "gate": "Hello World",
          "seat": "Hello World",
        },
        "metadata": Object {
          "processInstances": Array [
            Object {
              "businessKey": "Hello World",
              "id": "Hello World",
              "lastUpdate": "Tue, 12 May 2020 12:33:58 GMT",
              "processName": "Hello World",
              "start": "Tue, 12 May 2020 12:33:58 GMT",
              "state": "ERROR",
            },
            Object {
              "businessKey": "Hello World",
              "id": "Hello World",
              "lastUpdate": "Tue, 12 May 2020 12:33:58 GMT",
              "processName": "Hello World",
              "start": "Tue, 12 May 2020 12:33:58 GMT",
              "state": "ERROR",
            },
          ],
        },
      },
      Object {
        "flight": Object {
          "__typename": "Flight",
          "arrival": "Hello World",
          "departure": "Hello World",
          "flightNumber": "Hello World",
          "gate": "Hello World",
          "seat": "Hello World",
        },
        "metadata": Object {
          "processInstances": Array [
            Object {
              "businessKey": "Hello World",
              "id": "Hello World",
              "lastUpdate": "Tue, 12 May 2020 12:33:58 GMT",
              "processName": "Hello World",
              "start": "Tue, 12 May 2020 12:33:58 GMT",
              "state": "ERROR",
            },
            Object {
              "businessKey": "Hello World",
              "id": "Hello World",
              "lastUpdate": "Tue, 12 May 2020 12:33:58 GMT",
              "processName": "Hello World",
              "start": "Tue, 12 May 2020 12:33:58 GMT",
              "state": "ERROR",
            },
          ],
        },
      },
    ]
  }
  displayEmptyState={false}
  displayTable={true}
  filterChips={
    Array [
      "metadata / processInstances / state: ACTIVE",
    ]
  }
  filterError=""
  finalFilters={Object {}}
  handleRetry={[MockFunction]}
  isLoadingMore={true}
  offset={10}
  onDeleteChip={[MockFunction]}
  parameters={Array []}
  rows={
    Array [
      Object {
        "cells": Array [
          "Hello World",
          "Hello World",
          "Hello World",
          "Hello World",
          "Hello World",
        ],
        "isOpen": false,
        "rowKey": "0.008857835601127073",
      },
      Object {
        "cells": Array [
          Object {
            "title": "",
          },
        ],
        "parent": 0,
        "rowKey": "0.6632979792309541",
      },
    ]
  }
  selected={Array []}
  setOrderByObj={[MockFunction]}
  setRows={
    [MockFunction] {
      "calls": Array [
        Array [
          [Function],
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  setRunQuery={[MockFunction]}
  setSortBy={[MockFunction]}
  sortBy={
    Object {
      "direction": "asc",
      "index": 6,
    }
  }
  tableLoading={false}
/>
`;

exports[`Domain Explorer Table Component check null value for process instance attributes 1`] = `
<DomainExplorerTable
  columnFilters={
    Array [
      Object {
        "flight": Object {
          "__typename": "Flight",
          "arrival": "Hello World",
          "departure": "Hello World",
          "flightNumber": "Hello World",
          "gate": "Hello World",
          "seat": "Hello World",
        },
        "metadata": Object {
          "processInstances": Array [
            Object {
              "businessKey": "Hello World",
              "id": "Hello World",
              "lastUpdate": "Tue, 12 May 2020 12:33:58 GMT",
              "processName": "Hello World",
              "start": "Tue, 12 May 2020 12:33:58 GMT",
              "state": "ERROR",
            },
            Object {
              "businessKey": "Hello World",
              "id": "Hello World",
              "lastUpdate": "Tue, 12 May 2020 12:33:58 GMT",
              "processName": "Hello World",
              "start": "Tue, 12 May 2020 12:33:58 GMT",
              "state": "ABORTED",
            },
          ],
        },
      },
      Object {
        "flight": Object {
          "__typename": "Flight",
          "arrival": null,
          "departure": "Hello World",
          "flightNumber": "Hello World",
          "gate": "Hello World",
          "seat": "Hello World",
        },
        "metadata": Object {
          "processInstances": Array [
            Object {
              "businessKey": null,
              "id": "Hello World",
              "lastUpdate": "Tue, 12 May 2020 12:33:58 GMT",
              "processName": "Hello World",
              "start": "Tue, 12 May 2020 12:33:58 GMT",
              "state": "ERROR",
            },
            Object {
              "businessKey": "Hello World",
              "id": "Hello World",
              "lastUpdate": "Tue, 12 May 2020 12:33:58 GMT",
              "processName": "Hello World",
              "start": "Tue, 12 May 2020 12:33:58 GMT",
              "state": "ERROR",
            },
          ],
        },
      },
    ]
  }
  displayEmptyState={true}
  displayTable={true}
  filterChips={
    Array [
      "metadata / processInstances / state: ACTIVE",
    ]
  }
  filterError=""
  finalFilters={Object {}}
  handleRetry={[MockFunction]}
  isLoadingMore={false}
  offset={0}
  onDeleteChip={[MockFunction]}
  parameters={Array []}
  rows={
    Array [
      Object {
        "cells": Array [
          "Hello World",
          "Hello World",
          "Hello World",
          "Hello World",
          "Hello World",
        ],
        "isOpen": false,
        "rowKey": "0.008857835601127073",
      },
      Object {
        "cells": Array [
          Object {
            "title": "",
          },
        ],
        "parent": 0,
        "rowKey": "0.6632979792309541",
      },
    ]
  }
  selected={Array []}
  setOrderByObj={[MockFunction]}
  setRows={
    [MockFunction] {
      "calls": Array [
        Array [
          [Function],
        ],
        Array [
          [Function],
        ],
        Array [
          Array [
            Object {
              "cells": Array [
                "Hello World",
                "Hello World",
                "Hello World",
                "Hello World",
                "Hello World",
              ],
              "isOpen": false,
              "rowKey": "0.7218415351930461",
            },
            Object {
              "cells": Array [
                Object {
                  "title": <Table
                    aria-label="Process Instances"
                    borders={true}
                    canSelectAll={true}
                    canSortFavorites={true}
                    cells={
                      Array [
                        "Process name",
                        "State",
                        "Start",
                        "Last update",
                      ]
                    }
                    className="kogito-common__embedded-table"
                    contentId="expanded-content"
                    dropdownDirection="down"
                    dropdownPosition="right"
                    expandId="expandable-toggle"
                    gridBreakPoint="grid-md"
                    isStickyHeader={false}
                    ouiaSafe={true}
                    role="grid"
                    rowLabeledBy="simple-node"
                    rows={
                      Array [
                        Object {
                          "cells": Array [
                            Object {
                              "title": <React.Fragment>
                                <HistoryIcon
                                  className="pf-u-mr-sm"
                                  color="currentColor"
                                  noVerticalAlign={false}
                                  size="sm"
                                />
                                 Updated
                                 
                                <t
                                  ago={false}
                                  calendar={false}
                                  decimal={false}
                                  element={null}
                                  filter={[Function]}
                                  fromNow={true}
                                  interval={60000}
                                  local={false}
                                  onChange={[Function]}
                                  titleFormat=""
                                  toNow={false}
                                  unit={null}
                                  unix={false}
                                  utc={false}
                                  withTitle={false}
                                >
                                  Tue, 12 May 2020 12:33:58 GMT
                                </t>
                              </React.Fragment>,
                            },
                            Object {
                              "title": <React.Fragment>
                                <Link
                                  to={
                                    Object {
                                      "pathname": "/Process/Hello World",
                                      "state": Object {
                                        "filterChips": Array [
                                          "metadata / processInstances / state: ACTIVE",
                                        ],
                                        "finalFilters": Object {},
                                        "parameters": Array [],
                                        "selected": Array [],
                                      },
                                    }
                                  }
                                >
                                  <strong>
                                    <MockedItemDescriptor
                                      itemDescription={
                                        Object {
                                          "description": "Hello World",
                                          "id": "Hello World",
                                          "name": "Hello World",
                                        }
                                      }
                                    />
                                  </strong>
                                </Link>
                                <div>
                                  <EndpointLink
                                    isLinkShown={false}
                                  />
                                </div>
                              </React.Fragment>,
                            },
                            Object {
                              "title": <t
                                ago={false}
                                calendar={false}
                                decimal={false}
                                element={null}
                                filter={[Function]}
                                fromNow={true}
                                interval={60000}
                                local={false}
                                onChange={[Function]}
                                titleFormat=""
                                toNow={false}
                                unit={null}
                                unix={false}
                                utc={false}
                                withTitle={false}
                              >
                                Tue, 12 May 2020 12:33:58 GMT
                              </t>,
                            },
                            Object {
                              "title": <React.Fragment>
                                <OnRunningIcon
                                  className="pf-u-mr-sm"
                                  color="currentColor"
                                  noVerticalAlign={false}
                                  size="sm"
                                />
                                Active
                              </React.Fragment>,
                            },
                          ],
                          "rowKey": "0.7218415351930461",
                        },
                        Object {
                          "cells": Array [
                            Object {
                              "title": <React.Fragment>
                                <HistoryIcon
                                  className="pf-u-mr-sm"
                                  color="currentColor"
                                  noVerticalAlign={false}
                                  size="sm"
                                />
                                 Updated
                                 
                                <t
                                  ago={false}
                                  calendar={false}
                                  decimal={false}
                                  element={null}
                                  filter={[Function]}
                                  fromNow={true}
                                  interval={60000}
                                  local={false}
                                  onChange={[Function]}
                                  titleFormat=""
                                  toNow={false}
                                  unit={null}
                                  unix={false}
                                  utc={false}
                                  withTitle={false}
                                >
                                  Tue, 12 May 2020 12:33:58 GMT
                                </t>
                              </React.Fragment>,
                            },
                            Object {
                              "title": <React.Fragment>
                                <Link
                                  to={
                                    Object {
                                      "pathname": "/Process/Hello World",
                                      "state": Object {
                                        "filterChips": Array [
                                          "metadata / processInstances / state: ACTIVE",
                                        ],
                                        "finalFilters": Object {},
                                        "parameters": Array [],
                                        "selected": Array [],
                                      },
                                    }
                                  }
                                >
                                  <strong>
                                    <MockedItemDescriptor
                                      itemDescription={
                                        Object {
                                          "description": "Hello World",
                                          "id": "Hello World",
                                          "name": "Hello World",
                                        }
                                      }
                                    />
                                  </strong>
                                </Link>
                                <div>
                                  <EndpointLink
                                    isLinkShown={false}
                                  />
                                </div>
                              </React.Fragment>,
                            },
                            Object {
                              "title": <t
                                ago={false}
                                calendar={false}
                                decimal={false}
                                element={null}
                                filter={[Function]}
                                fromNow={true}
                                interval={60000}
                                local={false}
                                onChange={[Function]}
                                titleFormat=""
                                toNow={false}
                                unit={null}
                                unix={false}
                                utc={false}
                                withTitle={false}
                              >
                                Tue, 12 May 2020 12:33:58 GMT
                              </t>,
                            },
                            Object {
                              "title": <React.Fragment>
                                <CheckCircleIcon
                                  className="pf-u-mr-sm"
                                  color="var(--pf-global--success-color--100)"
                                  noVerticalAlign={false}
                                  size="sm"
                                />
                                Completed
                              </React.Fragment>,
                            },
                          ],
                          "rowKey": "0.7218415351930461",
                        },
                      ]
                    }
                    selectVariant="checkbox"
                    variant="compact"
                  >
                    <TableHeader />
                    <Unknown />
                  </Table>,
                },
              ],
              "parent": 0,
              "rowKey": "0.7218415351930461",
            },
            Object {
              "cells": Array [
                "Hello World",
                "Hello World",
                "Hello World",
                "Hello World",
                "Hello World",
              ],
              "isOpen": false,
              "rowKey": "0.7218415351930461",
            },
            Object {
              "cells": Array [
                Object {
                  "title": <Table
                    aria-label="Process Instances"
                    borders={true}
                    canSelectAll={true}
                    canSortFavorites={true}
                    cells={
                      Array [
                        "Process name",
                        "State",
                        "Start",
                        "Last update",
                      ]
                    }
                    className="kogito-common__embedded-table"
                    contentId="expanded-content"
                    dropdownDirection="down"
                    dropdownPosition="right"
                    expandId="expandable-toggle"
                    gridBreakPoint="grid-md"
                    isStickyHeader={false}
                    ouiaSafe={true}
                    role="grid"
                    rowLabeledBy="simple-node"
                    rows={
                      Array [
                        Object {
                          "cells": Array [
                            Object {
                              "title": <React.Fragment>
                                <HistoryIcon
                                  className="pf-u-mr-sm"
                                  color="currentColor"
                                  noVerticalAlign={false}
                                  size="sm"
                                />
                                 Updated
                                 
                                <t
                                  ago={false}
                                  calendar={false}
                                  decimal={false}
                                  element={null}
                                  filter={[Function]}
                                  fromNow={true}
                                  interval={60000}
                                  local={false}
                                  onChange={[Function]}
                                  titleFormat=""
                                  toNow={false}
                                  unit={null}
                                  unix={false}
                                  utc={false}
                                  withTitle={false}
                                >
                                  Tue, 12 May 2020 12:33:58 GMT
                                </t>
                              </React.Fragment>,
                            },
                            Object {
                              "title": <React.Fragment>
                                <Link
                                  to={
                                    Object {
                                      "pathname": "/Process/Hello World",
                                      "state": Object {
                                        "filterChips": Array [
                                          "metadata / processInstances / state: ACTIVE",
                                        ],
                                        "finalFilters": Object {},
                                        "parameters": Array [],
                                        "selected": Array [],
                                      },
                                    }
                                  }
                                >
                                  <strong>
                                    <MockedItemDescriptor
                                      itemDescription={
                                        Object {
                                          "description": "Hello World",
                                          "id": "Hello World",
                                          "name": "Hello World",
                                        }
                                      }
                                    />
                                  </strong>
                                </Link>
                                <div>
                                  <EndpointLink
                                    isLinkShown={false}
                                  />
                                </div>
                              </React.Fragment>,
                            },
                            Object {
                              "title": <t
                                ago={false}
                                calendar={false}
                                decimal={false}
                                element={null}
                                filter={[Function]}
                                fromNow={true}
                                interval={60000}
                                local={false}
                                onChange={[Function]}
                                titleFormat=""
                                toNow={false}
                                unit={null}
                                unix={false}
                                utc={false}
                                withTitle={false}
                              >
                                Tue, 12 May 2020 12:33:58 GMT
                              </t>,
                            },
                            Object {
                              "title": <React.Fragment>
                                <PausedIcon
                                  className="pf-u-mr-sm"
                                  color="currentColor"
                                  noVerticalAlign={false}
                                  size="sm"
                                />
                                Pending
                              </React.Fragment>,
                            },
                          ],
                          "rowKey": "0.7218415351930461",
                        },
                        Object {
                          "cells": Array [
                            Object {
                              "title": <React.Fragment>
                                <HistoryIcon
                                  className="pf-u-mr-sm"
                                  color="currentColor"
                                  noVerticalAlign={false}
                                  size="sm"
                                />
                                 Updated
                                 
                                <t
                                  ago={false}
                                  calendar={false}
                                  decimal={false}
                                  element={null}
                                  filter={[Function]}
                                  fromNow={true}
                                  interval={60000}
                                  local={false}
                                  onChange={[Function]}
                                  titleFormat=""
                                  toNow={false}
                                  unit={null}
                                  unix={false}
                                  utc={false}
                                  withTitle={false}
                                >
                                  Tue, 12 May 2020 12:33:58 GMT
                                </t>
                              </React.Fragment>,
                            },
                            Object {
                              "title": <React.Fragment>
                                <Link
                                  to={
                                    Object {
                                      "pathname": "/Process/Hello World",
                                      "state": Object {
                                        "filterChips": Array [
                                          "metadata / processInstances / state: ACTIVE",
                                        ],
                                        "finalFilters": Object {},
                                        "parameters": Array [],
                                        "selected": Array [],
                                      },
                                    }
                                  }
                                >
                                  <strong>
                                    <MockedItemDescriptor
                                      itemDescription={
                                        Object {
                                          "description": "Hello World",
                                          "id": "Hello World",
                                          "name": "Hello World",
                                        }
                                      }
                                    />
                                  </strong>
                                </Link>
                                <div>
                                  <EndpointLink
                                    isLinkShown={false}
                                  />
                                </div>
                              </React.Fragment>,
                            },
                            Object {
                              "title": <t
                                ago={false}
                                calendar={false}
                                decimal={false}
                                element={null}
                                filter={[Function]}
                                fromNow={true}
                                interval={60000}
                                local={false}
                                onChange={[Function]}
                                titleFormat=""
                                toNow={false}
                                unit={null}
                                unix={false}
                                utc={false}
                                withTitle={false}
                              >
                                Tue, 12 May 2020 12:33:58 GMT
                              </t>,
                            },
                            Object {
                              "title": <React.Fragment>
                                <PausedIcon
                                  className="pf-u-mr-sm"
                                  color="currentColor"
                                  noVerticalAlign={false}
                                  size="sm"
                                />
                                Suspended
                              </React.Fragment>,
                            },
                          ],
                          "rowKey": "0.7218415351930461",
                        },
                      ]
                    }
                    selectVariant="checkbox"
                    variant="compact"
                  >
                    <TableHeader />
                    <Unknown />
                  </Table>,
                },
              ],
              "parent": 2,
              "rowKey": "0.7218415351930461",
            },
          ],
        ],
        Array [
          [Function],
        ],
        Array [
          Array [
            Object {
              "cells": Array [
                "Hello World",
                "Hello World",
                "Hello World",
                "Hello World",
                "Hello World",
              ],
              "isOpen": false,
              "rowKey": "0.7218415351930461",
            },
            Object {
              "cells": Array [
                Object {
                  "title": <Table
                    aria-label="Process Instances"
                    borders={true}
                    canSelectAll={true}
                    canSortFavorites={true}
                    cells={
                      Array [
                        "Process name",
                        "State",
                        "Start",
                        "Last update",
                      ]
                    }
                    className="kogito-common__embedded-table"
                    contentId="expanded-content"
                    dropdownDirection="down"
                    dropdownPosition="right"
                    expandId="expandable-toggle"
                    gridBreakPoint="grid-md"
                    isStickyHeader={false}
                    ouiaSafe={true}
                    role="grid"
                    rowLabeledBy="simple-node"
                    rows={
                      Array [
                        Object {
                          "cells": Array [
                            Object {
                              "title": <React.Fragment>
                                <HistoryIcon
                                  className="pf-u-mr-sm"
                                  color="currentColor"
                                  noVerticalAlign={false}
                                  size="sm"
                                />
                                 Updated
                                 
                                <t
                                  ago={false}
                                  calendar={false}
                                  decimal={false}
                                  element={null}
                                  filter={[Function]}
                                  fromNow={true}
                                  interval={60000}
                                  local={false}
                                  onChange={[Function]}
                                  titleFormat=""
                                  toNow={false}
                                  unit={null}
                                  unix={false}
                                  utc={false}
                                  withTitle={false}
                                >
                                  Tue, 12 May 2020 12:33:58 GMT
                                </t>
                              </React.Fragment>,
                            },
                            Object {
                              "title": <React.Fragment>
                                <Link
                                  to={
                                    Object {
                                      "pathname": "/Process/Hello World",
                                      "state": Object {
                                        "filterChips": Array [
                                          "metadata / processInstances / state: ACTIVE",
                                        ],
                                        "finalFilters": Object {},
                                        "parameters": Array [],
                                        "selected": Array [],
                                      },
                                    }
                                  }
                                >
                                  <strong>
                                    <MockedItemDescriptor
                                      itemDescription={
                                        Object {
                                          "description": "Hello World",
                                          "id": "Hello World",
                                          "name": "Hello World",
                                        }
                                      }
                                    />
                                  </strong>
                                </Link>
                                <div>
                                  <EndpointLink
                                    isLinkShown={false}
                                  />
                                </div>
                              </React.Fragment>,
                            },
                            Object {
                              "title": <t
                                ago={false}
                                calendar={false}
                                decimal={false}
                                element={null}
                                filter={[Function]}
                                fromNow={true}
                                interval={60000}
                                local={false}
                                onChange={[Function]}
                                titleFormat=""
                                toNow={false}
                                unit={null}
                                unix={false}
                                utc={false}
                                withTitle={false}
                              >
                                Tue, 12 May 2020 12:33:58 GMT
                              </t>,
                            },
                            Object {
                              "title": <React.Fragment>
                                <ErrorCircleOIcon
                                  className="pf-u-mr-sm"
                                  color="var(--pf-global--danger-color--100)"
                                  noVerticalAlign={false}
                                  size="sm"
                                />
                                Error
                              </React.Fragment>,
                            },
                          ],
                          "rowKey": "0.7218415351930461",
                        },
                        Object {
                          "cells": Array [
                            Object {
                              "title": <React.Fragment>
                                <HistoryIcon
                                  className="pf-u-mr-sm"
                                  color="currentColor"
                                  noVerticalAlign={false}
                                  size="sm"
                                />
                                 Updated
                                 
                                <t
                                  ago={false}
                                  calendar={false}
                                  decimal={false}
                                  element={null}
                                  filter={[Function]}
                                  fromNow={true}
                                  interval={60000}
                                  local={false}
                                  onChange={[Function]}
                                  titleFormat=""
                                  toNow={false}
                                  unit={null}
                                  unix={false}
                                  utc={false}
                                  withTitle={false}
                                >
                                  Tue, 12 May 2020 12:33:58 GMT
                                </t>
                              </React.Fragment>,
                            },
                            Object {
                              "title": <React.Fragment>
                                <Link
                                  to={
                                    Object {
                                      "pathname": "/Process/Hello World",
                                      "state": Object {
                                        "filterChips": Array [
                                          "metadata / processInstances / state: ACTIVE",
                                        ],
                                        "finalFilters": Object {},
                                        "parameters": Array [],
                                        "selected": Array [],
                                      },
                                    }
                                  }
                                >
                                  <strong>
                                    <MockedItemDescriptor
                                      itemDescription={
                                        Object {
                                          "description": "Hello World",
                                          "id": "Hello World",
                                          "name": "Hello World",
                                        }
                                      }
                                    />
                                  </strong>
                                </Link>
                                <div>
                                  <EndpointLink
                                    isLinkShown={false}
                                  />
                                </div>
                              </React.Fragment>,
                            },
                            Object {
                              "title": <t
                                ago={false}
                                calendar={false}
                                decimal={false}
                                element={null}
                                filter={[Function]}
                                fromNow={true}
                                interval={60000}
                                local={false}
                                onChange={[Function]}
                                titleFormat=""
                                toNow={false}
                                unit={null}
                                unix={false}
                                utc={false}
                                withTitle={false}
                              >
                                Tue, 12 May 2020 12:33:58 GMT
                              </t>,
                            },
                            Object {
                              "title": <React.Fragment>
                                <BanIcon
                                  className="pf-u-mr-sm"
                                  color="currentColor"
                                  noVerticalAlign={false}
                                  size="sm"
                                />
                                Aborted
                              </React.Fragment>,
                            },
                          ],
                          "rowKey": "0.7218415351930461",
                        },
                      ]
                    }
                    selectVariant="checkbox"
                    variant="compact"
                  >
                    <TableHeader />
                    <Unknown />
                  </Table>,
                },
              ],
              "parent": 0,
              "rowKey": "0.7218415351930461",
            },
            Object {
              "cells": Array [
                null,
                "Hello World",
                "Hello World",
                "Hello World",
                "Hello World",
              ],
              "isOpen": false,
              "rowKey": "0.7218415351930461",
            },
            Object {
              "cells": Array [
                Object {
                  "title": <Table
                    aria-label="Process Instances"
                    borders={true}
                    canSelectAll={true}
                    canSortFavorites={true}
                    cells={
                      Array [
                        "Process name",
                        "State",
                        "Start",
                        "Last update",
                      ]
                    }
                    className="kogito-common__embedded-table"
                    contentId="expanded-content"
                    dropdownDirection="down"
                    dropdownPosition="right"
                    expandId="expandable-toggle"
                    gridBreakPoint="grid-md"
                    isStickyHeader={false}
                    ouiaSafe={true}
                    role="grid"
                    rowLabeledBy="simple-node"
                    rows={
                      Array [
                        Object {
                          "cells": Array [
                            Object {
                              "title": <React.Fragment>
                                <HistoryIcon
                                  className="pf-u-mr-sm"
                                  color="currentColor"
                                  noVerticalAlign={false}
                                  size="sm"
                                />
                                 Updated
                                 
                                <t
                                  ago={false}
                                  calendar={false}
                                  decimal={false}
                                  element={null}
                                  filter={[Function]}
                                  fromNow={true}
                                  interval={60000}
                                  local={false}
                                  onChange={[Function]}
                                  titleFormat=""
                                  toNow={false}
                                  unit={null}
                                  unix={false}
                                  utc={false}
                                  withTitle={false}
                                >
                                  Tue, 12 May 2020 12:33:58 GMT
                                </t>
                              </React.Fragment>,
                            },
                            Object {
                              "title": <React.Fragment>
                                <Link
                                  to={
                                    Object {
                                      "pathname": "/Process/Hello World",
                                      "state": Object {
                                        "filterChips": Array [
                                          "metadata / processInstances / state: ACTIVE",
                                        ],
                                        "finalFilters": Object {},
                                        "parameters": Array [],
                                        "selected": Array [],
                                      },
                                    }
                                  }
                                >
                                  <strong>
                                    <MockedItemDescriptor
                                      itemDescription={
                                        Object {
                                          "description": null,
                                          "id": "Hello World",
                                          "name": "Hello World",
                                        }
                                      }
                                    />
                                  </strong>
                                </Link>
                                <div>
                                  <EndpointLink
                                    isLinkShown={false}
                                  />
                                </div>
                              </React.Fragment>,
                            },
                            Object {
                              "title": <t
                                ago={false}
                                calendar={false}
                                decimal={false}
                                element={null}
                                filter={[Function]}
                                fromNow={true}
                                interval={60000}
                                local={false}
                                onChange={[Function]}
                                titleFormat=""
                                toNow={false}
                                unit={null}
                                unix={false}
                                utc={false}
                                withTitle={false}
                              >
                                Tue, 12 May 2020 12:33:58 GMT
                              </t>,
                            },
                            Object {
                              "title": <React.Fragment>
                                <ErrorCircleOIcon
                                  className="pf-u-mr-sm"
                                  color="var(--pf-global--danger-color--100)"
                                  noVerticalAlign={false}
                                  size="sm"
                                />
                                Error
                              </React.Fragment>,
                            },
                          ],
                          "rowKey": "0.7218415351930461",
                        },
                        Object {
                          "cells": Array [
                            Object {
                              "title": <React.Fragment>
                                <HistoryIcon
                                  className="pf-u-mr-sm"
                                  color="currentColor"
                                  noVerticalAlign={false}
                                  size="sm"
                                />
                                 Updated
                                 
                                <t
                                  ago={false}
                                  calendar={false}
                                  decimal={false}
                                  element={null}
                                  filter={[Function]}
                                  fromNow={true}
                                  interval={60000}
                                  local={false}
                                  onChange={[Function]}
                                  titleFormat=""
                                  toNow={false}
                                  unit={null}
                                  unix={false}
                                  utc={false}
                                  withTitle={false}
                                >
                                  Tue, 12 May 2020 12:33:58 GMT
                                </t>
                              </React.Fragment>,
                            },
                            Object {
                              "title": <React.Fragment>
                                <Link
                                  to={
                                    Object {
                                      "pathname": "/Process/Hello World",
                                      "state": Object {
                                        "filterChips": Array [
                                          "metadata / processInstances / state: ACTIVE",
                                        ],
                                        "finalFilters": Object {},
                                        "parameters": Array [],
                                        "selected": Array [],
                                      },
                                    }
                                  }
                                >
                                  <strong>
                                    <MockedItemDescriptor
                                      itemDescription={
                                        Object {
                                          "description": "Hello World",
                                          "id": "Hello World",
                                          "name": "Hello World",
                                        }
                                      }
                                    />
                                  </strong>
                                </Link>
                                <div>
                                  <EndpointLink
                                    isLinkShown={false}
                                  />
                                </div>
                              </React.Fragment>,
                            },
                            Object {
                              "title": <t
                                ago={false}
                                calendar={false}
                                decimal={false}
                                element={null}
                                filter={[Function]}
                                fromNow={true}
                                interval={60000}
                                local={false}
                                onChange={[Function]}
                                titleFormat=""
                                toNow={false}
                                unit={null}
                                unix={false}
                                utc={false}
                                withTitle={false}
                              >
                                Tue, 12 May 2020 12:33:58 GMT
                              </t>,
                            },
                            Object {
                              "title": <React.Fragment>
                                <ErrorCircleOIcon
                                  className="pf-u-mr-sm"
                                  color="var(--pf-global--danger-color--100)"
                                  noVerticalAlign={false}
                                  size="sm"
                                />
                                Error
                              </React.Fragment>,
                            },
                          ],
                          "rowKey": "0.7218415351930461",
                        },
                      ]
                    }
                    selectVariant="checkbox"
                    variant="compact"
                  >
                    <TableHeader />
                    <Unknown />
                  </Table>,
                },
              ],
              "parent": 2,
              "rowKey": "0.7218415351930461",
            },
          ],
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  setRunQuery={[MockFunction]}
  setSortBy={[MockFunction]}
  sortBy={
    Object {
      "direction": "asc",
      "index": 6,
    }
  }
  tableLoading={true}
/>
`;
