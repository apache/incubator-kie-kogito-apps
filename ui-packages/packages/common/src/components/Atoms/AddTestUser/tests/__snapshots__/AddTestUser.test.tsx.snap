// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddTestUser tests Add test with successful validation 1`] = `
<Form>
  <form
    className="pf-c-form"
    noValidate={true}
  >
    <FormGroup
      fieldId="userId"
      isRequired={true}
      label="User Id"
      validated="default"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-label"
        >
          <label
            className="pf-c-form__label"
            htmlFor="userId"
          >
            <span
              className="pf-c-form__label-text"
            >
              User Id
            </span>
            <span
              aria-hidden="true"
              className="pf-c-form__label-required"
            >
               
              *
            </span>
          </label>
           
        </div>
        <div
          className="pf-c-form__group-control"
        >
          <TextInput
            id="userId"
            onChange={[Function]}
            validated="default"
          >
            <MockedComponent />
          </TextInput>
        </div>
      </div>
    </FormGroup>
    <FormGroup
      fieldId="groups"
      helperText="Comma-separated list of groups for the user(i.e. \\"managers,human-resources\\")"
      isRequired={true}
      label="Groups"
      validated="default"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-label"
        >
          <label
            className="pf-c-form__label"
            htmlFor="groups"
          >
            <span
              className="pf-c-form__label-text"
            >
              Groups
            </span>
            <span
              aria-hidden="true"
              className="pf-c-form__label-required"
            >
               
              *
            </span>
          </label>
           
        </div>
        <div
          className="pf-c-form__group-control"
        >
          <TextInput
            id="groups"
            onChange={[Function]}
            validated="default"
          >
            <MockedComponent />
          </TextInput>
          <div
            aria-live="polite"
            className="pf-c-form__helper-text"
            id="groups-helper"
          >
            Comma-separated list of groups for the user(i.e. "managers,human-resources")
          </div>
        </div>
      </div>
    </FormGroup>
    <FormGroup
      fieldId="login"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-control"
        >
          <Checkbox
            id="login"
            isChecked={true}
            label="Log in with user after adding it"
            onChange={[Function]}
          >
            <MockedComponent />
          </Checkbox>
        </div>
      </div>
    </FormGroup>
    <ActionGroup>
      <div
        className="pf-c-form__group pf-m-action"
      >
        <div
          className="pf-c-form__group-control"
        >
          <div
            className="pf-c-form__actions"
          >
            <Button
              id="add-test-user"
              onClick={[Function]}
              variant="primary"
            >
              <MockedComponent />
            </Button>
            <Button
              id="cancel-add-test-user"
              onClick={[Function]}
              variant="secondary"
            >
              <MockedComponent />
            </Button>
          </div>
        </div>
      </div>
    </ActionGroup>
  </form>
</Form>
`;

exports[`AddTestUser tests Add test with successful validation 2`] = `
<Form>
  <form
    className="pf-c-form"
    noValidate={true}
  >
    <FormGroup
      fieldId="userId"
      helperTextInvalid={null}
      isRequired={true}
      label="User Id"
      validated="success"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-label"
        >
          <label
            className="pf-c-form__label"
            htmlFor="userId"
          >
            <span
              className="pf-c-form__label-text"
            >
              User Id
            </span>
            <span
              aria-hidden="true"
              className="pf-c-form__label-required"
            >
               
              *
            </span>
          </label>
           
        </div>
        <div
          className="pf-c-form__group-control"
        >
          <TextInput
            id="userId"
            onChange={[Function]}
            validated="success"
            value="userId"
          >
            <MockedComponent />
          </TextInput>
        </div>
      </div>
    </FormGroup>
    <FormGroup
      fieldId="groups"
      helperText="Comma-separated list of groups for the user(i.e. \\"managers,human-resources\\")"
      helperTextInvalid={null}
      isRequired={true}
      label="Groups"
      validated="success"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-label"
        >
          <label
            className="pf-c-form__label"
            htmlFor="groups"
          >
            <span
              className="pf-c-form__label-text"
            >
              Groups
            </span>
            <span
              aria-hidden="true"
              className="pf-c-form__label-required"
            >
               
              *
            </span>
          </label>
           
        </div>
        <div
          className="pf-c-form__group-control"
        >
          <TextInput
            id="groups"
            onChange={[Function]}
            validated="success"
            value="group1,group2"
          >
            <MockedComponent />
          </TextInput>
          <div
            aria-live="polite"
            className="pf-c-form__helper-text pf-m-success"
            id="groups-helper"
          >
            Comma-separated list of groups for the user(i.e. "managers,human-resources")
          </div>
        </div>
      </div>
    </FormGroup>
    <FormGroup
      fieldId="login"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-control"
        >
          <Checkbox
            id="login"
            isChecked={true}
            label="Log in with user after adding it"
            onChange={[Function]}
          >
            <MockedComponent />
          </Checkbox>
        </div>
      </div>
    </FormGroup>
    <ActionGroup>
      <div
        className="pf-c-form__group pf-m-action"
      >
        <div
          className="pf-c-form__group-control"
        >
          <div
            className="pf-c-form__actions"
          >
            <Button
              id="add-test-user"
              onClick={[Function]}
              variant="primary"
            >
              <MockedComponent />
            </Button>
            <Button
              id="cancel-add-test-user"
              onClick={[Function]}
              variant="secondary"
            >
              <MockedComponent />
            </Button>
          </div>
        </div>
      </div>
    </ActionGroup>
  </form>
</Form>
`;

exports[`AddTestUser tests Add test with validation error 1`] = `
<Form>
  <form
    className="pf-c-form"
    noValidate={true}
  >
    <FormGroup
      fieldId="userId"
      isRequired={true}
      label="User Id"
      validated="default"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-label"
        >
          <label
            className="pf-c-form__label"
            htmlFor="userId"
          >
            <span
              className="pf-c-form__label-text"
            >
              User Id
            </span>
            <span
              aria-hidden="true"
              className="pf-c-form__label-required"
            >
               
              *
            </span>
          </label>
           
        </div>
        <div
          className="pf-c-form__group-control"
        >
          <TextInput
            id="userId"
            onChange={[Function]}
            validated="default"
          >
            <MockedComponent />
          </TextInput>
        </div>
      </div>
    </FormGroup>
    <FormGroup
      fieldId="groups"
      helperText="Comma-separated list of groups for the user(i.e. \\"managers,human-resources\\")"
      isRequired={true}
      label="Groups"
      validated="default"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-label"
        >
          <label
            className="pf-c-form__label"
            htmlFor="groups"
          >
            <span
              className="pf-c-form__label-text"
            >
              Groups
            </span>
            <span
              aria-hidden="true"
              className="pf-c-form__label-required"
            >
               
              *
            </span>
          </label>
           
        </div>
        <div
          className="pf-c-form__group-control"
        >
          <TextInput
            id="groups"
            onChange={[Function]}
            validated="default"
          >
            <MockedComponent />
          </TextInput>
          <div
            aria-live="polite"
            className="pf-c-form__helper-text"
            id="groups-helper"
          >
            Comma-separated list of groups for the user(i.e. "managers,human-resources")
          </div>
        </div>
      </div>
    </FormGroup>
    <FormGroup
      fieldId="login"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-control"
        >
          <Checkbox
            id="login"
            isChecked={true}
            label="Log in with user after adding it"
            onChange={[Function]}
          >
            <MockedComponent />
          </Checkbox>
        </div>
      </div>
    </FormGroup>
    <ActionGroup>
      <div
        className="pf-c-form__group pf-m-action"
      >
        <div
          className="pf-c-form__group-control"
        >
          <div
            className="pf-c-form__actions"
          >
            <Button
              id="add-test-user"
              onClick={[Function]}
              variant="primary"
            >
              <MockedComponent />
            </Button>
            <Button
              id="cancel-add-test-user"
              onClick={[Function]}
              variant="secondary"
            >
              <MockedComponent />
            </Button>
          </div>
        </div>
      </div>
    </ActionGroup>
  </form>
</Form>
`;

exports[`AddTestUser tests Add test with validation error 2`] = `
<Form>
  <form
    className="pf-c-form"
    noValidate={true}
  >
    <FormGroup
      fieldId="userId"
      helperTextInvalid="User Id cannot be empty."
      isRequired={true}
      label="User Id"
      validated="error"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-label"
        >
          <label
            className="pf-c-form__label"
            htmlFor="userId"
          >
            <span
              className="pf-c-form__label-text"
            >
              User Id
            </span>
            <span
              aria-hidden="true"
              className="pf-c-form__label-required"
            >
               
              *
            </span>
          </label>
           
        </div>
        <div
          className="pf-c-form__group-control"
        >
          <TextInput
            id="userId"
            onChange={[Function]}
            validated="error"
          >
            <MockedComponent />
          </TextInput>
          <div
            aria-live="polite"
            className="pf-c-form__helper-text pf-m-error"
            id="userId-helper"
          >
            User Id cannot be empty.
          </div>
        </div>
      </div>
    </FormGroup>
    <FormGroup
      fieldId="groups"
      helperText="Comma-separated list of groups for the user(i.e. \\"managers,human-resources\\")"
      helperTextInvalid="User groups cannot be empty."
      isRequired={true}
      label="Groups"
      validated="error"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-label"
        >
          <label
            className="pf-c-form__label"
            htmlFor="groups"
          >
            <span
              className="pf-c-form__label-text"
            >
              Groups
            </span>
            <span
              aria-hidden="true"
              className="pf-c-form__label-required"
            >
               
              *
            </span>
          </label>
           
        </div>
        <div
          className="pf-c-form__group-control"
        >
          <TextInput
            id="groups"
            onChange={[Function]}
            validated="error"
          >
            <MockedComponent />
          </TextInput>
          <div
            aria-live="polite"
            className="pf-c-form__helper-text pf-m-error"
            id="groups-helper"
          >
            User groups cannot be empty.
          </div>
        </div>
      </div>
    </FormGroup>
    <FormGroup
      fieldId="login"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-control"
        >
          <Checkbox
            id="login"
            isChecked={true}
            label="Log in with user after adding it"
            onChange={[Function]}
          >
            <MockedComponent />
          </Checkbox>
        </div>
      </div>
    </FormGroup>
    <ActionGroup>
      <div
        className="pf-c-form__group pf-m-action"
      >
        <div
          className="pf-c-form__group-control"
        >
          <div
            className="pf-c-form__actions"
          >
            <Button
              id="add-test-user"
              onClick={[Function]}
              variant="primary"
            >
              <MockedComponent />
            </Button>
            <Button
              id="cancel-add-test-user"
              onClick={[Function]}
              variant="secondary"
            >
              <MockedComponent />
            </Button>
          </div>
        </div>
      </div>
    </ActionGroup>
  </form>
</Form>
`;

exports[`AddTestUser tests Cancel test 1`] = `
<Form>
  <form
    className="pf-c-form"
    noValidate={true}
  >
    <FormGroup
      fieldId="userId"
      isRequired={true}
      label="User Id"
      validated="default"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-label"
        >
          <label
            className="pf-c-form__label"
            htmlFor="userId"
          >
            <span
              className="pf-c-form__label-text"
            >
              User Id
            </span>
            <span
              aria-hidden="true"
              className="pf-c-form__label-required"
            >
               
              *
            </span>
          </label>
           
        </div>
        <div
          className="pf-c-form__group-control"
        >
          <TextInput
            id="userId"
            onChange={[Function]}
            validated="default"
          >
            <MockedComponent />
          </TextInput>
        </div>
      </div>
    </FormGroup>
    <FormGroup
      fieldId="groups"
      helperText="Comma-separated list of groups for the user(i.e. \\"managers,human-resources\\")"
      isRequired={true}
      label="Groups"
      validated="default"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-label"
        >
          <label
            className="pf-c-form__label"
            htmlFor="groups"
          >
            <span
              className="pf-c-form__label-text"
            >
              Groups
            </span>
            <span
              aria-hidden="true"
              className="pf-c-form__label-required"
            >
               
              *
            </span>
          </label>
           
        </div>
        <div
          className="pf-c-form__group-control"
        >
          <TextInput
            id="groups"
            onChange={[Function]}
            validated="default"
          >
            <MockedComponent />
          </TextInput>
          <div
            aria-live="polite"
            className="pf-c-form__helper-text"
            id="groups-helper"
          >
            Comma-separated list of groups for the user(i.e. "managers,human-resources")
          </div>
        </div>
      </div>
    </FormGroup>
    <FormGroup
      fieldId="login"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-control"
        >
          <Checkbox
            id="login"
            isChecked={true}
            label="Log in with user after adding it"
            onChange={[Function]}
          >
            <MockedComponent />
          </Checkbox>
        </div>
      </div>
    </FormGroup>
    <ActionGroup>
      <div
        className="pf-c-form__group pf-m-action"
      >
        <div
          className="pf-c-form__group-control"
        >
          <div
            className="pf-c-form__actions"
          >
            <Button
              id="add-test-user"
              onClick={[Function]}
              variant="primary"
            >
              <MockedComponent />
            </Button>
            <Button
              id="cancel-add-test-user"
              onClick={[Function]}
              variant="secondary"
            >
              <MockedComponent />
            </Button>
          </div>
        </div>
      </div>
    </ActionGroup>
  </form>
</Form>
`;

exports[`AddTestUser tests Snapshot test - TestUserSystem disabled 1`] = `null`;

exports[`AddTestUser tests Snapshot test - TestUserSystem enabled - closed modal 1`] = `null`;

exports[`AddTestUser tests Snapshot test - TestUserSystem enabled 1`] = `
<Stack
  hasGutter={true}
>
  <div
    className="pf-l-stack pf-m-gutter"
  >
    <StackItem>
      <div
        className="pf-l-stack__item"
      >
        <Alert
          isInline={true}
          title="Adds a new user to the user system"
          variant="info"
        >
          <MockedComponent />
        </Alert>
      </div>
    </StackItem>
    <StackItem
      isFilled={true}
    >
      <div
        className="pf-l-stack__item pf-m-fill"
      >
        <Form>
          <form
            className="pf-c-form"
            noValidate={true}
          >
            <FormGroup
              fieldId="userId"
              isRequired={true}
              label="User Id"
              validated="default"
            >
              <div
                className="pf-c-form__group"
              >
                <div
                  className="pf-c-form__group-label"
                >
                  <label
                    className="pf-c-form__label"
                    htmlFor="userId"
                  >
                    <span
                      className="pf-c-form__label-text"
                    >
                      User Id
                    </span>
                    <span
                      aria-hidden="true"
                      className="pf-c-form__label-required"
                    >
                       
                      *
                    </span>
                  </label>
                   
                </div>
                <div
                  className="pf-c-form__group-control"
                >
                  <TextInput
                    id="userId"
                    onChange={[Function]}
                    validated="default"
                  >
                    <MockedComponent />
                  </TextInput>
                </div>
              </div>
            </FormGroup>
            <FormGroup
              fieldId="groups"
              helperText="Comma-separated list of groups for the user(i.e. \\"managers,human-resources\\")"
              isRequired={true}
              label="Groups"
              validated="default"
            >
              <div
                className="pf-c-form__group"
              >
                <div
                  className="pf-c-form__group-label"
                >
                  <label
                    className="pf-c-form__label"
                    htmlFor="groups"
                  >
                    <span
                      className="pf-c-form__label-text"
                    >
                      Groups
                    </span>
                    <span
                      aria-hidden="true"
                      className="pf-c-form__label-required"
                    >
                       
                      *
                    </span>
                  </label>
                   
                </div>
                <div
                  className="pf-c-form__group-control"
                >
                  <TextInput
                    id="groups"
                    onChange={[Function]}
                    validated="default"
                  >
                    <MockedComponent />
                  </TextInput>
                  <div
                    aria-live="polite"
                    className="pf-c-form__helper-text"
                    id="groups-helper"
                  >
                    Comma-separated list of groups for the user(i.e. "managers,human-resources")
                  </div>
                </div>
              </div>
            </FormGroup>
            <FormGroup
              fieldId="login"
            >
              <div
                className="pf-c-form__group"
              >
                <div
                  className="pf-c-form__group-control"
                >
                  <Checkbox
                    id="login"
                    isChecked={true}
                    label="Log in with user after adding it"
                    onChange={[Function]}
                  >
                    <MockedComponent />
                  </Checkbox>
                </div>
              </div>
            </FormGroup>
            <ActionGroup>
              <div
                className="pf-c-form__group pf-m-action"
              >
                <div
                  className="pf-c-form__group-control"
                >
                  <div
                    className="pf-c-form__actions"
                  >
                    <Button
                      id="add-test-user"
                      onClick={[Function]}
                      variant="primary"
                    >
                      <MockedComponent />
                    </Button>
                    <Button
                      id="cancel-add-test-user"
                      onClick={[Function]}
                      variant="secondary"
                    >
                      <MockedComponent />
                    </Button>
                  </div>
                </div>
              </div>
            </ActionGroup>
          </form>
        </Form>
      </div>
    </StackItem>
  </div>
</Stack>
`;

exports[`AddTestUser tests Test groups field validations 1`] = `
<Form>
  <form
    className="pf-c-form"
    noValidate={true}
  >
    <FormGroup
      fieldId="userId"
      isRequired={true}
      label="User Id"
      validated="default"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-label"
        >
          <label
            className="pf-c-form__label"
            htmlFor="userId"
          >
            <span
              className="pf-c-form__label-text"
            >
              User Id
            </span>
            <span
              aria-hidden="true"
              className="pf-c-form__label-required"
            >
               
              *
            </span>
          </label>
           
        </div>
        <div
          className="pf-c-form__group-control"
        >
          <TextInput
            id="userId"
            onChange={[Function]}
            validated="default"
          >
            <MockedComponent />
          </TextInput>
        </div>
      </div>
    </FormGroup>
    <FormGroup
      fieldId="groups"
      helperText="Comma-separated list of groups for the user(i.e. \\"managers,human-resources\\")"
      isRequired={true}
      label="Groups"
      validated="default"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-label"
        >
          <label
            className="pf-c-form__label"
            htmlFor="groups"
          >
            <span
              className="pf-c-form__label-text"
            >
              Groups
            </span>
            <span
              aria-hidden="true"
              className="pf-c-form__label-required"
            >
               
              *
            </span>
          </label>
           
        </div>
        <div
          className="pf-c-form__group-control"
        >
          <TextInput
            id="groups"
            onChange={[Function]}
            validated="default"
          >
            <MockedComponent />
          </TextInput>
          <div
            aria-live="polite"
            className="pf-c-form__helper-text"
            id="groups-helper"
          >
            Comma-separated list of groups for the user(i.e. "managers,human-resources")
          </div>
        </div>
      </div>
    </FormGroup>
    <FormGroup
      fieldId="login"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-control"
        >
          <Checkbox
            id="login"
            isChecked={true}
            label="Log in with user after adding it"
            onChange={[Function]}
          >
            <MockedComponent />
          </Checkbox>
        </div>
      </div>
    </FormGroup>
    <ActionGroup>
      <div
        className="pf-c-form__group pf-m-action"
      >
        <div
          className="pf-c-form__group-control"
        >
          <div
            className="pf-c-form__actions"
          >
            <Button
              id="add-test-user"
              onClick={[Function]}
              variant="primary"
            >
              <MockedComponent />
            </Button>
            <Button
              id="cancel-add-test-user"
              onClick={[Function]}
              variant="secondary"
            >
              <MockedComponent />
            </Button>
          </div>
        </div>
      </div>
    </ActionGroup>
  </form>
</Form>
`;

exports[`AddTestUser tests Test groups field validations 2`] = `
<Form>
  <form
    className="pf-c-form"
    noValidate={true}
  >
    <FormGroup
      fieldId="userId"
      isRequired={true}
      label="User Id"
      validated="default"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-label"
        >
          <label
            className="pf-c-form__label"
            htmlFor="userId"
          >
            <span
              className="pf-c-form__label-text"
            >
              User Id
            </span>
            <span
              aria-hidden="true"
              className="pf-c-form__label-required"
            >
               
              *
            </span>
          </label>
           
        </div>
        <div
          className="pf-c-form__group-control"
        >
          <TextInput
            id="userId"
            onChange={[Function]}
            validated="default"
          >
            <MockedComponent />
          </TextInput>
        </div>
      </div>
    </FormGroup>
    <FormGroup
      fieldId="groups"
      helperText="Comma-separated list of groups for the user(i.e. \\"managers,human-resources\\")"
      helperTextInvalid="User groups cannot be empty."
      isRequired={true}
      label="Groups"
      validated="error"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-label"
        >
          <label
            className="pf-c-form__label"
            htmlFor="groups"
          >
            <span
              className="pf-c-form__label-text"
            >
              Groups
            </span>
            <span
              aria-hidden="true"
              className="pf-c-form__label-required"
            >
               
              *
            </span>
          </label>
           
        </div>
        <div
          className="pf-c-form__group-control"
        >
          <TextInput
            id="groups"
            onChange={[Function]}
            validated="error"
            value=""
          >
            <MockedComponent />
          </TextInput>
          <div
            aria-live="polite"
            className="pf-c-form__helper-text pf-m-error"
            id="groups-helper"
          >
            User groups cannot be empty.
          </div>
        </div>
      </div>
    </FormGroup>
    <FormGroup
      fieldId="login"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-control"
        >
          <Checkbox
            id="login"
            isChecked={true}
            label="Log in with user after adding it"
            onChange={[Function]}
          >
            <MockedComponent />
          </Checkbox>
        </div>
      </div>
    </FormGroup>
    <ActionGroup>
      <div
        className="pf-c-form__group pf-m-action"
      >
        <div
          className="pf-c-form__group-control"
        >
          <div
            className="pf-c-form__actions"
          >
            <Button
              id="add-test-user"
              onClick={[Function]}
              variant="primary"
            >
              <MockedComponent />
            </Button>
            <Button
              id="cancel-add-test-user"
              onClick={[Function]}
              variant="secondary"
            >
              <MockedComponent />
            </Button>
          </div>
        </div>
      </div>
    </ActionGroup>
  </form>
</Form>
`;

exports[`AddTestUser tests Test groups field validations 3`] = `
<Form>
  <form
    className="pf-c-form"
    noValidate={true}
  >
    <FormGroup
      fieldId="userId"
      isRequired={true}
      label="User Id"
      validated="default"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-label"
        >
          <label
            className="pf-c-form__label"
            htmlFor="userId"
          >
            <span
              className="pf-c-form__label-text"
            >
              User Id
            </span>
            <span
              aria-hidden="true"
              className="pf-c-form__label-required"
            >
               
              *
            </span>
          </label>
           
        </div>
        <div
          className="pf-c-form__group-control"
        >
          <TextInput
            id="userId"
            onChange={[Function]}
            validated="default"
          >
            <MockedComponent />
          </TextInput>
        </div>
      </div>
    </FormGroup>
    <FormGroup
      fieldId="groups"
      helperText="Comma-separated list of groups for the user(i.e. \\"managers,human-resources\\")"
      helperTextInvalid="User groups cannot be empty."
      isRequired={true}
      label="Groups"
      validated="error"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-label"
        >
          <label
            className="pf-c-form__label"
            htmlFor="groups"
          >
            <span
              className="pf-c-form__label-text"
            >
              Groups
            </span>
            <span
              aria-hidden="true"
              className="pf-c-form__label-required"
            >
               
              *
            </span>
          </label>
           
        </div>
        <div
          className="pf-c-form__group-control"
        >
          <TextInput
            id="groups"
            onChange={[Function]}
            validated="error"
            value="  ,"
          >
            <MockedComponent />
          </TextInput>
          <div
            aria-live="polite"
            className="pf-c-form__helper-text pf-m-error"
            id="groups-helper"
          >
            User groups cannot be empty.
          </div>
        </div>
      </div>
    </FormGroup>
    <FormGroup
      fieldId="login"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-control"
        >
          <Checkbox
            id="login"
            isChecked={true}
            label="Log in with user after adding it"
            onChange={[Function]}
          >
            <MockedComponent />
          </Checkbox>
        </div>
      </div>
    </FormGroup>
    <ActionGroup>
      <div
        className="pf-c-form__group pf-m-action"
      >
        <div
          className="pf-c-form__group-control"
        >
          <div
            className="pf-c-form__actions"
          >
            <Button
              id="add-test-user"
              onClick={[Function]}
              variant="primary"
            >
              <MockedComponent />
            </Button>
            <Button
              id="cancel-add-test-user"
              onClick={[Function]}
              variant="secondary"
            >
              <MockedComponent />
            </Button>
          </div>
        </div>
      </div>
    </ActionGroup>
  </form>
</Form>
`;

exports[`AddTestUser tests Test groups field validations 4`] = `
<Form>
  <form
    className="pf-c-form"
    noValidate={true}
  >
    <FormGroup
      fieldId="userId"
      isRequired={true}
      label="User Id"
      validated="default"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-label"
        >
          <label
            className="pf-c-form__label"
            htmlFor="userId"
          >
            <span
              className="pf-c-form__label-text"
            >
              User Id
            </span>
            <span
              aria-hidden="true"
              className="pf-c-form__label-required"
            >
               
              *
            </span>
          </label>
           
        </div>
        <div
          className="pf-c-form__group-control"
        >
          <TextInput
            id="userId"
            onChange={[Function]}
            validated="default"
          >
            <MockedComponent />
          </TextInput>
        </div>
      </div>
    </FormGroup>
    <FormGroup
      fieldId="groups"
      helperText="Comma-separated list of groups for the user(i.e. \\"managers,human-resources\\")"
      helperTextInvalid={null}
      isRequired={true}
      label="Groups"
      validated="success"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-label"
        >
          <label
            className="pf-c-form__label"
            htmlFor="groups"
          >
            <span
              className="pf-c-form__label-text"
            >
              Groups
            </span>
            <span
              aria-hidden="true"
              className="pf-c-form__label-required"
            >
               
              *
            </span>
          </label>
           
        </div>
        <div
          className="pf-c-form__group-control"
        >
          <TextInput
            id="groups"
            onChange={[Function]}
            validated="success"
            value="admin,manager"
          >
            <MockedComponent />
          </TextInput>
          <div
            aria-live="polite"
            className="pf-c-form__helper-text pf-m-success"
            id="groups-helper"
          >
            Comma-separated list of groups for the user(i.e. "managers,human-resources")
          </div>
        </div>
      </div>
    </FormGroup>
    <FormGroup
      fieldId="login"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-control"
        >
          <Checkbox
            id="login"
            isChecked={true}
            label="Log in with user after adding it"
            onChange={[Function]}
          >
            <MockedComponent />
          </Checkbox>
        </div>
      </div>
    </FormGroup>
    <ActionGroup>
      <div
        className="pf-c-form__group pf-m-action"
      >
        <div
          className="pf-c-form__group-control"
        >
          <div
            className="pf-c-form__actions"
          >
            <Button
              id="add-test-user"
              onClick={[Function]}
              variant="primary"
            >
              <MockedComponent />
            </Button>
            <Button
              id="cancel-add-test-user"
              onClick={[Function]}
              variant="secondary"
            >
              <MockedComponent />
            </Button>
          </div>
        </div>
      </div>
    </ActionGroup>
  </form>
</Form>
`;

exports[`AddTestUser tests Test userId field validations 1`] = `
<Form>
  <form
    className="pf-c-form"
    noValidate={true}
  >
    <FormGroup
      fieldId="userId"
      isRequired={true}
      label="User Id"
      validated="default"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-label"
        >
          <label
            className="pf-c-form__label"
            htmlFor="userId"
          >
            <span
              className="pf-c-form__label-text"
            >
              User Id
            </span>
            <span
              aria-hidden="true"
              className="pf-c-form__label-required"
            >
               
              *
            </span>
          </label>
           
        </div>
        <div
          className="pf-c-form__group-control"
        >
          <TextInput
            id="userId"
            onChange={[Function]}
            validated="default"
          >
            <MockedComponent />
          </TextInput>
        </div>
      </div>
    </FormGroup>
    <FormGroup
      fieldId="groups"
      helperText="Comma-separated list of groups for the user(i.e. \\"managers,human-resources\\")"
      isRequired={true}
      label="Groups"
      validated="default"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-label"
        >
          <label
            className="pf-c-form__label"
            htmlFor="groups"
          >
            <span
              className="pf-c-form__label-text"
            >
              Groups
            </span>
            <span
              aria-hidden="true"
              className="pf-c-form__label-required"
            >
               
              *
            </span>
          </label>
           
        </div>
        <div
          className="pf-c-form__group-control"
        >
          <TextInput
            id="groups"
            onChange={[Function]}
            validated="default"
          >
            <MockedComponent />
          </TextInput>
          <div
            aria-live="polite"
            className="pf-c-form__helper-text"
            id="groups-helper"
          >
            Comma-separated list of groups for the user(i.e. "managers,human-resources")
          </div>
        </div>
      </div>
    </FormGroup>
    <FormGroup
      fieldId="login"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-control"
        >
          <Checkbox
            id="login"
            isChecked={true}
            label="Log in with user after adding it"
            onChange={[Function]}
          >
            <MockedComponent />
          </Checkbox>
        </div>
      </div>
    </FormGroup>
    <ActionGroup>
      <div
        className="pf-c-form__group pf-m-action"
      >
        <div
          className="pf-c-form__group-control"
        >
          <div
            className="pf-c-form__actions"
          >
            <Button
              id="add-test-user"
              onClick={[Function]}
              variant="primary"
            >
              <MockedComponent />
            </Button>
            <Button
              id="cancel-add-test-user"
              onClick={[Function]}
              variant="secondary"
            >
              <MockedComponent />
            </Button>
          </div>
        </div>
      </div>
    </ActionGroup>
  </form>
</Form>
`;

exports[`AddTestUser tests Test userId field validations 2`] = `
<Form>
  <form
    className="pf-c-form"
    noValidate={true}
  >
    <FormGroup
      fieldId="userId"
      helperTextInvalid="User Id cannot be empty."
      isRequired={true}
      label="User Id"
      validated="error"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-label"
        >
          <label
            className="pf-c-form__label"
            htmlFor="userId"
          >
            <span
              className="pf-c-form__label-text"
            >
              User Id
            </span>
            <span
              aria-hidden="true"
              className="pf-c-form__label-required"
            >
               
              *
            </span>
          </label>
           
        </div>
        <div
          className="pf-c-form__group-control"
        >
          <TextInput
            id="userId"
            onChange={[Function]}
            validated="error"
            value="      "
          >
            <MockedComponent />
          </TextInput>
          <div
            aria-live="polite"
            className="pf-c-form__helper-text pf-m-error"
            id="userId-helper"
          >
            User Id cannot be empty.
          </div>
        </div>
      </div>
    </FormGroup>
    <FormGroup
      fieldId="groups"
      helperText="Comma-separated list of groups for the user(i.e. \\"managers,human-resources\\")"
      isRequired={true}
      label="Groups"
      validated="default"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-label"
        >
          <label
            className="pf-c-form__label"
            htmlFor="groups"
          >
            <span
              className="pf-c-form__label-text"
            >
              Groups
            </span>
            <span
              aria-hidden="true"
              className="pf-c-form__label-required"
            >
               
              *
            </span>
          </label>
           
        </div>
        <div
          className="pf-c-form__group-control"
        >
          <TextInput
            id="groups"
            onChange={[Function]}
            validated="default"
          >
            <MockedComponent />
          </TextInput>
          <div
            aria-live="polite"
            className="pf-c-form__helper-text"
            id="groups-helper"
          >
            Comma-separated list of groups for the user(i.e. "managers,human-resources")
          </div>
        </div>
      </div>
    </FormGroup>
    <FormGroup
      fieldId="login"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-control"
        >
          <Checkbox
            id="login"
            isChecked={true}
            label="Log in with user after adding it"
            onChange={[Function]}
          >
            <MockedComponent />
          </Checkbox>
        </div>
      </div>
    </FormGroup>
    <ActionGroup>
      <div
        className="pf-c-form__group pf-m-action"
      >
        <div
          className="pf-c-form__group-control"
        >
          <div
            className="pf-c-form__actions"
          >
            <Button
              id="add-test-user"
              onClick={[Function]}
              variant="primary"
            >
              <MockedComponent />
            </Button>
            <Button
              id="cancel-add-test-user"
              onClick={[Function]}
              variant="secondary"
            >
              <MockedComponent />
            </Button>
          </div>
        </div>
      </div>
    </ActionGroup>
  </form>
</Form>
`;

exports[`AddTestUser tests Test userId field validations 3`] = `
<Form>
  <form
    className="pf-c-form"
    noValidate={true}
  >
    <FormGroup
      fieldId="userId"
      helperTextInvalid="Already exists a system user identified by 'mary'. Please choose another user id."
      isRequired={true}
      label="User Id"
      validated="error"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-label"
        >
          <label
            className="pf-c-form__label"
            htmlFor="userId"
          >
            <span
              className="pf-c-form__label-text"
            >
              User Id
            </span>
            <span
              aria-hidden="true"
              className="pf-c-form__label-required"
            >
               
              *
            </span>
          </label>
           
        </div>
        <div
          className="pf-c-form__group-control"
        >
          <TextInput
            id="userId"
            onChange={[Function]}
            validated="error"
            value="mary"
          >
            <MockedComponent />
          </TextInput>
          <div
            aria-live="polite"
            className="pf-c-form__helper-text pf-m-error"
            id="userId-helper"
          >
            Already exists a system user identified by 'mary'. Please choose another user id.
          </div>
        </div>
      </div>
    </FormGroup>
    <FormGroup
      fieldId="groups"
      helperText="Comma-separated list of groups for the user(i.e. \\"managers,human-resources\\")"
      isRequired={true}
      label="Groups"
      validated="default"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-label"
        >
          <label
            className="pf-c-form__label"
            htmlFor="groups"
          >
            <span
              className="pf-c-form__label-text"
            >
              Groups
            </span>
            <span
              aria-hidden="true"
              className="pf-c-form__label-required"
            >
               
              *
            </span>
          </label>
           
        </div>
        <div
          className="pf-c-form__group-control"
        >
          <TextInput
            id="groups"
            onChange={[Function]}
            validated="default"
          >
            <MockedComponent />
          </TextInput>
          <div
            aria-live="polite"
            className="pf-c-form__helper-text"
            id="groups-helper"
          >
            Comma-separated list of groups for the user(i.e. "managers,human-resources")
          </div>
        </div>
      </div>
    </FormGroup>
    <FormGroup
      fieldId="login"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-control"
        >
          <Checkbox
            id="login"
            isChecked={true}
            label="Log in with user after adding it"
            onChange={[Function]}
          >
            <MockedComponent />
          </Checkbox>
        </div>
      </div>
    </FormGroup>
    <ActionGroup>
      <div
        className="pf-c-form__group pf-m-action"
      >
        <div
          className="pf-c-form__group-control"
        >
          <div
            className="pf-c-form__actions"
          >
            <Button
              id="add-test-user"
              onClick={[Function]}
              variant="primary"
            >
              <MockedComponent />
            </Button>
            <Button
              id="cancel-add-test-user"
              onClick={[Function]}
              variant="secondary"
            >
              <MockedComponent />
            </Button>
          </div>
        </div>
      </div>
    </ActionGroup>
  </form>
</Form>
`;

exports[`AddTestUser tests Test userId field validations 4`] = `
<Form>
  <form
    className="pf-c-form"
    noValidate={true}
  >
    <FormGroup
      fieldId="userId"
      helperTextInvalid={null}
      isRequired={true}
      label="User Id"
      validated="success"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-label"
        >
          <label
            className="pf-c-form__label"
            htmlFor="userId"
          >
            <span
              className="pf-c-form__label-text"
            >
              User Id
            </span>
            <span
              aria-hidden="true"
              className="pf-c-form__label-required"
            >
               
              *
            </span>
          </label>
           
        </div>
        <div
          className="pf-c-form__group-control"
        >
          <TextInput
            id="userId"
            onChange={[Function]}
            validated="success"
            value="jsnow"
          >
            <MockedComponent />
          </TextInput>
        </div>
      </div>
    </FormGroup>
    <FormGroup
      fieldId="groups"
      helperText="Comma-separated list of groups for the user(i.e. \\"managers,human-resources\\")"
      isRequired={true}
      label="Groups"
      validated="default"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-label"
        >
          <label
            className="pf-c-form__label"
            htmlFor="groups"
          >
            <span
              className="pf-c-form__label-text"
            >
              Groups
            </span>
            <span
              aria-hidden="true"
              className="pf-c-form__label-required"
            >
               
              *
            </span>
          </label>
           
        </div>
        <div
          className="pf-c-form__group-control"
        >
          <TextInput
            id="groups"
            onChange={[Function]}
            validated="default"
          >
            <MockedComponent />
          </TextInput>
          <div
            aria-live="polite"
            className="pf-c-form__helper-text"
            id="groups-helper"
          >
            Comma-separated list of groups for the user(i.e. "managers,human-resources")
          </div>
        </div>
      </div>
    </FormGroup>
    <FormGroup
      fieldId="login"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-control"
        >
          <Checkbox
            id="login"
            isChecked={true}
            label="Log in with user after adding it"
            onChange={[Function]}
          >
            <MockedComponent />
          </Checkbox>
        </div>
      </div>
    </FormGroup>
    <ActionGroup>
      <div
        className="pf-c-form__group pf-m-action"
      >
        <div
          className="pf-c-form__group-control"
        >
          <div
            className="pf-c-form__actions"
          >
            <Button
              id="add-test-user"
              onClick={[Function]}
              variant="primary"
            >
              <MockedComponent />
            </Button>
            <Button
              id="cancel-add-test-user"
              onClick={[Function]}
              variant="secondary"
            >
              <MockedComponent />
            </Button>
          </div>
        </div>
      </div>
    </ActionGroup>
  </form>
</Form>
`;

exports[`AddTestUser tests Test userId field validations 5`] = `
<Form>
  <form
    className="pf-c-form"
    noValidate={true}
  >
    <FormGroup
      fieldId="userId"
      helperTextInvalid="Already exists a user identified by 'test'. Press 'Add' to replace it."
      isRequired={true}
      label="User Id"
      validated="warning"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-label"
        >
          <label
            className="pf-c-form__label"
            htmlFor="userId"
          >
            <span
              className="pf-c-form__label-text"
            >
              User Id
            </span>
            <span
              aria-hidden="true"
              className="pf-c-form__label-required"
            >
               
              *
            </span>
          </label>
           
        </div>
        <div
          className="pf-c-form__group-control"
        >
          <TextInput
            id="userId"
            onChange={[Function]}
            validated="warning"
            value="test"
          >
            <MockedComponent />
          </TextInput>
        </div>
      </div>
    </FormGroup>
    <FormGroup
      fieldId="groups"
      helperText="Comma-separated list of groups for the user(i.e. \\"managers,human-resources\\")"
      isRequired={true}
      label="Groups"
      validated="default"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-label"
        >
          <label
            className="pf-c-form__label"
            htmlFor="groups"
          >
            <span
              className="pf-c-form__label-text"
            >
              Groups
            </span>
            <span
              aria-hidden="true"
              className="pf-c-form__label-required"
            >
               
              *
            </span>
          </label>
           
        </div>
        <div
          className="pf-c-form__group-control"
        >
          <TextInput
            id="groups"
            onChange={[Function]}
            validated="default"
          >
            <MockedComponent />
          </TextInput>
          <div
            aria-live="polite"
            className="pf-c-form__helper-text"
            id="groups-helper"
          >
            Comma-separated list of groups for the user(i.e. "managers,human-resources")
          </div>
        </div>
      </div>
    </FormGroup>
    <FormGroup
      fieldId="login"
    >
      <div
        className="pf-c-form__group"
      >
        <div
          className="pf-c-form__group-control"
        >
          <Checkbox
            id="login"
            isChecked={true}
            label="Log in with user after adding it"
            onChange={[Function]}
          >
            <MockedComponent />
          </Checkbox>
        </div>
      </div>
    </FormGroup>
    <ActionGroup>
      <div
        className="pf-c-form__group pf-m-action"
      >
        <div
          className="pf-c-form__group-control"
        >
          <div
            className="pf-c-form__actions"
          >
            <Button
              id="add-test-user"
              onClick={[Function]}
              variant="primary"
            >
              <MockedComponent />
            </Button>
            <Button
              id="cancel-add-test-user"
              onClick={[Function]}
              variant="secondary"
            >
              <MockedComponent />
            </Button>
          </div>
        </div>
      </div>
    </ActionGroup>
  </form>
</Form>
`;
