// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LoadMore component tests with isLoading false simulate loading state in button 1`] = `
<DropdownToggleAction
  className=""
  isDisabled={false}
  key="toggle-id-load-more-ouia-id"
  onClick={[Function]}
>
  <button
    className="pf-c-dropdown__toggle-button"
    onClick={[Function]}
  >
    Loading...
    <Spinner
      className="kogito-common__load-more-spinner"
      size="md"
    >
      <span
        aria-valuetext="Loading..."
        className="pf-c-spinner pf-m-md kogito-common__load-more-spinner"
        role="progressbar"
      >
        <span
          className="pf-c-spinner__clipper"
        />
        <span
          className="pf-c-spinner__lead-ball"
        />
        <span
          className="pf-c-spinner__tail-ball"
        />
      </span>
    </Spinner>
     
  </button>
</DropdownToggleAction>
`;

exports[`LoadMore component tests with isLoading false snapshot testing 1`] = `
<DataList
  aria-label="Simple data list example"
  className=""
  data-ouia-component-id="load-more-ouia-id"
  data-ouia-component-type="load-more"
  data-ouia-safe={true}
  gridBreakpoint="md"
  isCompact={false}
  selectedDataListItemId=""
  wrapModifier={null}
>
  <DataListItem
    aria-labelledby="kie-datalist-item"
    className=""
    id=""
    isExpanded={false}
  >
    <DataListCell
      className="kogito-common__load-more"
    >
      <div
        className="pf-u-float-right pf-u-mr-md"
      >
        <Dropdown
          direction="up"
          dropdownItems={
            Array [
              <DropdownItem
                component="button"
                id="10"
              >
                <Split
                  hasGutter={true}
                >
                  <SplitItem>
                    Load 
                    10
                     more
                  </SplitItem>
                  <SplitItem>
                    <CheckIcon
                      color="var(--pf-global--info-color--100)"
                      noVerticalAlign={false}
                      size="sm"
                    />
                  </SplitItem>
                </Split>
              </DropdownItem>,
              <DropdownItem
                component="button"
                id="20"
              >
                <Split
                  hasGutter={true}
                >
                  <SplitItem>
                    Load 
                    20
                     more
                  </SplitItem>
                </Split>
              </DropdownItem>,
              <DropdownItem
                component="button"
                id="50"
              >
                <Split
                  hasGutter={true}
                >
                  <SplitItem>
                    Load 
                    50
                     more
                  </SplitItem>
                </Split>
              </DropdownItem>,
              <DropdownItem
                component="button"
                id="100"
              >
                <Split
                  hasGutter={true}
                >
                  <SplitItem>
                    Load 
                    100
                     more
                  </SplitItem>
                </Split>
              </DropdownItem>,
            ]
          }
          isOpen={false}
          onSelect={[Function]}
          toggle={
            <DropdownToggle
              id="toggle-id"
              onToggle={[Function]}
              splitButtonItems={
                Array [
                  <DropdownToggleAction
                    className=""
                    isDisabled={false}
                    onClick={[Function]}
                  >
                    Load 10 more
                  </DropdownToggleAction>,
                ]
              }
            />
          }
        />
      </div>
    </DataListCell>
  </DataListItem>
</DataList>
`;
