// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WorkflowForm Test Workflow Form - loading 1`] = `
<WorkflowForm
  driver={
    Object {
      "getCustomWorkflowSchema": [MockFunction],
      "resetBusinessKey": [MockFunction],
      "startWorkflow": [MockFunction] {
        "calls": Array [
          Array [
            "http://localhost:4000/hiring",
            Object {},
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": Promise {},
          },
        ],
      },
    }
  }
  workflowDefinition={
    Object {
      "endpoint": "http://localhost:4000/hiring",
      "workflowName": "workflow1",
    }
  }
>
  <Bullseye>
    <div
      className="pf-l-bullseye"
    >
      <KogitoSpinner
        ouiaId="workflow-form-loading"
        spinnerText="Starting workflow..."
      >
        <EmptyState
          data-ouia-component-id="workflow-form-loading"
          data-ouia-component-type="kogito-spinner"
          data-ouia-safe={true}
        >
          <div
            className="pf-c-empty-state"
            data-ouia-component-id="workflow-form-loading"
            data-ouia-component-type="kogito-spinner"
            data-ouia-safe={true}
          >
            <div
              className="pf-c-empty-state__content"
            >
              <EmptyStateIcon
                component={[Function]}
                variant="container"
              >
                <div
                  className="pf-c-empty-state__icon"
                >
                  <Spinner>
                    <span
                      aria-label="Contents"
                      aria-valuetext="Loading..."
                      className="pf-c-spinner pf-m-xl"
                      role="progressbar"
                    >
                      <span
                        className="pf-c-spinner__clipper"
                      />
                      <span
                        className="pf-c-spinner__lead-ball"
                      />
                      <span
                        className="pf-c-spinner__tail-ball"
                      />
                    </span>
                  </Spinner>
                </div>
              </EmptyStateIcon>
              <Title
                headingLevel="h3"
                size="lg"
              >
                <h3
                  className="pf-c-title pf-m-lg"
                  data-ouia-component-id="OUIA-Generated-Title-2"
                  data-ouia-component-type="PF4/Title"
                  data-ouia-safe={true}
                >
                  Starting workflow...
                </h3>
              </Title>
            </div>
          </div>
        </EmptyState>
      </KogitoSpinner>
    </div>
  </Bullseye>
</WorkflowForm>
`;

exports[`WorkflowForm Test Workflow Form - loading 2`] = `
<WorkflowForm
  driver={
    Object {
      "getCustomWorkflowSchema": [MockFunction],
      "resetBusinessKey": [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
      "startWorkflow": [MockFunction] {
        "calls": Array [
          Array [
            "http://localhost:4000/hiring",
            Object {},
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": Promise {},
          },
        ],
      },
    }
  }
  workflowDefinition={
    Object {
      "endpoint": "http://localhost:4000/hiring",
      "workflowName": "workflow1",
    }
  }
>
  <div
    data-ouia-component-type="workflow-form"
    data-ouia-safe={true}
  >
    <Stack
      hasGutter={true}
    >
      <div
        className="pf-l-stack pf-m-gutter"
      >
        <StackItem>
          <div
            className="pf-l-stack__item"
          >
            <Alert
              isInline={true}
              title="Couldn't find JSON schema to display the Start Form."
              variant="info"
            >
              <MockedComponent />
            </Alert>
          </div>
        </StackItem>
        <StackItem>
          <div
            className="pf-l-stack__item"
          >
            <Form
              isHorizontal={true}
            >
              <FormBase
                innerRef={null}
                isHorizontal={true}
              >
                <form
                  className="pf-c-form pf-m-horizontal"
                  noValidate={true}
                >
                  <FormGroup
                    fieldId="workflowData"
                    helperTextInvalid={false}
                    helperTextInvalidIcon={
                      <ExclamationCircleIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                      />
                    }
                    isRequired={true}
                    label="Start Workflow Data"
                    labelIcon={
                      <Popover
                        bodyContent={
                          <div>
                            Fill the data to start the Workflow in JSON format.
                          </div>
                        }
                        id="workflow-form-data-help"
                      >
                        <button
                          aria-label="More info for data field"
                          className="pf-c-form__group-label-help"
                          onClick={[Function]}
                          type="button"
                        >
                          <HelpIcon
                            color="currentColor"
                            noVerticalAlign={true}
                            size="sm"
                          />
                        </button>
                      </Popover>
                    }
                    validated="default"
                  >
                    <GenerateId
                      prefix="pf-random-id-"
                    >
                      <div
                        className="pf-c-form__group"
                      >
                        <div
                          className="pf-c-form__group-label"
                        >
                          <label
                            className="pf-c-form__label"
                            htmlFor="workflowData"
                          >
                            <span
                              className="pf-c-form__label-text"
                            >
                              Start Workflow Data
                            </span>
                            <span
                              aria-hidden="true"
                              className="pf-c-form__label-required"
                            >
                               
                              *
                            </span>
                          </label>
                           
                          <Popover
                            bodyContent={
                              <div>
                                Fill the data to start the Workflow in JSON format.
                              </div>
                            }
                            id="workflow-form-data-help"
                          >
                            <MockedComponent />
                          </Popover>
                        </div>
                        <div
                          className="pf-c-form__group-control"
                        >
                          <CodeEditor
                            className=""
                            code=""
                            copyButtonAriaLabel="Copy code to clipboard"
                            copyButtonSuccessTooltipText="Content added to clipboard"
                            copyButtonToolTipText="Copy to clipboard"
                            customControls={null}
                            downloadButtonAriaLabel="Download code"
                            downloadButtonToolTipText="Download"
                            downloadFileName="1688401716990"
                            emptyState=""
                            emptyStateBody="Drag and drop a file or upload one."
                            emptyStateButton="Browse"
                            emptyStateLink="Start from scratch"
                            emptyStateTitle="Start editing"
                            headerMainContent=""
                            height="400px"
                            isCopyEnabled={false}
                            isDarkTheme={false}
                            isDownloadEnabled={false}
                            isLanguageLabelVisible={false}
                            isLineNumbersVisible={true}
                            isMinimapVisible={true}
                            isReadOnly={false}
                            isUploadEnabled={false}
                            language="json"
                            loading=""
                            onChange={[Function]}
                            onCodeChange={[Function]}
                            onEditorDidMount={[Function]}
                            options={Object {}}
                            overrideServices={Object {}}
                            shortcutsPopoverButtonText="View Shortcuts"
                            shortcutsPopoverProps={
                              Object {
                                "aria-label": "Keyboard Shortcuts",
                                "bodyContent": "",
                              }
                            }
                            showEditor={true}
                            toolTipCopyExitDelay={1600}
                            toolTipDelay={300}
                            toolTipMaxWidth="100px"
                            toolTipPosition="top"
                            uploadButtonAriaLabel="Upload code"
                            uploadButtonToolTipText="Upload"
                            width=""
                          >
                            <t
                              disabled={false}
                              getDataTransferItems={[Function]}
                              maxSize={Infinity}
                              minSize={0}
                              multiple={false}
                              onDropAccepted={[Function]}
                              onDropRejected={[Function]}
                              preventDropOnDocument={true}
                            >
                              <div
                                className="pf-c-code-editor"
                              >
                                <div
                                  className="pf-c-code-editor__header"
                                >
                                  <div
                                    className="pf-c-code-editor__controls"
                                  />
                                  <div
                                    className="pf-c-code-editor__header-main"
                                  />
                                </div>
                                <div
                                  className="pf-c-code-editor__main"
                                >
                                  <div
                                    className="pf-c-code-editor__code"
                                    tabIndex={0}
                                  >
                                    <MonacoEditor
                                      className={null}
                                      defaultValue=""
                                      editorDidMount={[Function]}
                                      editorWillMount={[Function]}
                                      editorWillUnmount={[Function]}
                                      height="400px"
                                      language="json"
                                      onChange={[Function]}
                                      options={
                                        Object {
                                          "cursorStyle": "line",
                                          "lineNumbers": "on",
                                          "minimap": Object {
                                            "enabled": true,
                                          },
                                          "readOnly": false,
                                          "scrollBeyondLastLine": true,
                                          "tabIndex": -1,
                                        }
                                      }
                                      overrideServices={Object {}}
                                      theme="vs-light"
                                      value=""
                                      width=""
                                    >
                                      <div
                                        className="react-monaco-editor-container"
                                        style={
                                          Object {
                                            "height": "400px",
                                            "width": "",
                                          }
                                        }
                                      />
                                    </MonacoEditor>
                                  </div>
                                </div>
                              </div>
                            </t>
                          </CodeEditor>
                        </div>
                      </div>
                    </GenerateId>
                  </FormGroup>
                  <ActionGroup>
                    <div
                      className="pf-c-form__group pf-m-action"
                    >
                      <div
                        className="pf-c-form__group-control"
                      >
                        <div
                          className="pf-c-form__actions"
                        >
                          <Button
                            onClick={[Function]}
                            variant="primary"
                          >
                            <ButtonBase
                              innerRef={null}
                              onClick={[Function]}
                              variant="primary"
                            >
                              <button
                                aria-disabled={false}
                                aria-label={null}
                                className="pf-c-button pf-m-primary"
                                data-ouia-component-id="OUIA-Generated-Button-primary-5"
                                data-ouia-component-type="PF4/Button"
                                data-ouia-safe={true}
                                disabled={false}
                                onClick={[Function]}
                                role={null}
                                type="button"
                              >
                                Start
                              </button>
                            </ButtonBase>
                          </Button>
                          <Button
                            onClick={[Function]}
                            variant="secondary"
                          >
                            <ButtonBase
                              innerRef={null}
                              onClick={[Function]}
                              variant="secondary"
                            >
                              <button
                                aria-disabled={false}
                                aria-label={null}
                                className="pf-c-button pf-m-secondary"
                                data-ouia-component-id="OUIA-Generated-Button-secondary-5"
                                data-ouia-component-type="PF4/Button"
                                data-ouia-safe={true}
                                disabled={false}
                                onClick={[Function]}
                                role={null}
                                type="button"
                              >
                                Reset
                              </button>
                            </ButtonBase>
                          </Button>
                        </div>
                      </div>
                    </div>
                  </ActionGroup>
                </form>
              </FormBase>
            </Form>
          </div>
        </StackItem>
      </div>
    </Stack>
  </div>
</WorkflowForm>
`;

exports[`WorkflowForm Test Workflow Form - rendering 1`] = `
<WorkflowForm
  driver={
    Object {
      "getCustomWorkflowSchema": [MockFunction],
      "resetBusinessKey": [MockFunction],
      "startWorkflow": [MockFunction],
    }
  }
  workflowDefinition={
    Object {
      "endpoint": "http://localhost:4000/hiring",
      "workflowName": "workflow1",
    }
  }
>
  <div
    data-ouia-component-type="workflow-form"
    data-ouia-safe={true}
  >
    <Stack
      hasGutter={true}
    >
      <div
        className="pf-l-stack pf-m-gutter"
      >
        <StackItem>
          <div
            className="pf-l-stack__item"
          >
            <Alert
              isInline={true}
              title="Couldn't find JSON schema to display the Start Form."
              variant="info"
            >
              <MockedComponent />
            </Alert>
          </div>
        </StackItem>
        <StackItem>
          <div
            className="pf-l-stack__item"
          >
            <Form
              isHorizontal={true}
            >
              <FormBase
                innerRef={null}
                isHorizontal={true}
              >
                <form
                  className="pf-c-form pf-m-horizontal"
                  noValidate={true}
                >
                  <FormGroup
                    fieldId="workflowData"
                    helperTextInvalid={false}
                    helperTextInvalidIcon={
                      <ExclamationCircleIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                      />
                    }
                    isRequired={true}
                    label="Start Workflow Data"
                    labelIcon={
                      <Popover
                        bodyContent={
                          <div>
                            Fill the data to start the Workflow in JSON format.
                          </div>
                        }
                        id="workflow-form-data-help"
                      >
                        <button
                          aria-label="More info for data field"
                          className="pf-c-form__group-label-help"
                          onClick={[Function]}
                          type="button"
                        >
                          <HelpIcon
                            color="currentColor"
                            noVerticalAlign={true}
                            size="sm"
                          />
                        </button>
                      </Popover>
                    }
                    validated="default"
                  >
                    <GenerateId
                      prefix="pf-random-id-"
                    >
                      <div
                        className="pf-c-form__group"
                      >
                        <div
                          className="pf-c-form__group-label"
                        >
                          <label
                            className="pf-c-form__label"
                            htmlFor="workflowData"
                          >
                            <span
                              className="pf-c-form__label-text"
                            >
                              Start Workflow Data
                            </span>
                            <span
                              aria-hidden="true"
                              className="pf-c-form__label-required"
                            >
                               
                              *
                            </span>
                          </label>
                           
                          <Popover
                            bodyContent={
                              <div>
                                Fill the data to start the Workflow in JSON format.
                              </div>
                            }
                            id="workflow-form-data-help"
                          >
                            <MockedComponent />
                          </Popover>
                        </div>
                        <div
                          className="pf-c-form__group-control"
                        >
                          <CodeEditor
                            className=""
                            code=""
                            copyButtonAriaLabel="Copy code to clipboard"
                            copyButtonSuccessTooltipText="Content added to clipboard"
                            copyButtonToolTipText="Copy to clipboard"
                            customControls={null}
                            downloadButtonAriaLabel="Download code"
                            downloadButtonToolTipText="Download"
                            downloadFileName="1688401716990"
                            emptyState=""
                            emptyStateBody="Drag and drop a file or upload one."
                            emptyStateButton="Browse"
                            emptyStateLink="Start from scratch"
                            emptyStateTitle="Start editing"
                            headerMainContent=""
                            height="400px"
                            isCopyEnabled={false}
                            isDarkTheme={false}
                            isDownloadEnabled={false}
                            isLanguageLabelVisible={false}
                            isLineNumbersVisible={true}
                            isMinimapVisible={true}
                            isReadOnly={false}
                            isUploadEnabled={false}
                            language="json"
                            loading=""
                            onChange={[Function]}
                            onCodeChange={[Function]}
                            onEditorDidMount={[Function]}
                            options={Object {}}
                            overrideServices={Object {}}
                            shortcutsPopoverButtonText="View Shortcuts"
                            shortcutsPopoverProps={
                              Object {
                                "aria-label": "Keyboard Shortcuts",
                                "bodyContent": "",
                              }
                            }
                            showEditor={true}
                            toolTipCopyExitDelay={1600}
                            toolTipDelay={300}
                            toolTipMaxWidth="100px"
                            toolTipPosition="top"
                            uploadButtonAriaLabel="Upload code"
                            uploadButtonToolTipText="Upload"
                            width=""
                          >
                            <t
                              disabled={false}
                              getDataTransferItems={[Function]}
                              maxSize={Infinity}
                              minSize={0}
                              multiple={false}
                              onDropAccepted={[Function]}
                              onDropRejected={[Function]}
                              preventDropOnDocument={true}
                            >
                              <div
                                className="pf-c-code-editor"
                              >
                                <div
                                  className="pf-c-code-editor__header"
                                >
                                  <div
                                    className="pf-c-code-editor__controls"
                                  />
                                  <div
                                    className="pf-c-code-editor__header-main"
                                  />
                                </div>
                                <div
                                  className="pf-c-code-editor__main"
                                >
                                  <div
                                    className="pf-c-code-editor__code"
                                    tabIndex={0}
                                  >
                                    <MonacoEditor
                                      className={null}
                                      defaultValue=""
                                      editorDidMount={[Function]}
                                      editorWillMount={[Function]}
                                      editorWillUnmount={[Function]}
                                      height="400px"
                                      language="json"
                                      onChange={[Function]}
                                      options={
                                        Object {
                                          "cursorStyle": "line",
                                          "lineNumbers": "on",
                                          "minimap": Object {
                                            "enabled": true,
                                          },
                                          "readOnly": false,
                                          "scrollBeyondLastLine": true,
                                          "tabIndex": -1,
                                        }
                                      }
                                      overrideServices={Object {}}
                                      theme="vs-light"
                                      value=""
                                      width=""
                                    >
                                      <div
                                        className="react-monaco-editor-container"
                                        style={
                                          Object {
                                            "height": "400px",
                                            "width": "",
                                          }
                                        }
                                      />
                                    </MonacoEditor>
                                  </div>
                                </div>
                              </div>
                            </t>
                          </CodeEditor>
                        </div>
                      </div>
                    </GenerateId>
                  </FormGroup>
                  <ActionGroup>
                    <div
                      className="pf-c-form__group pf-m-action"
                    >
                      <div
                        className="pf-c-form__group-control"
                      >
                        <div
                          className="pf-c-form__actions"
                        >
                          <Button
                            onClick={[Function]}
                            variant="primary"
                          >
                            <ButtonBase
                              innerRef={null}
                              onClick={[Function]}
                              variant="primary"
                            >
                              <button
                                aria-disabled={false}
                                aria-label={null}
                                className="pf-c-button pf-m-primary"
                                data-ouia-component-id="OUIA-Generated-Button-primary-1"
                                data-ouia-component-type="PF4/Button"
                                data-ouia-safe={true}
                                disabled={false}
                                onClick={[Function]}
                                role={null}
                                type="button"
                              >
                                Start
                              </button>
                            </ButtonBase>
                          </Button>
                          <Button
                            onClick={[Function]}
                            variant="secondary"
                          >
                            <ButtonBase
                              innerRef={null}
                              onClick={[Function]}
                              variant="secondary"
                            >
                              <button
                                aria-disabled={false}
                                aria-label={null}
                                className="pf-c-button pf-m-secondary"
                                data-ouia-component-id="OUIA-Generated-Button-secondary-1"
                                data-ouia-component-type="PF4/Button"
                                data-ouia-safe={true}
                                disabled={false}
                                onClick={[Function]}
                                role={null}
                                type="button"
                              >
                                Reset
                              </button>
                            </ButtonBase>
                          </Button>
                        </div>
                      </div>
                    </div>
                  </ActionGroup>
                </form>
              </FormBase>
            </Form>
          </div>
        </StackItem>
      </div>
    </Stack>
  </div>
</WorkflowForm>
`;

exports[`WorkflowForm Test Workflow Form - validation error 1`] = `
<WorkflowForm
  driver={
    Object {
      "getCustomWorkflowSchema": [MockFunction],
      "resetBusinessKey": [MockFunction],
      "startWorkflow": [MockFunction],
    }
  }
  workflowDefinition={
    Object {
      "endpoint": "http://localhost:4000/hiring",
      "workflowName": "workflow1",
    }
  }
>
  <div
    data-ouia-component-type="workflow-form"
    data-ouia-safe={true}
  >
    <Stack
      hasGutter={true}
    >
      <div
        className="pf-l-stack pf-m-gutter"
      >
        <StackItem>
          <div
            className="pf-l-stack__item"
          >
            <Alert
              isInline={true}
              title="Couldn't find JSON schema to display the Start Form."
              variant="info"
            >
              <MockedComponent />
            </Alert>
          </div>
        </StackItem>
        <StackItem>
          <div
            className="pf-l-stack__item"
          >
            <Form
              isHorizontal={true}
            >
              <FormBase
                innerRef={null}
                isHorizontal={true}
              >
                <form
                  className="pf-c-form pf-m-horizontal"
                  noValidate={true}
                >
                  <FormGroup
                    fieldId="workflowData"
                    helperTextInvalid="The Workflow Data should have a JSON format."
                    helperTextInvalidIcon={
                      <ExclamationCircleIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                      />
                    }
                    isRequired={true}
                    label="Start Workflow Data"
                    labelIcon={
                      <Popover
                        bodyContent={
                          <div>
                            Fill the data to start the Workflow in JSON format.
                          </div>
                        }
                        id="workflow-form-data-help"
                      >
                        <button
                          aria-label="More info for data field"
                          className="pf-c-form__group-label-help"
                          onClick={[Function]}
                          type="button"
                        >
                          <HelpIcon
                            color="currentColor"
                            noVerticalAlign={true}
                            size="sm"
                          />
                        </button>
                      </Popover>
                    }
                    validated="error"
                  >
                    <GenerateId
                      prefix="pf-random-id-"
                    >
                      <div
                        className="pf-c-form__group"
                      >
                        <div
                          className="pf-c-form__group-label"
                        >
                          <label
                            className="pf-c-form__label"
                            htmlFor="workflowData"
                          >
                            <span
                              className="pf-c-form__label-text"
                            >
                              Start Workflow Data
                            </span>
                            <span
                              aria-hidden="true"
                              className="pf-c-form__label-required"
                            >
                               
                              *
                            </span>
                          </label>
                           
                          <Popover
                            bodyContent={
                              <div>
                                Fill the data to start the Workflow in JSON format.
                              </div>
                            }
                            id="workflow-form-data-help"
                          >
                            <MockedComponent />
                          </Popover>
                        </div>
                        <div
                          className="pf-c-form__group-control"
                        >
                          <CodeEditor
                            className=""
                            code=""
                            copyButtonAriaLabel="Copy code to clipboard"
                            copyButtonSuccessTooltipText="Content added to clipboard"
                            copyButtonToolTipText="Copy to clipboard"
                            customControls={null}
                            downloadButtonAriaLabel="Download code"
                            downloadButtonToolTipText="Download"
                            downloadFileName="1688401716990"
                            emptyState=""
                            emptyStateBody="Drag and drop a file or upload one."
                            emptyStateButton="Browse"
                            emptyStateLink="Start from scratch"
                            emptyStateTitle="Start editing"
                            headerMainContent=""
                            height="400px"
                            isCopyEnabled={false}
                            isDarkTheme={false}
                            isDownloadEnabled={false}
                            isLanguageLabelVisible={false}
                            isLineNumbersVisible={true}
                            isMinimapVisible={true}
                            isReadOnly={false}
                            isUploadEnabled={false}
                            language="json"
                            loading=""
                            onChange={[Function]}
                            onCodeChange={[Function]}
                            onEditorDidMount={[Function]}
                            options={Object {}}
                            overrideServices={Object {}}
                            shortcutsPopoverButtonText="View Shortcuts"
                            shortcutsPopoverProps={
                              Object {
                                "aria-label": "Keyboard Shortcuts",
                                "bodyContent": "",
                              }
                            }
                            showEditor={true}
                            toolTipCopyExitDelay={1600}
                            toolTipDelay={300}
                            toolTipMaxWidth="100px"
                            toolTipPosition="top"
                            uploadButtonAriaLabel="Upload code"
                            uploadButtonToolTipText="Upload"
                            width=""
                          >
                            <t
                              disabled={false}
                              getDataTransferItems={[Function]}
                              maxSize={Infinity}
                              minSize={0}
                              multiple={false}
                              onDropAccepted={[Function]}
                              onDropRejected={[Function]}
                              preventDropOnDocument={true}
                            >
                              <div
                                className="pf-c-code-editor"
                              >
                                <div
                                  className="pf-c-code-editor__header"
                                >
                                  <div
                                    className="pf-c-code-editor__controls"
                                  />
                                  <div
                                    className="pf-c-code-editor__header-main"
                                  />
                                </div>
                                <div
                                  className="pf-c-code-editor__main"
                                >
                                  <div
                                    className="pf-c-code-editor__code"
                                    tabIndex={0}
                                  >
                                    <MonacoEditor
                                      className={null}
                                      defaultValue=""
                                      editorDidMount={[Function]}
                                      editorWillMount={[Function]}
                                      editorWillUnmount={[Function]}
                                      height="400px"
                                      language="json"
                                      onChange={[Function]}
                                      options={
                                        Object {
                                          "cursorStyle": "line",
                                          "lineNumbers": "on",
                                          "minimap": Object {
                                            "enabled": true,
                                          },
                                          "readOnly": false,
                                          "scrollBeyondLastLine": true,
                                          "tabIndex": -1,
                                        }
                                      }
                                      overrideServices={Object {}}
                                      theme="vs-light"
                                      value=""
                                      width=""
                                    >
                                      <div
                                        className="react-monaco-editor-container"
                                        style={
                                          Object {
                                            "height": "400px",
                                            "width": "",
                                          }
                                        }
                                      />
                                    </MonacoEditor>
                                  </div>
                                </div>
                              </div>
                            </t>
                          </CodeEditor>
                          <div
                            aria-live="polite"
                            className="pf-c-form__helper-text pf-m-error"
                            id="workflowData-helper"
                          >
                            <span
                              className="pf-c-form__helper-text-icon"
                            >
                              <ExclamationCircleIcon
                                color="currentColor"
                                noVerticalAlign={false}
                                size="sm"
                              >
                                <svg
                                  aria-hidden={true}
                                  aria-labelledby={null}
                                  fill="currentColor"
                                  height="1em"
                                  role="img"
                                  style={
                                    Object {
                                      "verticalAlign": "-0.125em",
                                    }
                                  }
                                  viewBox="0 0 512 512"
                                  width="1em"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                  />
                                </svg>
                              </ExclamationCircleIcon>
                            </span>
                            The Workflow Data should have a JSON format.
                          </div>
                        </div>
                      </div>
                    </GenerateId>
                  </FormGroup>
                  <ActionGroup>
                    <div
                      className="pf-c-form__group pf-m-action"
                    >
                      <div
                        className="pf-c-form__group-control"
                      >
                        <div
                          className="pf-c-form__actions"
                        >
                          <Button
                            onClick={[Function]}
                            variant="primary"
                          >
                            <ButtonBase
                              innerRef={null}
                              onClick={[Function]}
                              variant="primary"
                            >
                              <button
                                aria-disabled={false}
                                aria-label={null}
                                className="pf-c-button pf-m-primary"
                                data-ouia-component-id="OUIA-Generated-Button-primary-3"
                                data-ouia-component-type="PF4/Button"
                                data-ouia-safe={true}
                                disabled={false}
                                onClick={[Function]}
                                role={null}
                                type="button"
                              >
                                Start
                              </button>
                            </ButtonBase>
                          </Button>
                          <Button
                            onClick={[Function]}
                            variant="secondary"
                          >
                            <ButtonBase
                              innerRef={null}
                              onClick={[Function]}
                              variant="secondary"
                            >
                              <button
                                aria-disabled={false}
                                aria-label={null}
                                className="pf-c-button pf-m-secondary"
                                data-ouia-component-id="OUIA-Generated-Button-secondary-3"
                                data-ouia-component-type="PF4/Button"
                                data-ouia-safe={true}
                                disabled={false}
                                onClick={[Function]}
                                role={null}
                                type="button"
                              >
                                Reset
                              </button>
                            </ButtonBase>
                          </Button>
                        </div>
                      </div>
                    </div>
                  </ActionGroup>
                </form>
              </FormBase>
            </Form>
          </div>
        </StackItem>
      </div>
    </Stack>
  </div>
</WorkflowForm>
`;
