// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TaskForm Test Test rendering form 1`] = `
<TaskForm
  taskInfo={
    TaskInfoImpl {
      "processInstanceEndPoint": "http://localhost:8080/travels",
      "task": Object {
        "actualOwner": null,
        "adminGroups": Array [],
        "adminUsers": Array [],
        "completed": null,
        "description": null,
        "excludedUsers": Array [],
        "id": "45a73767-5da3-49bf-9c40-d533c3e77ef3",
        "inputs": "{\\"Skippable\\":\\"true\\",\\"trip\\":{\\"city\\":\\"Boston\\",\\"country\\":\\"US\\",\\"begin\\":\\"2020-02-19T23:00:00.000+01:00\\",\\"end\\":\\"2020-02-26T23:00:00.000+01:00\\",\\"visaRequired\\":true},\\"TaskName\\":\\"VisaApplication\\",\\"NodeName\\":\\"Apply for visa\\",\\"traveller\\":{\\"firstName\\":\\"Rachel\\",\\"lastName\\":\\"White\\",\\"email\\":\\"rwhite@gorle.com\\",\\"nationality\\":\\"Polish\\",\\"address\\":{\\"street\\":\\"Cabalone\\",\\"city\\":\\"Zerf\\",\\"zipCode\\":\\"765756\\",\\"country\\":\\"Poland\\"}},\\"Priority\\":\\"1\\"}",
        "lastUpdate": "2020-02-19T11:11:56.282Z",
        "name": "Apply for visa",
        "outputs": "{}",
        "potentialGroups": Array [],
        "potentialUsers": Array [],
        "priority": "1",
        "processId": "travels",
        "processInstanceId": "9ae7ce3b-d49c-4f35-b843-8ac3d22fa427",
        "referenceName": "VisaApplication",
        "rootProcessId": null,
        "rootProcessInstanceId": null,
        "started": "2020-02-19T11:11:56.282Z",
        "state": "Ready",
      },
    }
  }
>
  <FormRenderer
    errorCallback={[Function]}
    form={
      Object {
        "actions": Array [
          Object {
            "name": "Complete",
            "outputs": Array [],
            "primary": true,
          },
          Object {
            "name": "Release",
            "outputs": Array [
              "traveller",
            ],
            "phase": "release",
          },
        ],
        "schema": Object {
          "properties": Object {
            "traveller": Object {
              "properties": Object {
                "address": Object {
                  "properties": Object {
                    "city": Object {
                      "type": "string",
                    },
                    "country": Object {
                      "type": "string",
                    },
                    "street": Object {
                      "type": "string",
                    },
                    "zipCode": Object {
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
                "email": Object {
                  "format": "email",
                  "type": "string",
                },
                "firstName": Object {
                  "type": "string",
                },
                "lastName": Object {
                  "type": "string",
                },
                "nationality": Object {
                  "type": "string",
                },
              },
              "required": Array [
                "firstName",
                "lastName",
              ],
              "type": "object",
            },
            "trip": Object {
              "properties": Object {
                "begin": Object {
                  "format": "date-time",
                  "type": "string",
                },
                "city": Object {
                  "type": "string",
                },
                "country": Object {
                  "type": "string",
                },
                "end": Object {
                  "format": "date-time",
                  "type": "string",
                },
                "visaRequired": Object {
                  "type": "boolean",
                },
              },
              "type": "object",
            },
            "visaApplication": Object {
              "properties": Object {
                "city": Object {
                  "type": "string",
                },
                "country": Object {
                  "type": "string",
                },
                "duration": Object {
                  "type": "integer",
                },
                "firstName": Object {
                  "type": "string",
                },
                "lastName": Object {
                  "type": "string",
                },
                "nationality": Object {
                  "type": "string",
                },
                "passportNumber": Object {
                  "type": "string",
                },
              },
              "type": "object",
            },
          },
          "type": "object",
        },
      }
    }
    model={
      Object {
        "NodeName": "Apply for visa",
        "Priority": "1",
        "Skippable": "true",
        "TaskName": "VisaApplication",
        "traveller": Object {
          "address": Object {
            "city": "Zerf",
            "country": "Poland",
            "street": "Cabalone",
            "zipCode": "765756",
          },
          "email": "rwhite@gorle.com",
          "firstName": "Rachel",
          "lastName": "White",
          "nationality": "Polish",
        },
        "trip": Object {
          "begin": "2020-02-19T23:00:00.000+01:00",
          "city": "Boston",
          "country": "US",
          "end": "2020-02-26T23:00:00.000+01:00",
          "visaRequired": true,
        },
      }
    }
    successCallback={[Function]}
    taskInfo={
      TaskInfoImpl {
        "processInstanceEndPoint": "http://localhost:8080/travels",
        "task": Object {
          "actualOwner": null,
          "adminGroups": Array [],
          "adminUsers": Array [],
          "completed": null,
          "description": null,
          "excludedUsers": Array [],
          "id": "45a73767-5da3-49bf-9c40-d533c3e77ef3",
          "inputs": "{\\"Skippable\\":\\"true\\",\\"trip\\":{\\"city\\":\\"Boston\\",\\"country\\":\\"US\\",\\"begin\\":\\"2020-02-19T23:00:00.000+01:00\\",\\"end\\":\\"2020-02-26T23:00:00.000+01:00\\",\\"visaRequired\\":true},\\"TaskName\\":\\"VisaApplication\\",\\"NodeName\\":\\"Apply for visa\\",\\"traveller\\":{\\"firstName\\":\\"Rachel\\",\\"lastName\\":\\"White\\",\\"email\\":\\"rwhite@gorle.com\\",\\"nationality\\":\\"Polish\\",\\"address\\":{\\"street\\":\\"Cabalone\\",\\"city\\":\\"Zerf\\",\\"zipCode\\":\\"765756\\",\\"country\\":\\"Poland\\"}},\\"Priority\\":\\"1\\"}",
          "lastUpdate": "2020-02-19T11:11:56.282Z",
          "name": "Apply for visa",
          "outputs": "{}",
          "potentialGroups": Array [],
          "potentialUsers": Array [],
          "priority": "1",
          "processId": "travels",
          "processInstanceId": "9ae7ce3b-d49c-4f35-b843-8ac3d22fa427",
          "referenceName": "VisaApplication",
          "rootProcessId": null,
          "rootProcessInstanceId": null,
          "started": "2020-02-19T11:11:56.282Z",
          "state": "Ready",
        },
      }
    }
  >
    <AutoValidatedQuickPatternflyForm
      autosave={false}
      autosaveDelay={0}
      disabled={false}
      error={null}
      label={true}
      model={
        Object {
          "NodeName": "Apply for visa",
          "Priority": "1",
          "Skippable": "true",
          "TaskName": "VisaApplication",
          "traveller": Object {
            "address": Object {
              "city": "Zerf",
              "country": "Poland",
              "street": "Cabalone",
              "zipCode": "765756",
            },
            "email": "rwhite@gorle.com",
            "firstName": "Rachel",
            "lastName": "White",
            "nationality": "Polish",
          },
          "trip": Object {
            "begin": 2020-02-19T22:00:00.000Z,
            "city": "Boston",
            "country": "US",
            "end": 2020-02-26T22:00:00.000Z,
            "visaRequired": true,
          },
        }
      }
      noValidate={true}
      onSubmit={[Function]}
      onValidate={[Function]}
      placeholder={true}
      schema={
        JSONSchemaBridge {
          "_compiledSchema": Object {
            "traveller": Object {
              "isRequired": false,
            },
            "traveller.address": Object {
              "isRequired": false,
            },
            "traveller.address.city": Object {
              "isRequired": false,
            },
            "traveller.address.country": Object {
              "isRequired": false,
            },
            "traveller.address.street": Object {
              "isRequired": false,
            },
            "traveller.address.zipCode": Object {
              "isRequired": false,
            },
            "traveller.email": Object {
              "isRequired": false,
            },
            "traveller.firstName": Object {
              "isRequired": true,
            },
            "traveller.lastName": Object {
              "isRequired": true,
            },
            "traveller.nationality": Object {
              "isRequired": false,
            },
            "trip": Object {
              "isRequired": false,
            },
            "trip.begin": Object {
              "isRequired": false,
            },
            "trip.city": Object {
              "isRequired": false,
            },
            "trip.country": Object {
              "isRequired": false,
            },
            "trip.end": Object {
              "isRequired": false,
            },
            "trip.visaRequired": Object {
              "isRequired": false,
            },
            "visaApplication": Object {
              "isRequired": false,
            },
            "visaApplication.city": Object {
              "isRequired": false,
            },
            "visaApplication.country": Object {
              "isRequired": false,
            },
            "visaApplication.duration": Object {
              "isRequired": false,
            },
            "visaApplication.firstName": Object {
              "isRequired": false,
            },
            "visaApplication.lastName": Object {
              "isRequired": false,
            },
            "visaApplication.nationality": Object {
              "isRequired": false,
            },
            "visaApplication.passportNumber": Object {
              "isRequired": false,
            },
          },
          "getField": [Function],
          "getSubfields": [Function],
          "getType": [Function],
          "schema": Object {
            "properties": Object {
              "traveller": Object {
                "properties": Object {
                  "address": Object {
                    "properties": Object {
                      "city": Object {
                        "type": "string",
                      },
                      "country": Object {
                        "type": "string",
                      },
                      "street": Object {
                        "type": "string",
                      },
                      "zipCode": Object {
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                  "email": Object {
                    "format": "email",
                    "type": "string",
                  },
                  "firstName": Object {
                    "type": "string",
                  },
                  "lastName": Object {
                    "type": "string",
                  },
                  "nationality": Object {
                    "type": "string",
                  },
                },
                "required": Array [
                  "firstName",
                  "lastName",
                ],
                "type": "object",
              },
              "trip": Object {
                "properties": Object {
                  "begin": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                  "city": Object {
                    "type": "string",
                  },
                  "country": Object {
                    "type": "string",
                  },
                  "end": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                  "visaRequired": Object {
                    "type": "boolean",
                  },
                },
                "type": "object",
              },
              "visaApplication": Object {
                "properties": Object {
                  "city": Object {
                    "type": "string",
                  },
                  "country": Object {
                    "type": "string",
                  },
                  "duration": Object {
                    "type": "integer",
                  },
                  "firstName": Object {
                    "type": "string",
                  },
                  "lastName": Object {
                    "type": "string",
                  },
                  "nationality": Object {
                    "type": "string",
                  },
                  "passportNumber": Object {
                    "type": "string",
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
          "validator": [Function],
        }
      }
      showInlineError={true}
      validate="onChangeAfterSubmit"
    >
      <Form
        key="reset-0"
        noValidate={true}
        onSubmit={[Function]}
      >
        <form
          className="pf-c-form"
          noValidate={true}
          onSubmit={[Function]}
        >
          <ErrorsField
            style={
              Object {
                "backgroundColor": "rgba(255, 85, 0, 0.2)",
                "border": "1px solid rgb(255, 85, 0)",
                "borderRadius": "7px",
                "margin": "20px 0px",
                "padding": "10px",
              }
            }
          />
          <AutoFields
            autoField={[Function]}
            element="div"
            omitFields={Array []}
          >
            <div>
              <AutoField
                key="trip"
                name="trip"
              >
                <NestField
                  name="trip"
                >
                  <Nest
                    changed={false}
                    disabled={false}
                    error={null}
                    errorMessage=""
                    field={
                      Object {
                        "properties": Object {
                          "begin": Object {
                            "format": "date-time",
                            "type": "string",
                          },
                          "city": Object {
                            "type": "string",
                          },
                          "country": Object {
                            "type": "string",
                          },
                          "end": Object {
                            "format": "date-time",
                            "type": "string",
                          },
                          "visaRequired": Object {
                            "type": "boolean",
                          },
                        },
                        "type": "object",
                      }
                    }
                    fieldType={[Function]}
                    fields={
                      Array [
                        "city",
                        "country",
                        "begin",
                        "end",
                        "visaRequired",
                      ]
                    }
                    id="uniforms-0000-0001"
                    label="Trip"
                    name="trip"
                    onChange={[Function]}
                    placeholder="Trip"
                    properties={
                      Object {
                        "begin": Object {
                          "format": "date-time",
                          "type": "string",
                        },
                        "city": Object {
                          "type": "string",
                        },
                        "country": Object {
                          "type": "string",
                        },
                        "end": Object {
                          "format": "date-time",
                          "type": "string",
                        },
                        "visaRequired": Object {
                          "type": "boolean",
                        },
                      }
                    }
                    required={false}
                    showInlineError={true}
                    value={
                      Object {
                        "begin": 2020-02-19T22:00:00.000Z,
                        "city": "Boston",
                        "country": "US",
                        "end": 2020-02-26T22:00:00.000Z,
                        "visaRequired": true,
                      }
                    }
                  >
                    <div
                      id="uniforms-0000-0001"
                      properties={
                        Object {
                          "begin": Object {
                            "format": "date-time",
                            "type": "string",
                          },
                          "city": Object {
                            "type": "string",
                          },
                          "country": Object {
                            "type": "string",
                          },
                          "end": Object {
                            "format": "date-time",
                            "type": "string",
                          },
                          "visaRequired": Object {
                            "type": "boolean",
                          },
                        }
                      }
                      required={false}
                    >
                      <label>
                        Trip
                      </label>
                      <AutoField
                        isDisabled={false}
                        key="city"
                        name="trip.city"
                      >
                        <TextField
                          isDisabled={false}
                          name="trip.city"
                        >
                          <Text
                            changed={false}
                            disabled={false}
                            error={null}
                            errorMessage=""
                            field={
                              Object {
                                "type": "string",
                              }
                            }
                            fieldType={[Function]}
                            fields={Array []}
                            id="uniforms-0000-0003"
                            isDisabled={false}
                            label="City"
                            name="trip.city"
                            onChange={[Function]}
                            placeholder="City"
                            required={false}
                            showInlineError={true}
                            value="Boston"
                          >
                            <FormGroup
                              fieldId="uniforms-0000-0003"
                              helperTextInvalid=""
                              isValid={true}
                              label="City"
                            >
                              <div
                                className="pf-c-form__group"
                              >
                                <label
                                  className="pf-c-form__label"
                                  htmlFor="uniforms-0000-0003"
                                >
                                  <span
                                    className="pf-c-form__label-text"
                                  >
                                    City
                                  </span>
                                </label>
                                <ForwardRef
                                  id="uniforms-0000-0003"
                                  isDisabled={false}
                                  isValid={true}
                                  name="trip.city"
                                  onChange={[Function]}
                                  placeholder="City"
                                  required={false}
                                  type="text"
                                  value="Boston"
                                >
                                  <TextInputBase
                                    aria-label={null}
                                    className=""
                                    id="uniforms-0000-0003"
                                    innerRef={null}
                                    isDisabled={false}
                                    isReadOnly={false}
                                    isRequired={false}
                                    isValid={true}
                                    name="trip.city"
                                    onChange={[Function]}
                                    placeholder="City"
                                    required={false}
                                    type="text"
                                    validated="default"
                                    value="Boston"
                                  >
                                    <input
                                      aria-invalid={false}
                                      aria-label={null}
                                      className="pf-c-form-control"
                                      disabled={false}
                                      id="uniforms-0000-0003"
                                      name="trip.city"
                                      onChange={[Function]}
                                      placeholder="City"
                                      readOnly={false}
                                      required={false}
                                      type="text"
                                      value="Boston"
                                    />
                                  </TextInputBase>
                                </ForwardRef>
                              </div>
                            </FormGroup>
                          </Text>
                        </TextField>
                      </AutoField>
                      <AutoField
                        isDisabled={false}
                        key="country"
                        name="trip.country"
                      >
                        <TextField
                          isDisabled={false}
                          name="trip.country"
                        >
                          <Text
                            changed={false}
                            disabled={false}
                            error={null}
                            errorMessage=""
                            field={
                              Object {
                                "type": "string",
                              }
                            }
                            fieldType={[Function]}
                            fields={Array []}
                            id="uniforms-0000-0005"
                            isDisabled={false}
                            label="Country"
                            name="trip.country"
                            onChange={[Function]}
                            placeholder="Country"
                            required={false}
                            showInlineError={true}
                            value="US"
                          >
                            <FormGroup
                              fieldId="uniforms-0000-0005"
                              helperTextInvalid=""
                              isValid={true}
                              label="Country"
                            >
                              <div
                                className="pf-c-form__group"
                              >
                                <label
                                  className="pf-c-form__label"
                                  htmlFor="uniforms-0000-0005"
                                >
                                  <span
                                    className="pf-c-form__label-text"
                                  >
                                    Country
                                  </span>
                                </label>
                                <ForwardRef
                                  id="uniforms-0000-0005"
                                  isDisabled={false}
                                  isValid={true}
                                  name="trip.country"
                                  onChange={[Function]}
                                  placeholder="Country"
                                  required={false}
                                  type="text"
                                  value="US"
                                >
                                  <TextInputBase
                                    aria-label={null}
                                    className=""
                                    id="uniforms-0000-0005"
                                    innerRef={null}
                                    isDisabled={false}
                                    isReadOnly={false}
                                    isRequired={false}
                                    isValid={true}
                                    name="trip.country"
                                    onChange={[Function]}
                                    placeholder="Country"
                                    required={false}
                                    type="text"
                                    validated="default"
                                    value="US"
                                  >
                                    <input
                                      aria-invalid={false}
                                      aria-label={null}
                                      className="pf-c-form-control"
                                      disabled={false}
                                      id="uniforms-0000-0005"
                                      name="trip.country"
                                      onChange={[Function]}
                                      placeholder="Country"
                                      readOnly={false}
                                      required={false}
                                      type="text"
                                      value="US"
                                    />
                                  </TextInputBase>
                                </ForwardRef>
                              </div>
                            </FormGroup>
                          </Text>
                        </TextField>
                      </AutoField>
                      <AutoField
                        isDisabled={false}
                        key="begin"
                        name="trip.begin"
                      >
                        <DateField
                          isDisabled={false}
                          name="trip.begin"
                        >
                          <Date
                            changed={false}
                            disabled={false}
                            error={null}
                            errorMessage=""
                            field={
                              Object {
                                "format": "date-time",
                                "type": "string",
                              }
                            }
                            fieldType={[Function]}
                            fields={Array []}
                            id="uniforms-0000-0007"
                            isDisabled={false}
                            label="Begin"
                            name="trip.begin"
                            onChange={[Function]}
                            placeholder="Begin"
                            required={false}
                            showInlineError={true}
                            value={2020-02-19T22:00:00.000Z}
                          >
                            <FormGroup
                              fieldId="uniforms-0000-0007"
                              helperTextInvalid=""
                              isValid={true}
                              label="Begin"
                            >
                              <div
                                className="pf-c-form__group"
                              >
                                <label
                                  className="pf-c-form__label"
                                  htmlFor="uniforms-0000-0007"
                                >
                                  <span
                                    className="pf-c-form__label-text"
                                  >
                                    Begin
                                  </span>
                                </label>
                                <ForwardRef
                                  id="uniforms-0000-0007"
                                  isDisabled={false}
                                  name="trip.begin"
                                  onChange={[Function]}
                                  placeholder="Begin"
                                  type="datetime-local"
                                  value="2020-02-19T22:00"
                                >
                                  <TextInputBase
                                    aria-label={null}
                                    className=""
                                    id="uniforms-0000-0007"
                                    innerRef={null}
                                    isDisabled={false}
                                    isReadOnly={false}
                                    isRequired={false}
                                    isValid={true}
                                    name="trip.begin"
                                    onChange={[Function]}
                                    placeholder="Begin"
                                    type="datetime-local"
                                    validated="default"
                                    value="2020-02-19T22:00"
                                  >
                                    <input
                                      aria-invalid={false}
                                      aria-label={null}
                                      className="pf-c-form-control"
                                      disabled={false}
                                      id="uniforms-0000-0007"
                                      name="trip.begin"
                                      onChange={[Function]}
                                      placeholder="Begin"
                                      readOnly={false}
                                      required={false}
                                      type="datetime-local"
                                      value="2020-02-19T22:00"
                                    />
                                  </TextInputBase>
                                </ForwardRef>
                              </div>
                            </FormGroup>
                          </Date>
                        </DateField>
                      </AutoField>
                      <AutoField
                        isDisabled={false}
                        key="end"
                        name="trip.end"
                      >
                        <DateField
                          isDisabled={false}
                          name="trip.end"
                        >
                          <Date
                            changed={false}
                            disabled={false}
                            error={null}
                            errorMessage=""
                            field={
                              Object {
                                "format": "date-time",
                                "type": "string",
                              }
                            }
                            fieldType={[Function]}
                            fields={Array []}
                            id="uniforms-0000-0009"
                            isDisabled={false}
                            label="End"
                            name="trip.end"
                            onChange={[Function]}
                            placeholder="End"
                            required={false}
                            showInlineError={true}
                            value={2020-02-26T22:00:00.000Z}
                          >
                            <FormGroup
                              fieldId="uniforms-0000-0009"
                              helperTextInvalid=""
                              isValid={true}
                              label="End"
                            >
                              <div
                                className="pf-c-form__group"
                              >
                                <label
                                  className="pf-c-form__label"
                                  htmlFor="uniforms-0000-0009"
                                >
                                  <span
                                    className="pf-c-form__label-text"
                                  >
                                    End
                                  </span>
                                </label>
                                <ForwardRef
                                  id="uniforms-0000-0009"
                                  isDisabled={false}
                                  name="trip.end"
                                  onChange={[Function]}
                                  placeholder="End"
                                  type="datetime-local"
                                  value="2020-02-26T22:00"
                                >
                                  <TextInputBase
                                    aria-label={null}
                                    className=""
                                    id="uniforms-0000-0009"
                                    innerRef={null}
                                    isDisabled={false}
                                    isReadOnly={false}
                                    isRequired={false}
                                    isValid={true}
                                    name="trip.end"
                                    onChange={[Function]}
                                    placeholder="End"
                                    type="datetime-local"
                                    validated="default"
                                    value="2020-02-26T22:00"
                                  >
                                    <input
                                      aria-invalid={false}
                                      aria-label={null}
                                      className="pf-c-form-control"
                                      disabled={false}
                                      id="uniforms-0000-0009"
                                      name="trip.end"
                                      onChange={[Function]}
                                      placeholder="End"
                                      readOnly={false}
                                      required={false}
                                      type="datetime-local"
                                      value="2020-02-26T22:00"
                                    />
                                  </TextInputBase>
                                </ForwardRef>
                              </div>
                            </FormGroup>
                          </Date>
                        </DateField>
                      </AutoField>
                      <AutoField
                        isDisabled={false}
                        key="visaRequired"
                        name="trip.visaRequired"
                      >
                        <BoolField
                          isDisabled={false}
                          name="trip.visaRequired"
                        >
                          <Bool
                            appearance="checkbox"
                            changed={false}
                            disabled={false}
                            error={null}
                            errorMessage=""
                            field={
                              Object {
                                "type": "boolean",
                              }
                            }
                            fieldType={[Function]}
                            fields={Array []}
                            id="uniforms-0000-000b"
                            isDisabled={false}
                            label="Visa required"
                            name="trip.visaRequired"
                            onChange={[Function]}
                            placeholder="Visa required"
                            required={false}
                            showInlineError={true}
                            value={true}
                          >
                            <div
                              appearance="checkbox"
                              required={false}
                            >
                              <Checkbox
                                className=""
                                id="uniforms-0000-000b"
                                isChecked={true}
                                isDisabled={false}
                                isValid={true}
                                label="Visa required"
                                name="trip.visaRequired"
                                onChange={[Function]}
                              >
                                <div
                                  className="pf-c-check"
                                >
                                  <input
                                    aria-invalid={false}
                                    checked={true}
                                    className="pf-c-check__input"
                                    disabled={false}
                                    id="uniforms-0000-000b"
                                    name="trip.visaRequired"
                                    onChange={[Function]}
                                    type="checkbox"
                                  />
                                  <label
                                    className="pf-c-check__label"
                                    htmlFor="uniforms-0000-000b"
                                  >
                                    Visa required
                                  </label>
                                </div>
                              </Checkbox>
                            </div>
                          </Bool>
                        </BoolField>
                      </AutoField>
                    </div>
                  </Nest>
                </NestField>
              </AutoField>
              <AutoField
                key="traveller"
                name="traveller"
              >
                <NestField
                  name="traveller"
                >
                  <Nest
                    changed={false}
                    disabled={false}
                    error={null}
                    errorMessage=""
                    field={
                      Object {
                        "properties": Object {
                          "address": Object {
                            "properties": Object {
                              "city": Object {
                                "type": "string",
                              },
                              "country": Object {
                                "type": "string",
                              },
                              "street": Object {
                                "type": "string",
                              },
                              "zipCode": Object {
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "email": Object {
                            "format": "email",
                            "type": "string",
                          },
                          "firstName": Object {
                            "type": "string",
                          },
                          "lastName": Object {
                            "type": "string",
                          },
                          "nationality": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "firstName",
                          "lastName",
                        ],
                        "type": "object",
                      }
                    }
                    fieldType={[Function]}
                    fields={
                      Array [
                        "firstName",
                        "lastName",
                        "email",
                        "nationality",
                        "address",
                      ]
                    }
                    id="uniforms-0000-000d"
                    label="Traveller"
                    name="traveller"
                    onChange={[Function]}
                    placeholder="Traveller"
                    properties={
                      Object {
                        "address": Object {
                          "properties": Object {
                            "city": Object {
                              "type": "string",
                            },
                            "country": Object {
                              "type": "string",
                            },
                            "street": Object {
                              "type": "string",
                            },
                            "zipCode": Object {
                              "type": "string",
                            },
                          },
                          "type": "object",
                        },
                        "email": Object {
                          "format": "email",
                          "type": "string",
                        },
                        "firstName": Object {
                          "type": "string",
                        },
                        "lastName": Object {
                          "type": "string",
                        },
                        "nationality": Object {
                          "type": "string",
                        },
                      }
                    }
                    required={
                      Array [
                        "firstName",
                        "lastName",
                      ]
                    }
                    showInlineError={true}
                    value={
                      Object {
                        "address": Object {
                          "city": "Zerf",
                          "country": "Poland",
                          "street": "Cabalone",
                          "zipCode": "765756",
                        },
                        "email": "rwhite@gorle.com",
                        "firstName": "Rachel",
                        "lastName": "White",
                        "nationality": "Polish",
                      }
                    }
                  >
                    <div
                      id="uniforms-0000-000d"
                      properties={
                        Object {
                          "address": Object {
                            "properties": Object {
                              "city": Object {
                                "type": "string",
                              },
                              "country": Object {
                                "type": "string",
                              },
                              "street": Object {
                                "type": "string",
                              },
                              "zipCode": Object {
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "email": Object {
                            "format": "email",
                            "type": "string",
                          },
                          "firstName": Object {
                            "type": "string",
                          },
                          "lastName": Object {
                            "type": "string",
                          },
                          "nationality": Object {
                            "type": "string",
                          },
                        }
                      }
                      required={
                        Array [
                          "firstName",
                          "lastName",
                        ]
                      }
                    >
                      <label>
                        Traveller
                      </label>
                      <AutoField
                        isDisabled={false}
                        key="firstName"
                        name="traveller.firstName"
                      >
                        <TextField
                          isDisabled={false}
                          name="traveller.firstName"
                        >
                          <Text
                            changed={false}
                            disabled={false}
                            error={null}
                            errorMessage=""
                            field={
                              Object {
                                "type": "string",
                              }
                            }
                            fieldType={[Function]}
                            fields={Array []}
                            id="uniforms-0000-000f"
                            isDisabled={false}
                            label="First name"
                            name="traveller.firstName"
                            onChange={[Function]}
                            placeholder="First name"
                            required={true}
                            showInlineError={true}
                            value="Rachel"
                          >
                            <FormGroup
                              fieldId="uniforms-0000-000f"
                              helperTextInvalid=""
                              isValid={true}
                              label="First name"
                            >
                              <div
                                className="pf-c-form__group"
                              >
                                <label
                                  className="pf-c-form__label"
                                  htmlFor="uniforms-0000-000f"
                                >
                                  <span
                                    className="pf-c-form__label-text"
                                  >
                                    First name
                                  </span>
                                </label>
                                <ForwardRef
                                  id="uniforms-0000-000f"
                                  isDisabled={false}
                                  isValid={true}
                                  name="traveller.firstName"
                                  onChange={[Function]}
                                  placeholder="First name"
                                  required={true}
                                  type="text"
                                  value="Rachel"
                                >
                                  <TextInputBase
                                    aria-label={null}
                                    className=""
                                    id="uniforms-0000-000f"
                                    innerRef={null}
                                    isDisabled={false}
                                    isReadOnly={false}
                                    isRequired={false}
                                    isValid={true}
                                    name="traveller.firstName"
                                    onChange={[Function]}
                                    placeholder="First name"
                                    required={true}
                                    type="text"
                                    validated="default"
                                    value="Rachel"
                                  >
                                    <input
                                      aria-invalid={false}
                                      aria-label={null}
                                      className="pf-c-form-control"
                                      disabled={false}
                                      id="uniforms-0000-000f"
                                      name="traveller.firstName"
                                      onChange={[Function]}
                                      placeholder="First name"
                                      readOnly={false}
                                      required={false}
                                      type="text"
                                      value="Rachel"
                                    />
                                  </TextInputBase>
                                </ForwardRef>
                              </div>
                            </FormGroup>
                          </Text>
                        </TextField>
                      </AutoField>
                      <AutoField
                        isDisabled={false}
                        key="lastName"
                        name="traveller.lastName"
                      >
                        <TextField
                          isDisabled={false}
                          name="traveller.lastName"
                        >
                          <Text
                            changed={false}
                            disabled={false}
                            error={null}
                            errorMessage=""
                            field={
                              Object {
                                "type": "string",
                              }
                            }
                            fieldType={[Function]}
                            fields={Array []}
                            id="uniforms-0000-000h"
                            isDisabled={false}
                            label="Last name"
                            name="traveller.lastName"
                            onChange={[Function]}
                            placeholder="Last name"
                            required={true}
                            showInlineError={true}
                            value="White"
                          >
                            <FormGroup
                              fieldId="uniforms-0000-000h"
                              helperTextInvalid=""
                              isValid={true}
                              label="Last name"
                            >
                              <div
                                className="pf-c-form__group"
                              >
                                <label
                                  className="pf-c-form__label"
                                  htmlFor="uniforms-0000-000h"
                                >
                                  <span
                                    className="pf-c-form__label-text"
                                  >
                                    Last name
                                  </span>
                                </label>
                                <ForwardRef
                                  id="uniforms-0000-000h"
                                  isDisabled={false}
                                  isValid={true}
                                  name="traveller.lastName"
                                  onChange={[Function]}
                                  placeholder="Last name"
                                  required={true}
                                  type="text"
                                  value="White"
                                >
                                  <TextInputBase
                                    aria-label={null}
                                    className=""
                                    id="uniforms-0000-000h"
                                    innerRef={null}
                                    isDisabled={false}
                                    isReadOnly={false}
                                    isRequired={false}
                                    isValid={true}
                                    name="traveller.lastName"
                                    onChange={[Function]}
                                    placeholder="Last name"
                                    required={true}
                                    type="text"
                                    validated="default"
                                    value="White"
                                  >
                                    <input
                                      aria-invalid={false}
                                      aria-label={null}
                                      className="pf-c-form-control"
                                      disabled={false}
                                      id="uniforms-0000-000h"
                                      name="traveller.lastName"
                                      onChange={[Function]}
                                      placeholder="Last name"
                                      readOnly={false}
                                      required={false}
                                      type="text"
                                      value="White"
                                    />
                                  </TextInputBase>
                                </ForwardRef>
                              </div>
                            </FormGroup>
                          </Text>
                        </TextField>
                      </AutoField>
                      <AutoField
                        isDisabled={false}
                        key="email"
                        name="traveller.email"
                      >
                        <TextField
                          isDisabled={false}
                          name="traveller.email"
                        >
                          <Text
                            changed={false}
                            disabled={false}
                            error={null}
                            errorMessage=""
                            field={
                              Object {
                                "format": "email",
                                "type": "string",
                              }
                            }
                            fieldType={[Function]}
                            fields={Array []}
                            id="uniforms-0000-000j"
                            isDisabled={false}
                            label="Email"
                            name="traveller.email"
                            onChange={[Function]}
                            placeholder="Email"
                            required={false}
                            showInlineError={true}
                            value="rwhite@gorle.com"
                          >
                            <FormGroup
                              fieldId="uniforms-0000-000j"
                              helperTextInvalid=""
                              isValid={true}
                              label="Email"
                            >
                              <div
                                className="pf-c-form__group"
                              >
                                <label
                                  className="pf-c-form__label"
                                  htmlFor="uniforms-0000-000j"
                                >
                                  <span
                                    className="pf-c-form__label-text"
                                  >
                                    Email
                                  </span>
                                </label>
                                <ForwardRef
                                  id="uniforms-0000-000j"
                                  isDisabled={false}
                                  isValid={true}
                                  name="traveller.email"
                                  onChange={[Function]}
                                  placeholder="Email"
                                  required={false}
                                  type="text"
                                  value="rwhite@gorle.com"
                                >
                                  <TextInputBase
                                    aria-label={null}
                                    className=""
                                    id="uniforms-0000-000j"
                                    innerRef={null}
                                    isDisabled={false}
                                    isReadOnly={false}
                                    isRequired={false}
                                    isValid={true}
                                    name="traveller.email"
                                    onChange={[Function]}
                                    placeholder="Email"
                                    required={false}
                                    type="text"
                                    validated="default"
                                    value="rwhite@gorle.com"
                                  >
                                    <input
                                      aria-invalid={false}
                                      aria-label={null}
                                      className="pf-c-form-control"
                                      disabled={false}
                                      id="uniforms-0000-000j"
                                      name="traveller.email"
                                      onChange={[Function]}
                                      placeholder="Email"
                                      readOnly={false}
                                      required={false}
                                      type="text"
                                      value="rwhite@gorle.com"
                                    />
                                  </TextInputBase>
                                </ForwardRef>
                              </div>
                            </FormGroup>
                          </Text>
                        </TextField>
                      </AutoField>
                      <AutoField
                        isDisabled={false}
                        key="nationality"
                        name="traveller.nationality"
                      >
                        <TextField
                          isDisabled={false}
                          name="traveller.nationality"
                        >
                          <Text
                            changed={false}
                            disabled={false}
                            error={null}
                            errorMessage=""
                            field={
                              Object {
                                "type": "string",
                              }
                            }
                            fieldType={[Function]}
                            fields={Array []}
                            id="uniforms-0000-000l"
                            isDisabled={false}
                            label="Nationality"
                            name="traveller.nationality"
                            onChange={[Function]}
                            placeholder="Nationality"
                            required={false}
                            showInlineError={true}
                            value="Polish"
                          >
                            <FormGroup
                              fieldId="uniforms-0000-000l"
                              helperTextInvalid=""
                              isValid={true}
                              label="Nationality"
                            >
                              <div
                                className="pf-c-form__group"
                              >
                                <label
                                  className="pf-c-form__label"
                                  htmlFor="uniforms-0000-000l"
                                >
                                  <span
                                    className="pf-c-form__label-text"
                                  >
                                    Nationality
                                  </span>
                                </label>
                                <ForwardRef
                                  id="uniforms-0000-000l"
                                  isDisabled={false}
                                  isValid={true}
                                  name="traveller.nationality"
                                  onChange={[Function]}
                                  placeholder="Nationality"
                                  required={false}
                                  type="text"
                                  value="Polish"
                                >
                                  <TextInputBase
                                    aria-label={null}
                                    className=""
                                    id="uniforms-0000-000l"
                                    innerRef={null}
                                    isDisabled={false}
                                    isReadOnly={false}
                                    isRequired={false}
                                    isValid={true}
                                    name="traveller.nationality"
                                    onChange={[Function]}
                                    placeholder="Nationality"
                                    required={false}
                                    type="text"
                                    validated="default"
                                    value="Polish"
                                  >
                                    <input
                                      aria-invalid={false}
                                      aria-label={null}
                                      className="pf-c-form-control"
                                      disabled={false}
                                      id="uniforms-0000-000l"
                                      name="traveller.nationality"
                                      onChange={[Function]}
                                      placeholder="Nationality"
                                      readOnly={false}
                                      required={false}
                                      type="text"
                                      value="Polish"
                                    />
                                  </TextInputBase>
                                </ForwardRef>
                              </div>
                            </FormGroup>
                          </Text>
                        </TextField>
                      </AutoField>
                      <AutoField
                        isDisabled={false}
                        key="address"
                        name="traveller.address"
                      >
                        <NestField
                          isDisabled={false}
                          name="traveller.address"
                        >
                          <Nest
                            changed={false}
                            disabled={false}
                            error={null}
                            errorMessage=""
                            field={
                              Object {
                                "properties": Object {
                                  "city": Object {
                                    "type": "string",
                                  },
                                  "country": Object {
                                    "type": "string",
                                  },
                                  "street": Object {
                                    "type": "string",
                                  },
                                  "zipCode": Object {
                                    "type": "string",
                                  },
                                },
                                "type": "object",
                              }
                            }
                            fieldType={[Function]}
                            fields={
                              Array [
                                "street",
                                "city",
                                "zipCode",
                                "country",
                              ]
                            }
                            id="uniforms-0000-000n"
                            isDisabled={false}
                            label="Address"
                            name="traveller.address"
                            onChange={[Function]}
                            placeholder="Address"
                            properties={
                              Object {
                                "city": Object {
                                  "type": "string",
                                },
                                "country": Object {
                                  "type": "string",
                                },
                                "street": Object {
                                  "type": "string",
                                },
                                "zipCode": Object {
                                  "type": "string",
                                },
                              }
                            }
                            required={false}
                            showInlineError={true}
                            value={
                              Object {
                                "city": "Zerf",
                                "country": "Poland",
                                "street": "Cabalone",
                                "zipCode": "765756",
                              }
                            }
                          >
                            <div
                              id="uniforms-0000-000n"
                              properties={
                                Object {
                                  "city": Object {
                                    "type": "string",
                                  },
                                  "country": Object {
                                    "type": "string",
                                  },
                                  "street": Object {
                                    "type": "string",
                                  },
                                  "zipCode": Object {
                                    "type": "string",
                                  },
                                }
                              }
                              required={false}
                            >
                              <label>
                                Address
                              </label>
                              <AutoField
                                isDisabled={false}
                                key="street"
                                name="traveller.address.street"
                              >
                                <TextField
                                  isDisabled={false}
                                  name="traveller.address.street"
                                >
                                  <Text
                                    changed={false}
                                    disabled={false}
                                    error={null}
                                    errorMessage=""
                                    field={
                                      Object {
                                        "type": "string",
                                      }
                                    }
                                    fieldType={[Function]}
                                    fields={Array []}
                                    id="uniforms-0000-000p"
                                    isDisabled={false}
                                    label="Street"
                                    name="traveller.address.street"
                                    onChange={[Function]}
                                    placeholder="Street"
                                    required={false}
                                    showInlineError={true}
                                    value="Cabalone"
                                  >
                                    <FormGroup
                                      fieldId="uniforms-0000-000p"
                                      helperTextInvalid=""
                                      isValid={true}
                                      label="Street"
                                    >
                                      <div
                                        className="pf-c-form__group"
                                      >
                                        <label
                                          className="pf-c-form__label"
                                          htmlFor="uniforms-0000-000p"
                                        >
                                          <span
                                            className="pf-c-form__label-text"
                                          >
                                            Street
                                          </span>
                                        </label>
                                        <ForwardRef
                                          id="uniforms-0000-000p"
                                          isDisabled={false}
                                          isValid={true}
                                          name="traveller.address.street"
                                          onChange={[Function]}
                                          placeholder="Street"
                                          required={false}
                                          type="text"
                                          value="Cabalone"
                                        >
                                          <TextInputBase
                                            aria-label={null}
                                            className=""
                                            id="uniforms-0000-000p"
                                            innerRef={null}
                                            isDisabled={false}
                                            isReadOnly={false}
                                            isRequired={false}
                                            isValid={true}
                                            name="traveller.address.street"
                                            onChange={[Function]}
                                            placeholder="Street"
                                            required={false}
                                            type="text"
                                            validated="default"
                                            value="Cabalone"
                                          >
                                            <input
                                              aria-invalid={false}
                                              aria-label={null}
                                              className="pf-c-form-control"
                                              disabled={false}
                                              id="uniforms-0000-000p"
                                              name="traveller.address.street"
                                              onChange={[Function]}
                                              placeholder="Street"
                                              readOnly={false}
                                              required={false}
                                              type="text"
                                              value="Cabalone"
                                            />
                                          </TextInputBase>
                                        </ForwardRef>
                                      </div>
                                    </FormGroup>
                                  </Text>
                                </TextField>
                              </AutoField>
                              <AutoField
                                isDisabled={false}
                                key="city"
                                name="traveller.address.city"
                              >
                                <TextField
                                  isDisabled={false}
                                  name="traveller.address.city"
                                >
                                  <Text
                                    changed={false}
                                    disabled={false}
                                    error={null}
                                    errorMessage=""
                                    field={
                                      Object {
                                        "type": "string",
                                      }
                                    }
                                    fieldType={[Function]}
                                    fields={Array []}
                                    id="uniforms-0000-000r"
                                    isDisabled={false}
                                    label="City"
                                    name="traveller.address.city"
                                    onChange={[Function]}
                                    placeholder="City"
                                    required={false}
                                    showInlineError={true}
                                    value="Zerf"
                                  >
                                    <FormGroup
                                      fieldId="uniforms-0000-000r"
                                      helperTextInvalid=""
                                      isValid={true}
                                      label="City"
                                    >
                                      <div
                                        className="pf-c-form__group"
                                      >
                                        <label
                                          className="pf-c-form__label"
                                          htmlFor="uniforms-0000-000r"
                                        >
                                          <span
                                            className="pf-c-form__label-text"
                                          >
                                            City
                                          </span>
                                        </label>
                                        <ForwardRef
                                          id="uniforms-0000-000r"
                                          isDisabled={false}
                                          isValid={true}
                                          name="traveller.address.city"
                                          onChange={[Function]}
                                          placeholder="City"
                                          required={false}
                                          type="text"
                                          value="Zerf"
                                        >
                                          <TextInputBase
                                            aria-label={null}
                                            className=""
                                            id="uniforms-0000-000r"
                                            innerRef={null}
                                            isDisabled={false}
                                            isReadOnly={false}
                                            isRequired={false}
                                            isValid={true}
                                            name="traveller.address.city"
                                            onChange={[Function]}
                                            placeholder="City"
                                            required={false}
                                            type="text"
                                            validated="default"
                                            value="Zerf"
                                          >
                                            <input
                                              aria-invalid={false}
                                              aria-label={null}
                                              className="pf-c-form-control"
                                              disabled={false}
                                              id="uniforms-0000-000r"
                                              name="traveller.address.city"
                                              onChange={[Function]}
                                              placeholder="City"
                                              readOnly={false}
                                              required={false}
                                              type="text"
                                              value="Zerf"
                                            />
                                          </TextInputBase>
                                        </ForwardRef>
                                      </div>
                                    </FormGroup>
                                  </Text>
                                </TextField>
                              </AutoField>
                              <AutoField
                                isDisabled={false}
                                key="zipCode"
                                name="traveller.address.zipCode"
                              >
                                <TextField
                                  isDisabled={false}
                                  name="traveller.address.zipCode"
                                >
                                  <Text
                                    changed={false}
                                    disabled={false}
                                    error={null}
                                    errorMessage=""
                                    field={
                                      Object {
                                        "type": "string",
                                      }
                                    }
                                    fieldType={[Function]}
                                    fields={Array []}
                                    id="uniforms-0000-000t"
                                    isDisabled={false}
                                    label="Zip code"
                                    name="traveller.address.zipCode"
                                    onChange={[Function]}
                                    placeholder="Zip code"
                                    required={false}
                                    showInlineError={true}
                                    value="765756"
                                  >
                                    <FormGroup
                                      fieldId="uniforms-0000-000t"
                                      helperTextInvalid=""
                                      isValid={true}
                                      label="Zip code"
                                    >
                                      <div
                                        className="pf-c-form__group"
                                      >
                                        <label
                                          className="pf-c-form__label"
                                          htmlFor="uniforms-0000-000t"
                                        >
                                          <span
                                            className="pf-c-form__label-text"
                                          >
                                            Zip code
                                          </span>
                                        </label>
                                        <ForwardRef
                                          id="uniforms-0000-000t"
                                          isDisabled={false}
                                          isValid={true}
                                          name="traveller.address.zipCode"
                                          onChange={[Function]}
                                          placeholder="Zip code"
                                          required={false}
                                          type="text"
                                          value="765756"
                                        >
                                          <TextInputBase
                                            aria-label={null}
                                            className=""
                                            id="uniforms-0000-000t"
                                            innerRef={null}
                                            isDisabled={false}
                                            isReadOnly={false}
                                            isRequired={false}
                                            isValid={true}
                                            name="traveller.address.zipCode"
                                            onChange={[Function]}
                                            placeholder="Zip code"
                                            required={false}
                                            type="text"
                                            validated="default"
                                            value="765756"
                                          >
                                            <input
                                              aria-invalid={false}
                                              aria-label={null}
                                              className="pf-c-form-control"
                                              disabled={false}
                                              id="uniforms-0000-000t"
                                              name="traveller.address.zipCode"
                                              onChange={[Function]}
                                              placeholder="Zip code"
                                              readOnly={false}
                                              required={false}
                                              type="text"
                                              value="765756"
                                            />
                                          </TextInputBase>
                                        </ForwardRef>
                                      </div>
                                    </FormGroup>
                                  </Text>
                                </TextField>
                              </AutoField>
                              <AutoField
                                isDisabled={false}
                                key="country"
                                name="traveller.address.country"
                              >
                                <TextField
                                  isDisabled={false}
                                  name="traveller.address.country"
                                >
                                  <Text
                                    changed={false}
                                    disabled={false}
                                    error={null}
                                    errorMessage=""
                                    field={
                                      Object {
                                        "type": "string",
                                      }
                                    }
                                    fieldType={[Function]}
                                    fields={Array []}
                                    id="uniforms-0000-000v"
                                    isDisabled={false}
                                    label="Country"
                                    name="traveller.address.country"
                                    onChange={[Function]}
                                    placeholder="Country"
                                    required={false}
                                    showInlineError={true}
                                    value="Poland"
                                  >
                                    <FormGroup
                                      fieldId="uniforms-0000-000v"
                                      helperTextInvalid=""
                                      isValid={true}
                                      label="Country"
                                    >
                                      <div
                                        className="pf-c-form__group"
                                      >
                                        <label
                                          className="pf-c-form__label"
                                          htmlFor="uniforms-0000-000v"
                                        >
                                          <span
                                            className="pf-c-form__label-text"
                                          >
                                            Country
                                          </span>
                                        </label>
                                        <ForwardRef
                                          id="uniforms-0000-000v"
                                          isDisabled={false}
                                          isValid={true}
                                          name="traveller.address.country"
                                          onChange={[Function]}
                                          placeholder="Country"
                                          required={false}
                                          type="text"
                                          value="Poland"
                                        >
                                          <TextInputBase
                                            aria-label={null}
                                            className=""
                                            id="uniforms-0000-000v"
                                            innerRef={null}
                                            isDisabled={false}
                                            isReadOnly={false}
                                            isRequired={false}
                                            isValid={true}
                                            name="traveller.address.country"
                                            onChange={[Function]}
                                            placeholder="Country"
                                            required={false}
                                            type="text"
                                            validated="default"
                                            value="Poland"
                                          >
                                            <input
                                              aria-invalid={false}
                                              aria-label={null}
                                              className="pf-c-form-control"
                                              disabled={false}
                                              id="uniforms-0000-000v"
                                              name="traveller.address.country"
                                              onChange={[Function]}
                                              placeholder="Country"
                                              readOnly={false}
                                              required={false}
                                              type="text"
                                              value="Poland"
                                            />
                                          </TextInputBase>
                                        </ForwardRef>
                                      </div>
                                    </FormGroup>
                                  </Text>
                                </TextField>
                              </AutoField>
                            </div>
                          </Nest>
                        </NestField>
                      </AutoField>
                    </div>
                  </Nest>
                </NestField>
              </AutoField>
              <AutoField
                key="visaApplication"
                name="visaApplication"
              >
                <NestField
                  name="visaApplication"
                >
                  <Nest
                    changed={false}
                    disabled={false}
                    error={null}
                    errorMessage=""
                    field={
                      Object {
                        "properties": Object {
                          "city": Object {
                            "type": "string",
                          },
                          "country": Object {
                            "type": "string",
                          },
                          "duration": Object {
                            "type": "integer",
                          },
                          "firstName": Object {
                            "type": "string",
                          },
                          "lastName": Object {
                            "type": "string",
                          },
                          "nationality": Object {
                            "type": "string",
                          },
                          "passportNumber": Object {
                            "type": "string",
                          },
                        },
                        "type": "object",
                      }
                    }
                    fieldType={[Function]}
                    fields={
                      Array [
                        "firstName",
                        "lastName",
                        "city",
                        "country",
                        "duration",
                        "passportNumber",
                        "nationality",
                      ]
                    }
                    id="uniforms-0000-000x"
                    label="Visa application"
                    name="visaApplication"
                    onChange={[Function]}
                    placeholder="Visa application"
                    properties={
                      Object {
                        "city": Object {
                          "type": "string",
                        },
                        "country": Object {
                          "type": "string",
                        },
                        "duration": Object {
                          "type": "integer",
                        },
                        "firstName": Object {
                          "type": "string",
                        },
                        "lastName": Object {
                          "type": "string",
                        },
                        "nationality": Object {
                          "type": "string",
                        },
                        "passportNumber": Object {
                          "type": "string",
                        },
                      }
                    }
                    required={false}
                    showInlineError={true}
                    value={Object {}}
                  >
                    <div
                      id="uniforms-0000-000x"
                      properties={
                        Object {
                          "city": Object {
                            "type": "string",
                          },
                          "country": Object {
                            "type": "string",
                          },
                          "duration": Object {
                            "type": "integer",
                          },
                          "firstName": Object {
                            "type": "string",
                          },
                          "lastName": Object {
                            "type": "string",
                          },
                          "nationality": Object {
                            "type": "string",
                          },
                          "passportNumber": Object {
                            "type": "string",
                          },
                        }
                      }
                      required={false}
                    >
                      <label>
                        Visa application
                      </label>
                      <AutoField
                        isDisabled={false}
                        key="firstName"
                        name="visaApplication.firstName"
                      >
                        <TextField
                          isDisabled={false}
                          name="visaApplication.firstName"
                        >
                          <Text
                            changed={false}
                            disabled={false}
                            error={null}
                            errorMessage=""
                            field={
                              Object {
                                "type": "string",
                              }
                            }
                            fieldType={[Function]}
                            fields={Array []}
                            id="uniforms-0000-000z"
                            isDisabled={false}
                            label="First name"
                            name="visaApplication.firstName"
                            onChange={[Function]}
                            placeholder="First name"
                            required={false}
                            showInlineError={true}
                          >
                            <FormGroup
                              fieldId="uniforms-0000-000z"
                              helperTextInvalid=""
                              isValid={true}
                              label="First name"
                            >
                              <div
                                className="pf-c-form__group"
                              >
                                <label
                                  className="pf-c-form__label"
                                  htmlFor="uniforms-0000-000z"
                                >
                                  <span
                                    className="pf-c-form__label-text"
                                  >
                                    First name
                                  </span>
                                </label>
                                <ForwardRef
                                  id="uniforms-0000-000z"
                                  isDisabled={false}
                                  isValid={true}
                                  name="visaApplication.firstName"
                                  onChange={[Function]}
                                  placeholder="First name"
                                  required={false}
                                  type="text"
                                  value=""
                                >
                                  <TextInputBase
                                    aria-label={null}
                                    className=""
                                    id="uniforms-0000-000z"
                                    innerRef={null}
                                    isDisabled={false}
                                    isReadOnly={false}
                                    isRequired={false}
                                    isValid={true}
                                    name="visaApplication.firstName"
                                    onChange={[Function]}
                                    placeholder="First name"
                                    required={false}
                                    type="text"
                                    validated="default"
                                    value=""
                                  >
                                    <input
                                      aria-invalid={false}
                                      aria-label={null}
                                      className="pf-c-form-control"
                                      disabled={false}
                                      id="uniforms-0000-000z"
                                      name="visaApplication.firstName"
                                      onChange={[Function]}
                                      placeholder="First name"
                                      readOnly={false}
                                      required={false}
                                      type="text"
                                      value=""
                                    />
                                  </TextInputBase>
                                </ForwardRef>
                              </div>
                            </FormGroup>
                          </Text>
                        </TextField>
                      </AutoField>
                      <AutoField
                        isDisabled={false}
                        key="lastName"
                        name="visaApplication.lastName"
                      >
                        <TextField
                          isDisabled={false}
                          name="visaApplication.lastName"
                        >
                          <Text
                            changed={false}
                            disabled={false}
                            error={null}
                            errorMessage=""
                            field={
                              Object {
                                "type": "string",
                              }
                            }
                            fieldType={[Function]}
                            fields={Array []}
                            id="uniforms-0000-0011"
                            isDisabled={false}
                            label="Last name"
                            name="visaApplication.lastName"
                            onChange={[Function]}
                            placeholder="Last name"
                            required={false}
                            showInlineError={true}
                          >
                            <FormGroup
                              fieldId="uniforms-0000-0011"
                              helperTextInvalid=""
                              isValid={true}
                              label="Last name"
                            >
                              <div
                                className="pf-c-form__group"
                              >
                                <label
                                  className="pf-c-form__label"
                                  htmlFor="uniforms-0000-0011"
                                >
                                  <span
                                    className="pf-c-form__label-text"
                                  >
                                    Last name
                                  </span>
                                </label>
                                <ForwardRef
                                  id="uniforms-0000-0011"
                                  isDisabled={false}
                                  isValid={true}
                                  name="visaApplication.lastName"
                                  onChange={[Function]}
                                  placeholder="Last name"
                                  required={false}
                                  type="text"
                                  value=""
                                >
                                  <TextInputBase
                                    aria-label={null}
                                    className=""
                                    id="uniforms-0000-0011"
                                    innerRef={null}
                                    isDisabled={false}
                                    isReadOnly={false}
                                    isRequired={false}
                                    isValid={true}
                                    name="visaApplication.lastName"
                                    onChange={[Function]}
                                    placeholder="Last name"
                                    required={false}
                                    type="text"
                                    validated="default"
                                    value=""
                                  >
                                    <input
                                      aria-invalid={false}
                                      aria-label={null}
                                      className="pf-c-form-control"
                                      disabled={false}
                                      id="uniforms-0000-0011"
                                      name="visaApplication.lastName"
                                      onChange={[Function]}
                                      placeholder="Last name"
                                      readOnly={false}
                                      required={false}
                                      type="text"
                                      value=""
                                    />
                                  </TextInputBase>
                                </ForwardRef>
                              </div>
                            </FormGroup>
                          </Text>
                        </TextField>
                      </AutoField>
                      <AutoField
                        isDisabled={false}
                        key="city"
                        name="visaApplication.city"
                      >
                        <TextField
                          isDisabled={false}
                          name="visaApplication.city"
                        >
                          <Text
                            changed={false}
                            disabled={false}
                            error={null}
                            errorMessage=""
                            field={
                              Object {
                                "type": "string",
                              }
                            }
                            fieldType={[Function]}
                            fields={Array []}
                            id="uniforms-0000-0013"
                            isDisabled={false}
                            label="City"
                            name="visaApplication.city"
                            onChange={[Function]}
                            placeholder="City"
                            required={false}
                            showInlineError={true}
                          >
                            <FormGroup
                              fieldId="uniforms-0000-0013"
                              helperTextInvalid=""
                              isValid={true}
                              label="City"
                            >
                              <div
                                className="pf-c-form__group"
                              >
                                <label
                                  className="pf-c-form__label"
                                  htmlFor="uniforms-0000-0013"
                                >
                                  <span
                                    className="pf-c-form__label-text"
                                  >
                                    City
                                  </span>
                                </label>
                                <ForwardRef
                                  id="uniforms-0000-0013"
                                  isDisabled={false}
                                  isValid={true}
                                  name="visaApplication.city"
                                  onChange={[Function]}
                                  placeholder="City"
                                  required={false}
                                  type="text"
                                  value=""
                                >
                                  <TextInputBase
                                    aria-label={null}
                                    className=""
                                    id="uniforms-0000-0013"
                                    innerRef={null}
                                    isDisabled={false}
                                    isReadOnly={false}
                                    isRequired={false}
                                    isValid={true}
                                    name="visaApplication.city"
                                    onChange={[Function]}
                                    placeholder="City"
                                    required={false}
                                    type="text"
                                    validated="default"
                                    value=""
                                  >
                                    <input
                                      aria-invalid={false}
                                      aria-label={null}
                                      className="pf-c-form-control"
                                      disabled={false}
                                      id="uniforms-0000-0013"
                                      name="visaApplication.city"
                                      onChange={[Function]}
                                      placeholder="City"
                                      readOnly={false}
                                      required={false}
                                      type="text"
                                      value=""
                                    />
                                  </TextInputBase>
                                </ForwardRef>
                              </div>
                            </FormGroup>
                          </Text>
                        </TextField>
                      </AutoField>
                      <AutoField
                        isDisabled={false}
                        key="country"
                        name="visaApplication.country"
                      >
                        <TextField
                          isDisabled={false}
                          name="visaApplication.country"
                        >
                          <Text
                            changed={false}
                            disabled={false}
                            error={null}
                            errorMessage=""
                            field={
                              Object {
                                "type": "string",
                              }
                            }
                            fieldType={[Function]}
                            fields={Array []}
                            id="uniforms-0000-0015"
                            isDisabled={false}
                            label="Country"
                            name="visaApplication.country"
                            onChange={[Function]}
                            placeholder="Country"
                            required={false}
                            showInlineError={true}
                          >
                            <FormGroup
                              fieldId="uniforms-0000-0015"
                              helperTextInvalid=""
                              isValid={true}
                              label="Country"
                            >
                              <div
                                className="pf-c-form__group"
                              >
                                <label
                                  className="pf-c-form__label"
                                  htmlFor="uniforms-0000-0015"
                                >
                                  <span
                                    className="pf-c-form__label-text"
                                  >
                                    Country
                                  </span>
                                </label>
                                <ForwardRef
                                  id="uniforms-0000-0015"
                                  isDisabled={false}
                                  isValid={true}
                                  name="visaApplication.country"
                                  onChange={[Function]}
                                  placeholder="Country"
                                  required={false}
                                  type="text"
                                  value=""
                                >
                                  <TextInputBase
                                    aria-label={null}
                                    className=""
                                    id="uniforms-0000-0015"
                                    innerRef={null}
                                    isDisabled={false}
                                    isReadOnly={false}
                                    isRequired={false}
                                    isValid={true}
                                    name="visaApplication.country"
                                    onChange={[Function]}
                                    placeholder="Country"
                                    required={false}
                                    type="text"
                                    validated="default"
                                    value=""
                                  >
                                    <input
                                      aria-invalid={false}
                                      aria-label={null}
                                      className="pf-c-form-control"
                                      disabled={false}
                                      id="uniforms-0000-0015"
                                      name="visaApplication.country"
                                      onChange={[Function]}
                                      placeholder="Country"
                                      readOnly={false}
                                      required={false}
                                      type="text"
                                      value=""
                                    />
                                  </TextInputBase>
                                </ForwardRef>
                              </div>
                            </FormGroup>
                          </Text>
                        </TextField>
                      </AutoField>
                      <AutoField
                        isDisabled={false}
                        key="duration"
                        name="visaApplication.duration"
                      >
                        <NumField
                          isDisabled={false}
                          name="visaApplication.duration"
                        >
                          <Num
                            changed={false}
                            disabled={false}
                            error={null}
                            errorMessage=""
                            field={
                              Object {
                                "type": "integer",
                              }
                            }
                            fieldType={[Function]}
                            fields={Array []}
                            id="uniforms-0000-0017"
                            isDisabled={false}
                            label="Duration"
                            name="visaApplication.duration"
                            onChange={[Function]}
                            placeholder="Duration"
                            required={false}
                            showInlineError={true}
                          >
                            <FormGroup
                              fieldId="uniforms-0000-0017"
                              helperTextInvalid=""
                              isValid={true}
                              label="Duration"
                            >
                              <div
                                className="pf-c-form__group"
                              >
                                <label
                                  className="pf-c-form__label"
                                  htmlFor="uniforms-0000-0017"
                                >
                                  <span
                                    className="pf-c-form__label-text"
                                  >
                                    Duration
                                  </span>
                                </label>
                                <ForwardRef
                                  id="uniforms-0000-0017"
                                  isDisabled={false}
                                  name="visaApplication.duration"
                                  onChange={[Function]}
                                  placeholder="Duration"
                                  step={1}
                                  type="number"
                                  value=""
                                >
                                  <TextInputBase
                                    aria-label={null}
                                    className=""
                                    id="uniforms-0000-0017"
                                    innerRef={null}
                                    isDisabled={false}
                                    isReadOnly={false}
                                    isRequired={false}
                                    isValid={true}
                                    name="visaApplication.duration"
                                    onChange={[Function]}
                                    placeholder="Duration"
                                    step={1}
                                    type="number"
                                    validated="default"
                                    value=""
                                  >
                                    <input
                                      aria-invalid={false}
                                      aria-label={null}
                                      className="pf-c-form-control"
                                      disabled={false}
                                      id="uniforms-0000-0017"
                                      name="visaApplication.duration"
                                      onChange={[Function]}
                                      placeholder="Duration"
                                      readOnly={false}
                                      required={false}
                                      step={1}
                                      type="number"
                                      value=""
                                    />
                                  </TextInputBase>
                                </ForwardRef>
                              </div>
                            </FormGroup>
                          </Num>
                        </NumField>
                      </AutoField>
                      <AutoField
                        isDisabled={false}
                        key="passportNumber"
                        name="visaApplication.passportNumber"
                      >
                        <TextField
                          isDisabled={false}
                          name="visaApplication.passportNumber"
                        >
                          <Text
                            changed={false}
                            disabled={false}
                            error={null}
                            errorMessage=""
                            field={
                              Object {
                                "type": "string",
                              }
                            }
                            fieldType={[Function]}
                            fields={Array []}
                            id="uniforms-0000-0019"
                            isDisabled={false}
                            label="Passport number"
                            name="visaApplication.passportNumber"
                            onChange={[Function]}
                            placeholder="Passport number"
                            required={false}
                            showInlineError={true}
                          >
                            <FormGroup
                              fieldId="uniforms-0000-0019"
                              helperTextInvalid=""
                              isValid={true}
                              label="Passport number"
                            >
                              <div
                                className="pf-c-form__group"
                              >
                                <label
                                  className="pf-c-form__label"
                                  htmlFor="uniforms-0000-0019"
                                >
                                  <span
                                    className="pf-c-form__label-text"
                                  >
                                    Passport number
                                  </span>
                                </label>
                                <ForwardRef
                                  id="uniforms-0000-0019"
                                  isDisabled={false}
                                  isValid={true}
                                  name="visaApplication.passportNumber"
                                  onChange={[Function]}
                                  placeholder="Passport number"
                                  required={false}
                                  type="text"
                                  value=""
                                >
                                  <TextInputBase
                                    aria-label={null}
                                    className=""
                                    id="uniforms-0000-0019"
                                    innerRef={null}
                                    isDisabled={false}
                                    isReadOnly={false}
                                    isRequired={false}
                                    isValid={true}
                                    name="visaApplication.passportNumber"
                                    onChange={[Function]}
                                    placeholder="Passport number"
                                    required={false}
                                    type="text"
                                    validated="default"
                                    value=""
                                  >
                                    <input
                                      aria-invalid={false}
                                      aria-label={null}
                                      className="pf-c-form-control"
                                      disabled={false}
                                      id="uniforms-0000-0019"
                                      name="visaApplication.passportNumber"
                                      onChange={[Function]}
                                      placeholder="Passport number"
                                      readOnly={false}
                                      required={false}
                                      type="text"
                                      value=""
                                    />
                                  </TextInputBase>
                                </ForwardRef>
                              </div>
                            </FormGroup>
                          </Text>
                        </TextField>
                      </AutoField>
                      <AutoField
                        isDisabled={false}
                        key="nationality"
                        name="visaApplication.nationality"
                      >
                        <TextField
                          isDisabled={false}
                          name="visaApplication.nationality"
                        >
                          <Text
                            changed={false}
                            disabled={false}
                            error={null}
                            errorMessage=""
                            field={
                              Object {
                                "type": "string",
                              }
                            }
                            fieldType={[Function]}
                            fields={Array []}
                            id="uniforms-0000-001b"
                            isDisabled={false}
                            label="Nationality"
                            name="visaApplication.nationality"
                            onChange={[Function]}
                            placeholder="Nationality"
                            required={false}
                            showInlineError={true}
                          >
                            <FormGroup
                              fieldId="uniforms-0000-001b"
                              helperTextInvalid=""
                              isValid={true}
                              label="Nationality"
                            >
                              <div
                                className="pf-c-form__group"
                              >
                                <label
                                  className="pf-c-form__label"
                                  htmlFor="uniforms-0000-001b"
                                >
                                  <span
                                    className="pf-c-form__label-text"
                                  >
                                    Nationality
                                  </span>
                                </label>
                                <ForwardRef
                                  id="uniforms-0000-001b"
                                  isDisabled={false}
                                  isValid={true}
                                  name="visaApplication.nationality"
                                  onChange={[Function]}
                                  placeholder="Nationality"
                                  required={false}
                                  type="text"
                                  value=""
                                >
                                  <TextInputBase
                                    aria-label={null}
                                    className=""
                                    id="uniforms-0000-001b"
                                    innerRef={null}
                                    isDisabled={false}
                                    isReadOnly={false}
                                    isRequired={false}
                                    isValid={true}
                                    name="visaApplication.nationality"
                                    onChange={[Function]}
                                    placeholder="Nationality"
                                    required={false}
                                    type="text"
                                    validated="default"
                                    value=""
                                  >
                                    <input
                                      aria-invalid={false}
                                      aria-label={null}
                                      className="pf-c-form-control"
                                      disabled={false}
                                      id="uniforms-0000-001b"
                                      name="visaApplication.nationality"
                                      onChange={[Function]}
                                      placeholder="Nationality"
                                      readOnly={false}
                                      required={false}
                                      type="text"
                                      value=""
                                    />
                                  </TextInputBase>
                                </ForwardRef>
                              </div>
                            </FormGroup>
                          </Text>
                        </TextField>
                      </AutoField>
                    </div>
                  </Nest>
                </NestField>
              </AutoField>
            </div>
          </AutoFields>
          <FormFooter
            actions={
              Array [
                Object {
                  "name": "Complete",
                  "onActionClick": [Function],
                  "primary": true,
                },
                Object {
                  "name": "Release",
                  "onActionClick": [Function],
                  "primary": undefined,
                },
              ]
            }
          >
            <ActionGroup>
              <div
                className="pf-c-form__group pf-m-action"
              >
                <div
                  className="pf-c-form__actions"
                >
                  <Component
                    key="submit-Complete"
                    onClick={[Function]}
                    type="submit"
                    variant="primary"
                  >
                    <ComponentWithOuia
                      component={[Function]}
                      componentProps={
                        Object {
                          "children": "Complete",
                          "onClick": [Function],
                          "type": "submit",
                          "variant": "primary",
                        }
                      }
                      consumerContext={null}
                    >
                      <Button
                        onClick={[Function]}
                        ouiaContext={
                          Object {
                            "isOuia": false,
                            "ouiaId": null,
                          }
                        }
                        type="submit"
                        variant="primary"
                      >
                        <button
                          aria-disabled={null}
                          aria-label={null}
                          className="pf-c-button pf-m-primary"
                          disabled={false}
                          onClick={[Function]}
                          tabIndex={null}
                          type="submit"
                        >
                          Complete
                        </button>
                      </Button>
                    </ComponentWithOuia>
                  </Component>
                  <Component
                    key="submit-Release"
                    onClick={[Function]}
                    type="submit"
                    variant="secondary"
                  >
                    <ComponentWithOuia
                      component={[Function]}
                      componentProps={
                        Object {
                          "children": "Release",
                          "onClick": [Function],
                          "type": "submit",
                          "variant": "secondary",
                        }
                      }
                      consumerContext={null}
                    >
                      <Button
                        onClick={[Function]}
                        ouiaContext={
                          Object {
                            "isOuia": false,
                            "ouiaId": null,
                          }
                        }
                        type="submit"
                        variant="secondary"
                      >
                        <button
                          aria-disabled={null}
                          aria-label={null}
                          className="pf-c-button pf-m-secondary"
                          disabled={false}
                          onClick={[Function]}
                          tabIndex={null}
                          type="submit"
                        >
                          Release
                        </button>
                      </Button>
                    </ComponentWithOuia>
                  </Component>
                </div>
              </div>
            </ActionGroup>
          </FormFooter>
        </form>
      </Form>
    </AutoValidatedQuickPatternflyForm>
  </FormRenderer>
</TaskForm>
`;

exports[`TaskForm Test Test rendering form with error 1`] = `
<TaskForm
  taskInfo={
    TaskInfoImpl {
      "processInstanceEndPoint": "http://localhost:8080/travels",
      "task": Object {
        "actualOwner": null,
        "adminGroups": Array [],
        "adminUsers": Array [],
        "completed": null,
        "description": null,
        "excludedUsers": Array [],
        "id": "45a73767-5da3-49bf-9c40-d533c3e77ef3",
        "inputs": "{\\"Skippable\\":\\"true\\",\\"trip\\":{\\"city\\":\\"Boston\\",\\"country\\":\\"US\\",\\"begin\\":\\"2020-02-19T23:00:00.000+01:00\\",\\"end\\":\\"2020-02-26T23:00:00.000+01:00\\",\\"visaRequired\\":true},\\"TaskName\\":\\"VisaApplication\\",\\"NodeName\\":\\"Apply for visa\\",\\"traveller\\":{\\"firstName\\":\\"Rachel\\",\\"lastName\\":\\"White\\",\\"email\\":\\"rwhite@gorle.com\\",\\"nationality\\":\\"Polish\\",\\"address\\":{\\"street\\":\\"Cabalone\\",\\"city\\":\\"Zerf\\",\\"zipCode\\":\\"765756\\",\\"country\\":\\"Poland\\"}},\\"Priority\\":\\"1\\"}",
        "lastUpdate": "2020-02-19T11:11:56.282Z",
        "name": "Apply for visa",
        "outputs": "{}",
        "potentialGroups": Array [],
        "potentialUsers": Array [],
        "priority": "1",
        "processId": "travels",
        "processInstanceId": "9ae7ce3b-d49c-4f35-b843-8ac3d22fa427",
        "referenceName": "VisaApplication",
        "rootProcessId": null,
        "rootProcessInstanceId": null,
        "started": "2020-02-19T11:11:56.282Z",
        "state": "Ready",
      },
    }
  }
>
  <KogitoEmptyState
    body="Cannot find form"
    title="No form to show"
    type={3}
  >
    <MockedComponent />
  </KogitoEmptyState>
</TaskForm>
`;
