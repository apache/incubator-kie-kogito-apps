// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Process details node trigger component tests Node trigger success tests 1`] = `
<MockedProcessDetailsErrorModal
  errorModalAction={
    Array [
      <Button
        onClick={[Function]}
        variant="primary"
      >
        OK
      </Button>,
    ]
  }
  errorModalOpen={true}
  errorString="The node Book was triggered successfully"
  handleErrorModal={[Function]}
  label="Node Trigger Error"
  title={
    <Title
      headingLevel="h1"
      size="2xl"
    >
      <InfoCircleIcon
        className="pf-u-mr-sm"
        color="var(--pf-global--info-color--100)"
        noVerticalAlign={false}
        size="sm"
      />
      <span>
        Node trigger process
      </span>
    </Title>
  }
/>
`;

exports[`Process details node trigger component tests failed to retrieve nodes 1`] = `
<MockedProcessDetailsErrorModal
  errorModalAction={
    Array [
      <Button
        onClick={[Function]}
        variant="primary"
      >
        OK
      </Button>,
    ]
  }
  errorModalOpen={true}
  errorString="Retrieval of nodes failed with error: 404 error"
  handleErrorModal={[Function]}
  label="Node Trigger Error"
  title={
    <Title
      headingLevel="h1"
      size="2xl"
    >
      <InfoCircleIcon
        className="pf-u-mr-sm"
        color="var(--pf-global--danger-color--100)"
        noVerticalAlign={false}
        size="sm"
      />
      <span>
        Node trigger Error
      </span>
    </Title>
  }
/>
`;

exports[`Process details node trigger component tests select a node test  1`] = `
<ProcessDetailsNodeTrigger
  driver={TestProcessDetailsDriver {}}
  processInstanceData={
    Object {
      "addons": Array [
        "jobs-management",
        "prometheus-monitoring",
        "process-management",
      ],
      "businessKey": "T1234",
      "childProcessInstances": Array [],
      "end": 2019-10-22T05:40:44.089Z,
      "endpoint": "http://localhost:4000",
      "error": Object {
        "message": "Something went wrong",
        "nodeDefinitionId": "_2140F05A-364F-40B3-BB7B-B12927065DF8",
      },
      "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
      "lastUpdate": 2019-10-22T05:40:44.089Z,
      "milestones": Array [],
      "nodes": Array [
        Object {
          "definitionId": "EndEvent_1",
          "enter": 2019-10-22T03:37:38.586Z,
          "exit": 2019-10-22T03:37:38.586Z,
          "id": "870bdda0-be04-4e59-bb0b-f9b665eaacc9",
          "name": "End Event 1",
          "nodeId": "1",
          "type": "EndNode",
        },
        Object {
          "definitionId": "UserTask_2",
          "enter": 2019-10-22T03:37:30.807Z,
          "exit": 2019-10-22T03:37:38.586Z,
          "id": "6b4a4fe9-4aab-4e8c-bb79-27b8b6b88d1f",
          "name": "Confirm travel",
          "nodeId": "2",
          "type": "HumanTaskNode",
        },
      ],
      "parentProcessInstance": null,
      "parentProcessInstanceId": null,
      "processId": "travels",
      "processName": "travels",
      "roles": Array [],
      "rootProcessInstanceId": null,
      "serviceUrl": "http://localhost:4000",
      "start": 2019-10-22T03:40:44.089Z,
      "state": "ERROR",
      "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"US\\",\\"street\\":\\"Bangalore\\",\\"zipCode\\":\\"560093\\"},\\"email\\":\\"ajaganat@redhat.com\\",\\"firstName\\":\\"Ajay\\",\\"lastName\\":\\"Jaganathan\\",\\"nationality\\":\\"US\\"}}",
    }
  }
>
  <MockedProcessDetailsErrorModal
    errorModalAction={
      Array [
        <Button
          onClick={[Function]}
          variant="primary"
        >
          OK
        </Button>,
      ]
    }
    errorModalOpen={false}
    errorString=""
    handleErrorModal={[Function]}
    label="Node Trigger Error"
    title={
      <Title
        headingLevel="h1"
        size="2xl"
      >
        <span>
          
        </span>
      </Title>
    }
  />
  <Card
    data-ouia-component-type="node-trigger"
    data-ouia-safe={true}
  >
    <article
      className="pf-c-card"
      data-ouia-component-id="OUIA-Generated-Card-2"
      data-ouia-component-type="PF4/Card"
      data-ouia-safe={true}
      id=""
    >
      <CardHeader>
        <div
          className="pf-c-card__header"
        >
          <Title
            headingLevel="h3"
            size="xl"
          >
            <h3
              className="pf-c-title pf-m-xl"
            >
              Node Trigger
            </h3>
          </Title>
        </div>
      </CardHeader>
      <CardHeader>
        <div
          className="pf-c-card__header"
        >
          <div>
            Select a node from the process nodes list and click Trigger to launch it manually.
          </div>
        </div>
      </CardHeader>
      <CardBody>
        <div
          className="pf-c-card__body"
        >
          <div>
            <Dropdown
              direction="up"
              dropdownItems={
                Array [
                  <DropdownItem
                    id="Send visa application"
                  >
                    Send visa application
                  </DropdownItem>,
                  <DropdownItem
                    id="Book"
                  >
                    Book
                  </DropdownItem>,
                  <DropdownItem
                    id="visasrejected"
                  >
                    visasrejected
                  </DropdownItem>,
                ]
              }
              isOpen={false}
              onSelect={[Function]}
              toggle={
                <DropdownToggle
                  id="toggle-id"
                  onToggle={[Function]}
                  toggleIndicator={[Function]}
                >
                  Book
                </DropdownToggle>
              }
            >
              <DropdownWithContext
                autoFocus={true}
                className=""
                direction="up"
                dropdownItems={
                  Array [
                    <DropdownItem
                      id="Send visa application"
                    >
                      Send visa application
                    </DropdownItem>,
                    <DropdownItem
                      id="Book"
                    >
                      Book
                    </DropdownItem>,
                    <DropdownItem
                      id="visasrejected"
                    >
                      visasrejected
                    </DropdownItem>,
                  ]
                }
                isGrouped={false}
                isOpen={false}
                isPlain={false}
                menuAppendTo="inline"
                onSelect={[Function]}
                position="left"
                toggle={
                  <DropdownToggle
                    id="toggle-id"
                    onToggle={[Function]}
                    toggleIndicator={[Function]}
                  >
                    Book
                  </DropdownToggle>
                }
              >
                <div
                  className="pf-c-dropdown pf-m-top"
                  data-ouia-component-id="OUIA-Generated-Dropdown-2"
                  data-ouia-component-type="PF4/Dropdown"
                  data-ouia-safe={true}
                >
                  <DropdownToggle
                    aria-haspopup={true}
                    getMenuRef={[Function]}
                    id="toggle-id"
                    isOpen={false}
                    isPlain={false}
                    key=".0"
                    onEnter={[Function]}
                    onToggle={[Function]}
                    parentRef={
                      Object {
                        "current": <div
                          class="pf-c-dropdown pf-m-top"
                          data-ouia-component-id="OUIA-Generated-Dropdown-2"
                          data-ouia-component-type="PF4/Dropdown"
                          data-ouia-safe="true"
                        >
                          <button
                            aria-expanded="false"
                            aria-haspopup="true"
                            class="pf-c-dropdown__toggle"
                            data-ouia-component-id="OUIA-Generated-DropdownToggle-2"
                            data-ouia-component-type="PF4/DropdownToggle"
                            data-ouia-safe="true"
                            id="toggle-id"
                            type="button"
                          >
                            <span
                              class="pf-c-dropdown__toggle-text"
                            >
                              Book
                            </span>
                            <span
                              class="pf-c-dropdown__toggle-icon"
                            >
                              <svg
                                aria-hidden="true"
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style="vertical-align: -0.125em;"
                                viewBox="0 0 320 512"
                                width="1em"
                              >
                                <path
                                  d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                />
                              </svg>
                            </span>
                          </button>
                        </div>,
                      }
                    }
                    toggleIndicator={[Function]}
                  >
                    <Toggle
                      aria-haspopup={true}
                      bubbleEvent={false}
                      className=""
                      data-ouia-component-id="OUIA-Generated-DropdownToggle-2"
                      data-ouia-component-type="PF4/DropdownToggle"
                      data-ouia-safe={true}
                      getMenuRef={[Function]}
                      id="toggle-id"
                      isActive={false}
                      isDisabled={false}
                      isOpen={false}
                      isPlain={false}
                      isPrimary={false}
                      isSplitButton={false}
                      onEnter={[Function]}
                      onToggle={[Function]}
                      parentRef={
                        Object {
                          "current": <div
                            class="pf-c-dropdown pf-m-top"
                            data-ouia-component-id="OUIA-Generated-Dropdown-2"
                            data-ouia-component-type="PF4/Dropdown"
                            data-ouia-safe="true"
                          >
                            <button
                              aria-expanded="false"
                              aria-haspopup="true"
                              class="pf-c-dropdown__toggle"
                              data-ouia-component-id="OUIA-Generated-DropdownToggle-2"
                              data-ouia-component-type="PF4/DropdownToggle"
                              data-ouia-safe="true"
                              id="toggle-id"
                              type="button"
                            >
                              <span
                                class="pf-c-dropdown__toggle-text"
                              >
                                Book
                              </span>
                              <span
                                class="pf-c-dropdown__toggle-icon"
                              >
                                <svg
                                  aria-hidden="true"
                                  fill="currentColor"
                                  height="1em"
                                  role="img"
                                  style="vertical-align: -0.125em;"
                                  viewBox="0 0 320 512"
                                  width="1em"
                                >
                                  <path
                                    d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                  />
                                </svg>
                              </span>
                            </button>
                          </div>,
                        }
                      }
                    >
                      <button
                        aria-expanded={false}
                        aria-haspopup={true}
                        className="pf-c-dropdown__toggle"
                        data-ouia-component-id="OUIA-Generated-DropdownToggle-2"
                        data-ouia-component-type="PF4/DropdownToggle"
                        data-ouia-safe={true}
                        disabled={false}
                        id="toggle-id"
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        type="button"
                      >
                        <span
                          className="pf-c-dropdown__toggle-text"
                        >
                          Book
                        </span>
                        <span
                          className="pf-c-dropdown__toggle-icon"
                        >
                          <CaretDownIcon
                            color="currentColor"
                            noVerticalAlign={false}
                            size="sm"
                          >
                            <svg
                              aria-hidden={true}
                              aria-labelledby={null}
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style={
                                Object {
                                  "verticalAlign": "-0.125em",
                                }
                              }
                              viewBox="0 0 320 512"
                              width="1em"
                            >
                              <path
                                d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                              />
                            </svg>
                          </CaretDownIcon>
                        </span>
                      </button>
                    </Toggle>
                  </DropdownToggle>
                </div>
              </DropdownWithContext>
            </Dropdown>
          </div>
          <div
            className="pf-u-mt-md"
          >
            <Flex
              direction={
                Object {
                  "default": "column",
                }
              }
            >
              <div
                className="pf-l-flex pf-m-column"
              >
                <FlexItem>
                  <div
                    className=""
                  >
                    <TextContent>
                      <div
                        className="pf-c-content"
                      >
                         
                        <Split
                          hasGutter={true}
                        >
                          <div
                            className="pf-l-split pf-m-gutter"
                          >
                            <SplitItem>
                              <div
                                className="pf-l-split__item"
                              >
                                <Text
                                  component="h6"
                                >
                                  <h6
                                    className=""
                                    data-pf-content={true}
                                  >
                                    Node name : 
                                  </h6>
                                </Text>
                              </div>
                            </SplitItem>
                            <SplitItem>
                              <div
                                className="pf-l-split__item"
                              >
                                <Text
                                  component="p"
                                >
                                  <p
                                    className=""
                                    data-pf-content={true}
                                  >
                                    Book
                                  </p>
                                </Text>
                              </div>
                            </SplitItem>
                          </div>
                        </Split>
                      </div>
                    </TextContent>
                  </div>
                </FlexItem>
                <FlexItem>
                  <div
                    className=""
                  >
                    <TextContent>
                      <div
                        className="pf-c-content"
                      >
                         
                        <Split
                          hasGutter={true}
                        >
                          <div
                            className="pf-l-split pf-m-gutter"
                          >
                            <SplitItem>
                              <div
                                className="pf-l-split__item"
                              >
                                <Text
                                  component="h6"
                                >
                                  <h6
                                    className=""
                                    data-pf-content={true}
                                  >
                                    Node type : 
                                  </h6>
                                </Text>
                              </div>
                            </SplitItem>
                            <SplitItem>
                              <div
                                className="pf-l-split__item"
                              >
                                <Text
                                  component="p"
                                >
                                  <p
                                    className=""
                                    data-pf-content={true}
                                  >
                                    Split
                                  </p>
                                </Text>
                              </div>
                            </SplitItem>
                          </div>
                        </Split>
                      </div>
                    </TextContent>
                  </div>
                </FlexItem>
                <FlexItem>
                  <div
                    className=""
                  >
                    <TextContent>
                      <div
                        className="pf-c-content"
                      >
                         
                        <Split
                          hasGutter={true}
                        >
                          <div
                            className="pf-l-split pf-m-gutter"
                          >
                            <SplitItem>
                              <div
                                className="pf-l-split__item"
                              >
                                <Text
                                  component="h6"
                                >
                                  <h6
                                    className=""
                                    data-pf-content={true}
                                  >
                                    Node id : 
                                  </h6>
                                </Text>
                              </div>
                            </SplitItem>
                            <SplitItem>
                              <div
                                className="pf-l-split__item"
                              >
                                <Text
                                  component="p"
                                >
                                  <p
                                    className=""
                                    data-pf-content={true}
                                  >
                                    2
                                  </p>
                                </Text>
                              </div>
                            </SplitItem>
                          </div>
                        </Split>
                      </div>
                    </TextContent>
                  </div>
                </FlexItem>
              </div>
            </Flex>
          </div>
          <div
            className="pf-u-mt-md"
          >
            <Button
              id="trigger"
              isDisabled={false}
              onClick={[Function]}
              variant="secondary"
            >
              <button
                aria-disabled={false}
                aria-label={null}
                className="pf-c-button pf-m-secondary"
                data-ouia-component-id="OUIA-Generated-Button-secondary-2"
                data-ouia-component-type="PF4/Button"
                data-ouia-safe={true}
                disabled={false}
                id="trigger"
                onClick={[Function]}
                role={null}
                type="button"
              >
                Trigger
              </button>
            </Button>
          </div>
        </div>
      </CardBody>
    </article>
  </Card>
</ProcessDetailsNodeTrigger>
`;

exports[`Process details node trigger component tests snapshot testing with none selected 1`] = `
<ProcessDetailsNodeTrigger
  driver={TestProcessDetailsDriver {}}
  processInstanceData={
    Object {
      "addons": Array [
        "jobs-management",
        "prometheus-monitoring",
        "process-management",
      ],
      "businessKey": "T1234",
      "childProcessInstances": Array [],
      "end": 2019-10-22T05:40:44.089Z,
      "endpoint": "http://localhost:4000",
      "error": Object {
        "message": "Something went wrong",
        "nodeDefinitionId": "_2140F05A-364F-40B3-BB7B-B12927065DF8",
      },
      "id": "e4448857-fa0c-403b-ad69-f0a353458b9d",
      "lastUpdate": 2019-10-22T05:40:44.089Z,
      "milestones": Array [],
      "nodes": Array [
        Object {
          "definitionId": "EndEvent_1",
          "enter": 2019-10-22T03:37:38.586Z,
          "exit": 2019-10-22T03:37:38.586Z,
          "id": "870bdda0-be04-4e59-bb0b-f9b665eaacc9",
          "name": "End Event 1",
          "nodeId": "1",
          "type": "EndNode",
        },
        Object {
          "definitionId": "UserTask_2",
          "enter": 2019-10-22T03:37:30.807Z,
          "exit": 2019-10-22T03:37:38.586Z,
          "id": "6b4a4fe9-4aab-4e8c-bb79-27b8b6b88d1f",
          "name": "Confirm travel",
          "nodeId": "2",
          "type": "HumanTaskNode",
        },
      ],
      "parentProcessInstance": null,
      "parentProcessInstanceId": null,
      "processId": "travels",
      "processName": "travels",
      "roles": Array [],
      "rootProcessInstanceId": null,
      "serviceUrl": "http://localhost:4000",
      "start": 2019-10-22T03:40:44.089Z,
      "state": "ERROR",
      "variables": "{\\"flight\\":{\\"arrival\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"departure\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"flightNumber\\":\\"MX555\\"},\\"trip\\":{\\"begin\\":\\"2019-10-22T22:00:00Z[UTC]\\",\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"end\\":\\"2019-10-30T22:00:00Z[UTC]\\",\\"visaRequired\\":false},\\"hotel\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"India\\",\\"street\\":\\"street\\",\\"zipCode\\":\\"12345\\"},\\"bookingNumber\\":\\"XX-012345\\",\\"name\\":\\"Perfect hotel\\",\\"phone\\":\\"09876543\\"},\\"traveller\\":{\\"address\\":{\\"city\\":\\"Bangalore\\",\\"country\\":\\"US\\",\\"street\\":\\"Bangalore\\",\\"zipCode\\":\\"560093\\"},\\"email\\":\\"ajaganat@redhat.com\\",\\"firstName\\":\\"Ajay\\",\\"lastName\\":\\"Jaganathan\\",\\"nationality\\":\\"US\\"}}",
    }
  }
>
  <MockedProcessDetailsErrorModal
    errorModalAction={
      Array [
        <Button
          onClick={[Function]}
          variant="primary"
        >
          OK
        </Button>,
      ]
    }
    errorModalOpen={false}
    errorString=""
    handleErrorModal={[Function]}
    label="Node Trigger Error"
    title={
      <Title
        headingLevel="h1"
        size="2xl"
      >
        <span>
          
        </span>
      </Title>
    }
  />
  <Card
    data-ouia-component-type="node-trigger"
    data-ouia-safe={true}
  >
    <article
      className="pf-c-card"
      data-ouia-component-id="OUIA-Generated-Card-1"
      data-ouia-component-type="PF4/Card"
      data-ouia-safe={true}
      id=""
    >
      <CardHeader>
        <div
          className="pf-c-card__header"
        >
          <Title
            headingLevel="h3"
            size="xl"
          >
            <h3
              className="pf-c-title pf-m-xl"
            >
              Node Trigger
            </h3>
          </Title>
        </div>
      </CardHeader>
      <CardHeader>
        <div
          className="pf-c-card__header"
        >
          <div>
            Select a node from the process nodes list and click Trigger to launch it manually.
          </div>
        </div>
      </CardHeader>
      <CardBody>
        <div
          className="pf-c-card__body"
        >
          <div>
            <Dropdown
              direction="up"
              dropdownItems={
                Array [
                  <DropdownItem
                    id="Send visa application"
                  >
                    Send visa application
                  </DropdownItem>,
                  <DropdownItem
                    id="Book"
                  >
                    Book
                  </DropdownItem>,
                  <DropdownItem
                    id="visasrejected"
                  >
                    visasrejected
                  </DropdownItem>,
                ]
              }
              isOpen={false}
              onSelect={[Function]}
              toggle={
                <DropdownToggle
                  id="toggle-id"
                  onToggle={[Function]}
                  toggleIndicator={[Function]}
                >
                  select a node
                </DropdownToggle>
              }
            >
              <DropdownWithContext
                autoFocus={true}
                className=""
                direction="up"
                dropdownItems={
                  Array [
                    <DropdownItem
                      id="Send visa application"
                    >
                      Send visa application
                    </DropdownItem>,
                    <DropdownItem
                      id="Book"
                    >
                      Book
                    </DropdownItem>,
                    <DropdownItem
                      id="visasrejected"
                    >
                      visasrejected
                    </DropdownItem>,
                  ]
                }
                isGrouped={false}
                isOpen={false}
                isPlain={false}
                menuAppendTo="inline"
                onSelect={[Function]}
                position="left"
                toggle={
                  <DropdownToggle
                    id="toggle-id"
                    onToggle={[Function]}
                    toggleIndicator={[Function]}
                  >
                    select a node
                  </DropdownToggle>
                }
              >
                <div
                  className="pf-c-dropdown pf-m-top"
                  data-ouia-component-id="OUIA-Generated-Dropdown-1"
                  data-ouia-component-type="PF4/Dropdown"
                  data-ouia-safe={true}
                >
                  <DropdownToggle
                    aria-haspopup={true}
                    getMenuRef={[Function]}
                    id="toggle-id"
                    isOpen={false}
                    isPlain={false}
                    key=".0"
                    onEnter={[Function]}
                    onToggle={[Function]}
                    parentRef={
                      Object {
                        "current": <div
                          class="pf-c-dropdown pf-m-top"
                          data-ouia-component-id="OUIA-Generated-Dropdown-1"
                          data-ouia-component-type="PF4/Dropdown"
                          data-ouia-safe="true"
                        >
                          <button
                            aria-expanded="false"
                            aria-haspopup="true"
                            class="pf-c-dropdown__toggle"
                            data-ouia-component-id="OUIA-Generated-DropdownToggle-1"
                            data-ouia-component-type="PF4/DropdownToggle"
                            data-ouia-safe="true"
                            id="toggle-id"
                            type="button"
                          >
                            <span
                              class="pf-c-dropdown__toggle-text"
                            >
                              select a node
                            </span>
                            <span
                              class="pf-c-dropdown__toggle-icon"
                            >
                              <svg
                                aria-hidden="true"
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style="vertical-align: -0.125em;"
                                viewBox="0 0 320 512"
                                width="1em"
                              >
                                <path
                                  d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                />
                              </svg>
                            </span>
                          </button>
                        </div>,
                      }
                    }
                    toggleIndicator={[Function]}
                  >
                    <Toggle
                      aria-haspopup={true}
                      bubbleEvent={false}
                      className=""
                      data-ouia-component-id="OUIA-Generated-DropdownToggle-1"
                      data-ouia-component-type="PF4/DropdownToggle"
                      data-ouia-safe={true}
                      getMenuRef={[Function]}
                      id="toggle-id"
                      isActive={false}
                      isDisabled={false}
                      isOpen={false}
                      isPlain={false}
                      isPrimary={false}
                      isSplitButton={false}
                      onEnter={[Function]}
                      onToggle={[Function]}
                      parentRef={
                        Object {
                          "current": <div
                            class="pf-c-dropdown pf-m-top"
                            data-ouia-component-id="OUIA-Generated-Dropdown-1"
                            data-ouia-component-type="PF4/Dropdown"
                            data-ouia-safe="true"
                          >
                            <button
                              aria-expanded="false"
                              aria-haspopup="true"
                              class="pf-c-dropdown__toggle"
                              data-ouia-component-id="OUIA-Generated-DropdownToggle-1"
                              data-ouia-component-type="PF4/DropdownToggle"
                              data-ouia-safe="true"
                              id="toggle-id"
                              type="button"
                            >
                              <span
                                class="pf-c-dropdown__toggle-text"
                              >
                                select a node
                              </span>
                              <span
                                class="pf-c-dropdown__toggle-icon"
                              >
                                <svg
                                  aria-hidden="true"
                                  fill="currentColor"
                                  height="1em"
                                  role="img"
                                  style="vertical-align: -0.125em;"
                                  viewBox="0 0 320 512"
                                  width="1em"
                                >
                                  <path
                                    d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                  />
                                </svg>
                              </span>
                            </button>
                          </div>,
                        }
                      }
                    >
                      <button
                        aria-expanded={false}
                        aria-haspopup={true}
                        className="pf-c-dropdown__toggle"
                        data-ouia-component-id="OUIA-Generated-DropdownToggle-1"
                        data-ouia-component-type="PF4/DropdownToggle"
                        data-ouia-safe={true}
                        disabled={false}
                        id="toggle-id"
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        type="button"
                      >
                        <span
                          className="pf-c-dropdown__toggle-text"
                        >
                          select a node
                        </span>
                        <span
                          className="pf-c-dropdown__toggle-icon"
                        >
                          <CaretDownIcon
                            color="currentColor"
                            noVerticalAlign={false}
                            size="sm"
                          >
                            <svg
                              aria-hidden={true}
                              aria-labelledby={null}
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style={
                                Object {
                                  "verticalAlign": "-0.125em",
                                }
                              }
                              viewBox="0 0 320 512"
                              width="1em"
                            >
                              <path
                                d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                              />
                            </svg>
                          </CaretDownIcon>
                        </span>
                      </button>
                    </Toggle>
                  </DropdownToggle>
                </div>
              </DropdownWithContext>
            </Dropdown>
          </div>
          <div
            className="pf-u-mt-md"
          >
            <Button
              id="trigger"
              isDisabled={true}
              onClick={[Function]}
              variant="secondary"
            >
              <button
                aria-disabled={true}
                aria-label={null}
                className="pf-c-button pf-m-secondary pf-m-disabled"
                data-ouia-component-id="OUIA-Generated-Button-secondary-1"
                data-ouia-component-type="PF4/Button"
                data-ouia-safe={true}
                disabled={true}
                id="trigger"
                onClick={[Function]}
                role={null}
                tabIndex={null}
                type="button"
              >
                Trigger
              </button>
            </Button>
          </div>
        </div>
      </CardBody>
    </article>
  </Card>
</ProcessDetailsNodeTrigger>
`;
