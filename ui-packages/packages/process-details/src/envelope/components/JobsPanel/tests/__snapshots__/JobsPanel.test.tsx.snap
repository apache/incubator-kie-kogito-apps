// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Processdetails jobs pannel component tests Jobs empty response 1`] = `
<JobsPanel
  driver={
    Object {
      "abortProcess": [MockFunction],
      "cancelJob": [MockFunction],
      "getProcessDiagram": [MockFunction],
      "jobsQuery": [MockFunction],
      "processDetailsQuery": [MockFunction],
      "rescheduleJob": [MockFunction],
    }
  }
  jobs={Array []}
  ouiaSafe={true}
/>
`;

exports[`Processdetails jobs pannel component tests Snapshot testing 1`] = `
<JobsPanel
  driver={
    Object {
      "abortProcess": [MockFunction],
      "cancelJob": [MockFunction],
      "getProcessDiagram": [MockFunction],
      "jobsQuery": [MockFunction],
      "processDetailsQuery": [MockFunction],
      "rescheduleJob": [MockFunction],
    }
  }
  jobs={
    Array [
      Object {
        "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
        "endpoint": "http://localhost:4000",
        "expirationTime": null,
        "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
        "lastUpdate": 2020-08-27T03:35:50.147Z,
        "priority": 0,
        "processId": "travels",
        "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
        "repeatInterval": null,
        "repeatLimit": null,
        "retries": 0,
        "rootProcessId": null,
        "scheduledId": "0",
        "status": "EXECUTED",
      },
    ]
  }
>
  <Card
    data-ouia-component-type="process-details-jobs-panel"
    data-ouia-safe={true}
  >
    <article
      className="pf-c-card"
      data-ouia-component-id="OUIA-Generated-Card-1"
      data-ouia-component-type="PF4/Card"
      data-ouia-safe={true}
      id=""
    >
      <CardHeader>
        <div
          className="pf-c-card__header"
        >
          <Title
            headingLevel="h3"
            size="xl"
          >
            <h3
              className="pf-c-title pf-m-xl"
            >
              Jobs
            </h3>
          </Title>
        </div>
      </CardHeader>
      <CardBody>
        <div
          className="pf-c-card__body"
        >
          <Table
            aria-label="Process details jobs panel"
            aria-labelledby="Process details jobs panel"
            borders={true}
            canSelectAll={true}
            canSortFavorites={true}
            cells={
              Array [
                Object {
                  "title": "Job id",
                },
                Object {
                  "title": "Status",
                },
                Object {
                  "title": "Expiration time",
                },
                Object {
                  "title": "Actions",
                },
              ]
            }
            className=""
            contentId="expanded-content"
            dropdownDirection="down"
            dropdownPosition="right"
            expandId="expandable-toggle"
            gridBreakPoint="grid-md"
            isStickyHeader={false}
            ouiaSafe={true}
            role="grid"
            rowLabeledBy="simple-node"
            rows={
              Array [
                Object {
                  "cells": Array [
                    Object {
                      "title": <Tooltip
                        content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                      >
                        <span>
                          6e74a57
                        </span>
                      </Tooltip>,
                    },
                    Object {
                      "title": <React.Fragment>
                        <CheckCircleIcon
                          className="pf-u-mr-sm"
                          color="var(--pf-global--success-color--100)"
                        />
                        Executed
                      </React.Fragment>,
                    },
                    Object {
                      "title": <React.Fragment>
                        N/A
                      </React.Fragment>,
                    },
                    Object {
                      "title": <MockedJobActionsKebab
                        driver={
                          Object {
                            "abortProcess": [MockFunction],
                            "cancelJob": [MockFunction],
                            "getProcessDiagram": [MockFunction],
                            "jobsQuery": [MockFunction],
                            "processDetailsQuery": [MockFunction],
                            "rescheduleJob": [MockFunction],
                          }
                        }
                        job={
                          Object {
                            "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                            "endpoint": "http://localhost:4000",
                            "expirationTime": null,
                            "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                            "lastUpdate": 2020-08-27T03:35:50.147Z,
                            "priority": 0,
                            "processId": "travels",
                            "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                            "repeatInterval": null,
                            "repeatLimit": null,
                            "retries": 0,
                            "rootProcessId": null,
                            "scheduledId": "0",
                            "status": "EXECUTED",
                          }
                        }
                      />,
                    },
                  ],
                },
              ]
            }
            selectVariant="checkbox"
            variant="compact"
          >
            <Provider
              aria-label="Process details jobs panel"
              aria-labelledby="Process details jobs panel"
              borders={true}
              className=""
              columns={
                Array [
                  Object {
                    "cell": Object {
                      "formatters": Array [
                        [Function],
                      ],
                      "transforms": Array [
                        [Function],
                      ],
                    },
                    "data": undefined,
                    "extraParams": Object {
                      "actionResolver": undefined,
                      "actions": undefined,
                      "allRowsSelected": false,
                      "areActionsDisabled": undefined,
                      "canSelectAll": true,
                      "canSortFavorites": true,
                      "contentId": "expanded-content",
                      "dropdownDirection": "down",
                      "dropdownPosition": "right",
                      "expandId": "expandable-toggle",
                      "firstUserColumnIndex": 0,
                      "onCollapse": undefined,
                      "onExpand": undefined,
                      "onFavorite": undefined,
                      "onRowEdit": undefined,
                      "onSelect": undefined,
                      "onSort": undefined,
                      "rowLabeledBy": "simple-node",
                      "selectVariant": "checkbox",
                      "sortBy": undefined,
                    },
                    "header": Object {
                      "formatters": Array [],
                      "label": "Job id",
                      "transforms": Array [
                        [Function],
                        [Function],
                      ],
                    },
                    "property": "job-id",
                    "props": Object {
                      "data-key": 0,
                      "data-label": "Job id",
                    },
                  },
                  Object {
                    "cell": Object {
                      "formatters": Array [
                        [Function],
                      ],
                      "transforms": Array [
                        [Function],
                      ],
                    },
                    "data": undefined,
                    "extraParams": Object {
                      "actionResolver": undefined,
                      "actions": undefined,
                      "allRowsSelected": false,
                      "areActionsDisabled": undefined,
                      "canSelectAll": true,
                      "canSortFavorites": true,
                      "contentId": "expanded-content",
                      "dropdownDirection": "down",
                      "dropdownPosition": "right",
                      "expandId": "expandable-toggle",
                      "firstUserColumnIndex": 0,
                      "onCollapse": undefined,
                      "onExpand": undefined,
                      "onFavorite": undefined,
                      "onRowEdit": undefined,
                      "onSelect": undefined,
                      "onSort": undefined,
                      "rowLabeledBy": "simple-node",
                      "selectVariant": "checkbox",
                      "sortBy": undefined,
                    },
                    "header": Object {
                      "formatters": Array [],
                      "label": "Status",
                      "transforms": Array [
                        [Function],
                        [Function],
                      ],
                    },
                    "property": "status",
                    "props": Object {
                      "data-key": 1,
                      "data-label": "Status",
                    },
                  },
                  Object {
                    "cell": Object {
                      "formatters": Array [
                        [Function],
                      ],
                      "transforms": Array [
                        [Function],
                      ],
                    },
                    "data": undefined,
                    "extraParams": Object {
                      "actionResolver": undefined,
                      "actions": undefined,
                      "allRowsSelected": false,
                      "areActionsDisabled": undefined,
                      "canSelectAll": true,
                      "canSortFavorites": true,
                      "contentId": "expanded-content",
                      "dropdownDirection": "down",
                      "dropdownPosition": "right",
                      "expandId": "expandable-toggle",
                      "firstUserColumnIndex": 0,
                      "onCollapse": undefined,
                      "onExpand": undefined,
                      "onFavorite": undefined,
                      "onRowEdit": undefined,
                      "onSelect": undefined,
                      "onSort": undefined,
                      "rowLabeledBy": "simple-node",
                      "selectVariant": "checkbox",
                      "sortBy": undefined,
                    },
                    "header": Object {
                      "formatters": Array [],
                      "label": "Expiration time",
                      "transforms": Array [
                        [Function],
                        [Function],
                      ],
                    },
                    "property": "expiration-time",
                    "props": Object {
                      "data-key": 2,
                      "data-label": "Expiration time",
                    },
                  },
                  Object {
                    "cell": Object {
                      "formatters": Array [
                        [Function],
                      ],
                      "transforms": Array [
                        [Function],
                      ],
                    },
                    "data": undefined,
                    "extraParams": Object {
                      "actionResolver": undefined,
                      "actions": undefined,
                      "allRowsSelected": false,
                      "areActionsDisabled": undefined,
                      "canSelectAll": true,
                      "canSortFavorites": true,
                      "contentId": "expanded-content",
                      "dropdownDirection": "down",
                      "dropdownPosition": "right",
                      "expandId": "expandable-toggle",
                      "firstUserColumnIndex": 0,
                      "onCollapse": undefined,
                      "onExpand": undefined,
                      "onFavorite": undefined,
                      "onRowEdit": undefined,
                      "onSelect": undefined,
                      "onSort": undefined,
                      "rowLabeledBy": "simple-node",
                      "selectVariant": "checkbox",
                      "sortBy": undefined,
                    },
                    "header": Object {
                      "formatters": Array [],
                      "label": "Actions",
                      "transforms": Array [
                        [Function],
                        [Function],
                      ],
                    },
                    "property": "actions",
                    "props": Object {
                      "data-key": 3,
                      "data-label": "Actions",
                    },
                  },
                ]
              }
              gridBreakPoint="grid-md"
              isStickyHeader={false}
              ouiaSafe={true}
              renderers={
                Object {
                  "body": Object {
                    "cell": [Function],
                    "row": [Function],
                    "wrapper": [Function],
                  },
                  "header": Object {
                    "cell": [Function],
                  },
                }
              }
              role="grid"
              variant="compact"
            >
              <TableComposable
                aria-label="Process details jobs panel"
                aria-labelledby="Process details jobs panel"
                borders={true}
                className=""
                gridBreakPoint="grid-md"
                isStickyHeader={false}
                ouiaSafe={true}
                role="grid"
                variant="compact"
              >
                <TableComposableBase
                  aria-label="Process details jobs panel"
                  aria-labelledby="Process details jobs panel"
                  borders={true}
                  className=""
                  gridBreakPoint="grid-md"
                  innerRef={null}
                  isStickyHeader={false}
                  ouiaSafe={true}
                  role="grid"
                  variant="compact"
                >
                  <table
                    aria-label="Process details jobs panel"
                    aria-labelledby="Process details jobs panel"
                    className="pf-c-table pf-m-grid-md pf-m-compact"
                    data-ouia-component-id="OUIA-Generated-Table-2"
                    data-ouia-component-type="PF4/Table"
                    data-ouia-safe={true}
                    role="grid"
                  >
                    <TableHeader>
                      <ContextHeader
                        headerRows={null}
                      >
                        <Component
                          className=""
                          headerRows={null}
                        >
                          <BaseHeader
                            className=""
                            columns={
                              Array [
                                Object {
                                  "cell": Object {
                                    "formatters": Array [
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                  },
                                  "data": undefined,
                                  "extraParams": Object {
                                    "actionResolver": undefined,
                                    "actions": undefined,
                                    "allRowsSelected": false,
                                    "areActionsDisabled": undefined,
                                    "canSelectAll": true,
                                    "canSortFavorites": true,
                                    "contentId": "expanded-content",
                                    "dropdownDirection": "down",
                                    "dropdownPosition": "right",
                                    "expandId": "expandable-toggle",
                                    "firstUserColumnIndex": 0,
                                    "onCollapse": undefined,
                                    "onExpand": undefined,
                                    "onFavorite": undefined,
                                    "onRowEdit": undefined,
                                    "onSelect": undefined,
                                    "onSort": undefined,
                                    "rowLabeledBy": "simple-node",
                                    "selectVariant": "checkbox",
                                    "sortBy": undefined,
                                  },
                                  "header": Object {
                                    "formatters": Array [],
                                    "label": "Job id",
                                    "transforms": Array [
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                  "property": "job-id",
                                  "props": Object {
                                    "data-key": 0,
                                    "data-label": "Job id",
                                  },
                                },
                                Object {
                                  "cell": Object {
                                    "formatters": Array [
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                  },
                                  "data": undefined,
                                  "extraParams": Object {
                                    "actionResolver": undefined,
                                    "actions": undefined,
                                    "allRowsSelected": false,
                                    "areActionsDisabled": undefined,
                                    "canSelectAll": true,
                                    "canSortFavorites": true,
                                    "contentId": "expanded-content",
                                    "dropdownDirection": "down",
                                    "dropdownPosition": "right",
                                    "expandId": "expandable-toggle",
                                    "firstUserColumnIndex": 0,
                                    "onCollapse": undefined,
                                    "onExpand": undefined,
                                    "onFavorite": undefined,
                                    "onRowEdit": undefined,
                                    "onSelect": undefined,
                                    "onSort": undefined,
                                    "rowLabeledBy": "simple-node",
                                    "selectVariant": "checkbox",
                                    "sortBy": undefined,
                                  },
                                  "header": Object {
                                    "formatters": Array [],
                                    "label": "Status",
                                    "transforms": Array [
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                  "property": "status",
                                  "props": Object {
                                    "data-key": 1,
                                    "data-label": "Status",
                                  },
                                },
                                Object {
                                  "cell": Object {
                                    "formatters": Array [
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                  },
                                  "data": undefined,
                                  "extraParams": Object {
                                    "actionResolver": undefined,
                                    "actions": undefined,
                                    "allRowsSelected": false,
                                    "areActionsDisabled": undefined,
                                    "canSelectAll": true,
                                    "canSortFavorites": true,
                                    "contentId": "expanded-content",
                                    "dropdownDirection": "down",
                                    "dropdownPosition": "right",
                                    "expandId": "expandable-toggle",
                                    "firstUserColumnIndex": 0,
                                    "onCollapse": undefined,
                                    "onExpand": undefined,
                                    "onFavorite": undefined,
                                    "onRowEdit": undefined,
                                    "onSelect": undefined,
                                    "onSort": undefined,
                                    "rowLabeledBy": "simple-node",
                                    "selectVariant": "checkbox",
                                    "sortBy": undefined,
                                  },
                                  "header": Object {
                                    "formatters": Array [],
                                    "label": "Expiration time",
                                    "transforms": Array [
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                  "property": "expiration-time",
                                  "props": Object {
                                    "data-key": 2,
                                    "data-label": "Expiration time",
                                  },
                                },
                                Object {
                                  "cell": Object {
                                    "formatters": Array [
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                  },
                                  "data": undefined,
                                  "extraParams": Object {
                                    "actionResolver": undefined,
                                    "actions": undefined,
                                    "allRowsSelected": false,
                                    "areActionsDisabled": undefined,
                                    "canSelectAll": true,
                                    "canSortFavorites": true,
                                    "contentId": "expanded-content",
                                    "dropdownDirection": "down",
                                    "dropdownPosition": "right",
                                    "expandId": "expandable-toggle",
                                    "firstUserColumnIndex": 0,
                                    "onCollapse": undefined,
                                    "onExpand": undefined,
                                    "onFavorite": undefined,
                                    "onRowEdit": undefined,
                                    "onSelect": undefined,
                                    "onSort": undefined,
                                    "rowLabeledBy": "simple-node",
                                    "selectVariant": "checkbox",
                                    "sortBy": undefined,
                                  },
                                  "header": Object {
                                    "formatters": Array [],
                                    "label": "Actions",
                                    "transforms": Array [
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                  "property": "actions",
                                  "props": Object {
                                    "data-key": 3,
                                    "data-label": "Actions",
                                  },
                                },
                              ]
                            }
                            headerRows={null}
                            renderers={
                              Object {
                                "body": Object {
                                  "cell": [Function],
                                  "row": [Function],
                                  "wrapper": [Function],
                                },
                                "header": Object {
                                  "cell": [Function],
                                  "row": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "displayName": "Tr",
                                    "render": [Function],
                                  },
                                  "wrapper": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "displayName": "Thead",
                                    "render": [Function],
                                  },
                                },
                                "table": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "displayName": "TableComposable",
                                  "render": [Function],
                                },
                              }
                            }
                          >
                            <Thead
                              className=""
                            >
                              <TheadBase
                                className=""
                                innerRef={null}
                              >
                                <thead
                                  className=""
                                >
                                  <HeaderRow
                                    key="0-header-row"
                                    renderers={
                                      Object {
                                        "cell": [Function],
                                        "row": Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Tr",
                                          "render": [Function],
                                        },
                                        "wrapper": Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Thead",
                                          "render": [Function],
                                        },
                                      }
                                    }
                                    rowData={
                                      Array [
                                        Object {
                                          "cell": Object {
                                            "formatters": Array [
                                              [Function],
                                            ],
                                            "transforms": Array [
                                              [Function],
                                            ],
                                          },
                                          "data": undefined,
                                          "extraParams": Object {
                                            "actionResolver": undefined,
                                            "actions": undefined,
                                            "allRowsSelected": false,
                                            "areActionsDisabled": undefined,
                                            "canSelectAll": true,
                                            "canSortFavorites": true,
                                            "contentId": "expanded-content",
                                            "dropdownDirection": "down",
                                            "dropdownPosition": "right",
                                            "expandId": "expandable-toggle",
                                            "firstUserColumnIndex": 0,
                                            "onCollapse": undefined,
                                            "onExpand": undefined,
                                            "onFavorite": undefined,
                                            "onRowEdit": undefined,
                                            "onSelect": undefined,
                                            "onSort": undefined,
                                            "rowLabeledBy": "simple-node",
                                            "selectVariant": "checkbox",
                                            "sortBy": undefined,
                                          },
                                          "header": Object {
                                            "formatters": Array [],
                                            "label": "Job id",
                                            "transforms": Array [
                                              [Function],
                                              [Function],
                                            ],
                                          },
                                          "property": "job-id",
                                          "props": Object {
                                            "data-key": 0,
                                            "data-label": "Job id",
                                          },
                                        },
                                        Object {
                                          "cell": Object {
                                            "formatters": Array [
                                              [Function],
                                            ],
                                            "transforms": Array [
                                              [Function],
                                            ],
                                          },
                                          "data": undefined,
                                          "extraParams": Object {
                                            "actionResolver": undefined,
                                            "actions": undefined,
                                            "allRowsSelected": false,
                                            "areActionsDisabled": undefined,
                                            "canSelectAll": true,
                                            "canSortFavorites": true,
                                            "contentId": "expanded-content",
                                            "dropdownDirection": "down",
                                            "dropdownPosition": "right",
                                            "expandId": "expandable-toggle",
                                            "firstUserColumnIndex": 0,
                                            "onCollapse": undefined,
                                            "onExpand": undefined,
                                            "onFavorite": undefined,
                                            "onRowEdit": undefined,
                                            "onSelect": undefined,
                                            "onSort": undefined,
                                            "rowLabeledBy": "simple-node",
                                            "selectVariant": "checkbox",
                                            "sortBy": undefined,
                                          },
                                          "header": Object {
                                            "formatters": Array [],
                                            "label": "Status",
                                            "transforms": Array [
                                              [Function],
                                              [Function],
                                            ],
                                          },
                                          "property": "status",
                                          "props": Object {
                                            "data-key": 1,
                                            "data-label": "Status",
                                          },
                                        },
                                        Object {
                                          "cell": Object {
                                            "formatters": Array [
                                              [Function],
                                            ],
                                            "transforms": Array [
                                              [Function],
                                            ],
                                          },
                                          "data": undefined,
                                          "extraParams": Object {
                                            "actionResolver": undefined,
                                            "actions": undefined,
                                            "allRowsSelected": false,
                                            "areActionsDisabled": undefined,
                                            "canSelectAll": true,
                                            "canSortFavorites": true,
                                            "contentId": "expanded-content",
                                            "dropdownDirection": "down",
                                            "dropdownPosition": "right",
                                            "expandId": "expandable-toggle",
                                            "firstUserColumnIndex": 0,
                                            "onCollapse": undefined,
                                            "onExpand": undefined,
                                            "onFavorite": undefined,
                                            "onRowEdit": undefined,
                                            "onSelect": undefined,
                                            "onSort": undefined,
                                            "rowLabeledBy": "simple-node",
                                            "selectVariant": "checkbox",
                                            "sortBy": undefined,
                                          },
                                          "header": Object {
                                            "formatters": Array [],
                                            "label": "Expiration time",
                                            "transforms": Array [
                                              [Function],
                                              [Function],
                                            ],
                                          },
                                          "property": "expiration-time",
                                          "props": Object {
                                            "data-key": 2,
                                            "data-label": "Expiration time",
                                          },
                                        },
                                        Object {
                                          "cell": Object {
                                            "formatters": Array [
                                              [Function],
                                            ],
                                            "transforms": Array [
                                              [Function],
                                            ],
                                          },
                                          "data": undefined,
                                          "extraParams": Object {
                                            "actionResolver": undefined,
                                            "actions": undefined,
                                            "allRowsSelected": false,
                                            "areActionsDisabled": undefined,
                                            "canSelectAll": true,
                                            "canSortFavorites": true,
                                            "contentId": "expanded-content",
                                            "dropdownDirection": "down",
                                            "dropdownPosition": "right",
                                            "expandId": "expandable-toggle",
                                            "firstUserColumnIndex": 0,
                                            "onCollapse": undefined,
                                            "onExpand": undefined,
                                            "onFavorite": undefined,
                                            "onRowEdit": undefined,
                                            "onSelect": undefined,
                                            "onSort": undefined,
                                            "rowLabeledBy": "simple-node",
                                            "selectVariant": "checkbox",
                                            "sortBy": undefined,
                                          },
                                          "header": Object {
                                            "formatters": Array [],
                                            "label": "Actions",
                                            "transforms": Array [
                                              [Function],
                                              [Function],
                                            ],
                                          },
                                          "property": "actions",
                                          "props": Object {
                                            "data-key": 3,
                                            "data-label": "Actions",
                                          },
                                        },
                                      ]
                                    }
                                    rowIndex={0}
                                  >
                                    <Tr>
                                      <TrBase
                                        innerRef={null}
                                      >
                                        <tr
                                          className=""
                                          data-ouia-component-id="OUIA-Generated-TableRow-1"
                                          data-ouia-component-type="PF4/TableRow"
                                          data-ouia-safe={true}
                                          hidden={false}
                                        >
                                          <HeaderCell
                                            data-key={0}
                                            data-label="Job id"
                                            key="0-header"
                                            scope="col"
                                          >
                                            <Th
                                              className=""
                                              component="th"
                                              data-key={0}
                                              data-label="Job id"
                                              onMouseEnter={[Function]}
                                              scope="col"
                                              textCenter={false}
                                              tooltip=""
                                            >
                                              <ThBase
                                                className=""
                                                component="th"
                                                data-key={0}
                                                data-label="Job id"
                                                innerRef={null}
                                                onMouseEnter={[Function]}
                                                scope="col"
                                                textCenter={false}
                                                tooltip=""
                                              >
                                                <th
                                                  className=""
                                                  data-key={0}
                                                  data-label="Job id"
                                                  onMouseEnter={[Function]}
                                                  scope="col"
                                                >
                                                  Job id
                                                </th>
                                              </ThBase>
                                            </Th>
                                          </HeaderCell>
                                          <HeaderCell
                                            data-key={1}
                                            data-label="Status"
                                            key="1-header"
                                            scope="col"
                                          >
                                            <Th
                                              className=""
                                              component="th"
                                              data-key={1}
                                              data-label="Status"
                                              onMouseEnter={[Function]}
                                              scope="col"
                                              textCenter={false}
                                              tooltip=""
                                            >
                                              <ThBase
                                                className=""
                                                component="th"
                                                data-key={1}
                                                data-label="Status"
                                                innerRef={null}
                                                onMouseEnter={[Function]}
                                                scope="col"
                                                textCenter={false}
                                                tooltip=""
                                              >
                                                <th
                                                  className=""
                                                  data-key={1}
                                                  data-label="Status"
                                                  onMouseEnter={[Function]}
                                                  scope="col"
                                                >
                                                  Status
                                                </th>
                                              </ThBase>
                                            </Th>
                                          </HeaderCell>
                                          <HeaderCell
                                            data-key={2}
                                            data-label="Expiration time"
                                            key="2-header"
                                            scope="col"
                                          >
                                            <Th
                                              className=""
                                              component="th"
                                              data-key={2}
                                              data-label="Expiration time"
                                              onMouseEnter={[Function]}
                                              scope="col"
                                              textCenter={false}
                                              tooltip=""
                                            >
                                              <ThBase
                                                className=""
                                                component="th"
                                                data-key={2}
                                                data-label="Expiration time"
                                                innerRef={null}
                                                onMouseEnter={[Function]}
                                                scope="col"
                                                textCenter={false}
                                                tooltip=""
                                              >
                                                <th
                                                  className=""
                                                  data-key={2}
                                                  data-label="Expiration time"
                                                  onMouseEnter={[Function]}
                                                  scope="col"
                                                >
                                                  Expiration time
                                                </th>
                                              </ThBase>
                                            </Th>
                                          </HeaderCell>
                                          <HeaderCell
                                            data-key={3}
                                            data-label="Actions"
                                            key="3-header"
                                            scope="col"
                                          >
                                            <Th
                                              className=""
                                              component="th"
                                              data-key={3}
                                              data-label="Actions"
                                              onMouseEnter={[Function]}
                                              scope="col"
                                              textCenter={false}
                                              tooltip=""
                                            >
                                              <ThBase
                                                className=""
                                                component="th"
                                                data-key={3}
                                                data-label="Actions"
                                                innerRef={null}
                                                onMouseEnter={[Function]}
                                                scope="col"
                                                textCenter={false}
                                                tooltip=""
                                              >
                                                <th
                                                  className=""
                                                  data-key={3}
                                                  data-label="Actions"
                                                  onMouseEnter={[Function]}
                                                  scope="col"
                                                >
                                                  Actions
                                                </th>
                                              </ThBase>
                                            </Th>
                                          </HeaderCell>
                                        </tr>
                                      </TrBase>
                                    </Tr>
                                  </HeaderRow>
                                </thead>
                              </TheadBase>
                            </Thead>
                          </BaseHeader>
                        </Component>
                      </ContextHeader>
                    </TableHeader>
                    <Component>
                      <ContextBody
                        className=""
                        headerData={
                          Array [
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "canSelectAll": true,
                                "canSortFavorites": true,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": undefined,
                                "onExpand": undefined,
                                "onFavorite": undefined,
                                "onRowEdit": undefined,
                                "onSelect": undefined,
                                "onSort": undefined,
                                "rowLabeledBy": "simple-node",
                                "selectVariant": "checkbox",
                                "sortBy": undefined,
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Job id",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "job-id",
                              "props": Object {
                                "data-key": 0,
                                "data-label": "Job id",
                              },
                            },
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "canSelectAll": true,
                                "canSortFavorites": true,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": undefined,
                                "onExpand": undefined,
                                "onFavorite": undefined,
                                "onRowEdit": undefined,
                                "onSelect": undefined,
                                "onSort": undefined,
                                "rowLabeledBy": "simple-node",
                                "selectVariant": "checkbox",
                                "sortBy": undefined,
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Status",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "status",
                              "props": Object {
                                "data-key": 1,
                                "data-label": "Status",
                              },
                            },
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "canSelectAll": true,
                                "canSortFavorites": true,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": undefined,
                                "onExpand": undefined,
                                "onFavorite": undefined,
                                "onRowEdit": undefined,
                                "onSelect": undefined,
                                "onSort": undefined,
                                "rowLabeledBy": "simple-node",
                                "selectVariant": "checkbox",
                                "sortBy": undefined,
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Expiration time",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "expiration-time",
                              "props": Object {
                                "data-key": 2,
                                "data-label": "Expiration time",
                              },
                            },
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "canSelectAll": true,
                                "canSortFavorites": true,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": undefined,
                                "onExpand": undefined,
                                "onFavorite": undefined,
                                "onRowEdit": undefined,
                                "onSelect": undefined,
                                "onSort": undefined,
                                "rowLabeledBy": "simple-node",
                                "selectVariant": "checkbox",
                                "sortBy": undefined,
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Actions",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "actions",
                              "props": Object {
                                "data-key": 3,
                                "data-label": "Actions",
                              },
                            },
                          ]
                        }
                        headerRows={null}
                        onRow={[Function]}
                        onRowClick={[Function]}
                        rowKey="secretTableRowKeyId"
                        rows={
                          Array [
                            Object {
                              "cells": Array [
                                Object {
                                  "title": <Tooltip
                                    content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                  >
                                    <span>
                                      6e74a57
                                    </span>
                                  </Tooltip>,
                                },
                                Object {
                                  "title": <React.Fragment>
                                    <CheckCircleIcon
                                      className="pf-u-mr-sm"
                                      color="var(--pf-global--success-color--100)"
                                    />
                                    Executed
                                  </React.Fragment>,
                                },
                                Object {
                                  "title": <React.Fragment>
                                    N/A
                                  </React.Fragment>,
                                },
                                Object {
                                  "title": <MockedJobActionsKebab
                                    driver={
                                      Object {
                                        "abortProcess": [MockFunction],
                                        "cancelJob": [MockFunction],
                                        "getProcessDiagram": [MockFunction],
                                        "jobsQuery": [MockFunction],
                                        "processDetailsQuery": [MockFunction],
                                        "rescheduleJob": [MockFunction],
                                      }
                                    }
                                    job={
                                      Object {
                                        "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                        "endpoint": "http://localhost:4000",
                                        "expirationTime": null,
                                        "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                        "lastUpdate": 2020-08-27T03:35:50.147Z,
                                        "priority": 0,
                                        "processId": "travels",
                                        "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                        "repeatInterval": null,
                                        "repeatLimit": null,
                                        "retries": 0,
                                        "rootProcessId": null,
                                        "scheduledId": "0",
                                        "status": "EXECUTED",
                                      }
                                    }
                                  />,
                                },
                              ],
                            },
                          ]
                        }
                      >
                        <Component
                          className=""
                          headerRows={null}
                          mappedRows={
                            Array [
                              Object {
                                "actions": Object {
                                  "formatters": Array [],
                                  "props": Object {
                                    "isVisible": true,
                                  },
                                  "title": <MockedJobActionsKebab
                                    driver={
                                      Object {
                                        "abortProcess": [MockFunction],
                                        "cancelJob": [MockFunction],
                                        "getProcessDiagram": [MockFunction],
                                        "jobsQuery": [MockFunction],
                                        "processDetailsQuery": [MockFunction],
                                        "rescheduleJob": [MockFunction],
                                      }
                                    }
                                    job={
                                      Object {
                                        "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                        "endpoint": "http://localhost:4000",
                                        "expirationTime": null,
                                        "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                        "lastUpdate": 2020-08-27T03:35:50.147Z,
                                        "priority": 0,
                                        "processId": "travels",
                                        "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                        "repeatInterval": null,
                                        "repeatLimit": null,
                                        "retries": 0,
                                        "rootProcessId": null,
                                        "scheduledId": "0",
                                        "status": "EXECUTED",
                                      }
                                    }
                                  />,
                                },
                                "cells": Array [
                                  Object {
                                    "title": <Tooltip
                                      content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                    >
                                      <span>
                                        6e74a57
                                      </span>
                                    </Tooltip>,
                                  },
                                  Object {
                                    "title": <React.Fragment>
                                      <CheckCircleIcon
                                        className="pf-u-mr-sm"
                                        color="var(--pf-global--success-color--100)"
                                      />
                                      Executed
                                    </React.Fragment>,
                                  },
                                  Object {
                                    "title": <React.Fragment>
                                      N/A
                                    </React.Fragment>,
                                  },
                                  Object {
                                    "title": <MockedJobActionsKebab
                                      driver={
                                        Object {
                                          "abortProcess": [MockFunction],
                                          "cancelJob": [MockFunction],
                                          "getProcessDiagram": [MockFunction],
                                          "jobsQuery": [MockFunction],
                                          "processDetailsQuery": [MockFunction],
                                          "rescheduleJob": [MockFunction],
                                        }
                                      }
                                      job={
                                        Object {
                                          "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                          "endpoint": "http://localhost:4000",
                                          "expirationTime": null,
                                          "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                          "lastUpdate": 2020-08-27T03:35:50.147Z,
                                          "priority": 0,
                                          "processId": "travels",
                                          "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                          "repeatInterval": null,
                                          "repeatLimit": null,
                                          "retries": 0,
                                          "rootProcessId": null,
                                          "scheduledId": "0",
                                          "status": "EXECUTED",
                                        }
                                      }
                                    />,
                                  },
                                ],
                                "expiration-time": Object {
                                  "formatters": Array [],
                                  "props": Object {
                                    "isVisible": true,
                                  },
                                  "title": <React.Fragment>
                                    N/A
                                  </React.Fragment>,
                                },
                                "isExpanded": undefined,
                                "isFirst": true,
                                "isFirstVisible": true,
                                "isHeightAuto": false,
                                "isLast": true,
                                "isLastVisible": true,
                                "job-id": Object {
                                  "formatters": Array [],
                                  "props": Object {
                                    "isVisible": true,
                                  },
                                  "title": <Tooltip
                                    content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                  >
                                    <span>
                                      6e74a57
                                    </span>
                                  </Tooltip>,
                                },
                                "secretTableRowKeyId": 0,
                                "status": Object {
                                  "formatters": Array [],
                                  "props": Object {
                                    "isVisible": true,
                                  },
                                  "title": <React.Fragment>
                                    <CheckCircleIcon
                                      className="pf-u-mr-sm"
                                      color="var(--pf-global--success-color--100)"
                                    />
                                    Executed
                                  </React.Fragment>,
                                },
                              },
                            ]
                          }
                          onRow={[Function]}
                          rowKey="secretTableRowKeyId"
                          rows={
                            Array [
                              Object {
                                "actions": Object {
                                  "formatters": Array [],
                                  "props": Object {
                                    "isVisible": true,
                                  },
                                  "title": <MockedJobActionsKebab
                                    driver={
                                      Object {
                                        "abortProcess": [MockFunction],
                                        "cancelJob": [MockFunction],
                                        "getProcessDiagram": [MockFunction],
                                        "jobsQuery": [MockFunction],
                                        "processDetailsQuery": [MockFunction],
                                        "rescheduleJob": [MockFunction],
                                      }
                                    }
                                    job={
                                      Object {
                                        "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                        "endpoint": "http://localhost:4000",
                                        "expirationTime": null,
                                        "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                        "lastUpdate": 2020-08-27T03:35:50.147Z,
                                        "priority": 0,
                                        "processId": "travels",
                                        "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                        "repeatInterval": null,
                                        "repeatLimit": null,
                                        "retries": 0,
                                        "rootProcessId": null,
                                        "scheduledId": "0",
                                        "status": "EXECUTED",
                                      }
                                    }
                                  />,
                                },
                                "cells": Array [
                                  Object {
                                    "title": <Tooltip
                                      content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                    >
                                      <span>
                                        6e74a57
                                      </span>
                                    </Tooltip>,
                                  },
                                  Object {
                                    "title": <React.Fragment>
                                      <CheckCircleIcon
                                        className="pf-u-mr-sm"
                                        color="var(--pf-global--success-color--100)"
                                      />
                                      Executed
                                    </React.Fragment>,
                                  },
                                  Object {
                                    "title": <React.Fragment>
                                      N/A
                                    </React.Fragment>,
                                  },
                                  Object {
                                    "title": <MockedJobActionsKebab
                                      driver={
                                        Object {
                                          "abortProcess": [MockFunction],
                                          "cancelJob": [MockFunction],
                                          "getProcessDiagram": [MockFunction],
                                          "jobsQuery": [MockFunction],
                                          "processDetailsQuery": [MockFunction],
                                          "rescheduleJob": [MockFunction],
                                        }
                                      }
                                      job={
                                        Object {
                                          "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                          "endpoint": "http://localhost:4000",
                                          "expirationTime": null,
                                          "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                          "lastUpdate": 2020-08-27T03:35:50.147Z,
                                          "priority": 0,
                                          "processId": "travels",
                                          "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                          "repeatInterval": null,
                                          "repeatLimit": null,
                                          "retries": 0,
                                          "rootProcessId": null,
                                          "scheduledId": "0",
                                          "status": "EXECUTED",
                                        }
                                      }
                                    />,
                                  },
                                ],
                                "expiration-time": Object {
                                  "formatters": Array [],
                                  "props": Object {
                                    "isVisible": true,
                                  },
                                  "title": <React.Fragment>
                                    N/A
                                  </React.Fragment>,
                                },
                                "isExpanded": undefined,
                                "isFirst": true,
                                "isFirstVisible": true,
                                "isHeightAuto": false,
                                "isLast": true,
                                "isLastVisible": true,
                                "job-id": Object {
                                  "formatters": Array [],
                                  "props": Object {
                                    "isVisible": true,
                                  },
                                  "title": <Tooltip
                                    content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                  >
                                    <span>
                                      6e74a57
                                    </span>
                                  </Tooltip>,
                                },
                                "secretTableRowKeyId": 0,
                                "status": Object {
                                  "formatters": Array [],
                                  "props": Object {
                                    "isVisible": true,
                                  },
                                  "title": <React.Fragment>
                                    <CheckCircleIcon
                                      className="pf-u-mr-sm"
                                      color="var(--pf-global--success-color--100)"
                                    />
                                    Executed
                                  </React.Fragment>,
                                },
                              },
                            ]
                          }
                        >
                          <BaseBody
                            className=""
                            columns={
                              Array [
                                Object {
                                  "cell": Object {
                                    "formatters": Array [
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                  },
                                  "data": undefined,
                                  "extraParams": Object {
                                    "actionResolver": undefined,
                                    "actions": undefined,
                                    "allRowsSelected": false,
                                    "areActionsDisabled": undefined,
                                    "canSelectAll": true,
                                    "canSortFavorites": true,
                                    "contentId": "expanded-content",
                                    "dropdownDirection": "down",
                                    "dropdownPosition": "right",
                                    "expandId": "expandable-toggle",
                                    "firstUserColumnIndex": 0,
                                    "onCollapse": undefined,
                                    "onExpand": undefined,
                                    "onFavorite": undefined,
                                    "onRowEdit": undefined,
                                    "onSelect": undefined,
                                    "onSort": undefined,
                                    "rowLabeledBy": "simple-node",
                                    "selectVariant": "checkbox",
                                    "sortBy": undefined,
                                  },
                                  "header": Object {
                                    "formatters": Array [],
                                    "label": "Job id",
                                    "transforms": Array [
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                  "property": "job-id",
                                  "props": Object {
                                    "data-key": 0,
                                    "data-label": "Job id",
                                  },
                                },
                                Object {
                                  "cell": Object {
                                    "formatters": Array [
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                  },
                                  "data": undefined,
                                  "extraParams": Object {
                                    "actionResolver": undefined,
                                    "actions": undefined,
                                    "allRowsSelected": false,
                                    "areActionsDisabled": undefined,
                                    "canSelectAll": true,
                                    "canSortFavorites": true,
                                    "contentId": "expanded-content",
                                    "dropdownDirection": "down",
                                    "dropdownPosition": "right",
                                    "expandId": "expandable-toggle",
                                    "firstUserColumnIndex": 0,
                                    "onCollapse": undefined,
                                    "onExpand": undefined,
                                    "onFavorite": undefined,
                                    "onRowEdit": undefined,
                                    "onSelect": undefined,
                                    "onSort": undefined,
                                    "rowLabeledBy": "simple-node",
                                    "selectVariant": "checkbox",
                                    "sortBy": undefined,
                                  },
                                  "header": Object {
                                    "formatters": Array [],
                                    "label": "Status",
                                    "transforms": Array [
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                  "property": "status",
                                  "props": Object {
                                    "data-key": 1,
                                    "data-label": "Status",
                                  },
                                },
                                Object {
                                  "cell": Object {
                                    "formatters": Array [
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                  },
                                  "data": undefined,
                                  "extraParams": Object {
                                    "actionResolver": undefined,
                                    "actions": undefined,
                                    "allRowsSelected": false,
                                    "areActionsDisabled": undefined,
                                    "canSelectAll": true,
                                    "canSortFavorites": true,
                                    "contentId": "expanded-content",
                                    "dropdownDirection": "down",
                                    "dropdownPosition": "right",
                                    "expandId": "expandable-toggle",
                                    "firstUserColumnIndex": 0,
                                    "onCollapse": undefined,
                                    "onExpand": undefined,
                                    "onFavorite": undefined,
                                    "onRowEdit": undefined,
                                    "onSelect": undefined,
                                    "onSort": undefined,
                                    "rowLabeledBy": "simple-node",
                                    "selectVariant": "checkbox",
                                    "sortBy": undefined,
                                  },
                                  "header": Object {
                                    "formatters": Array [],
                                    "label": "Expiration time",
                                    "transforms": Array [
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                  "property": "expiration-time",
                                  "props": Object {
                                    "data-key": 2,
                                    "data-label": "Expiration time",
                                  },
                                },
                                Object {
                                  "cell": Object {
                                    "formatters": Array [
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                  },
                                  "data": undefined,
                                  "extraParams": Object {
                                    "actionResolver": undefined,
                                    "actions": undefined,
                                    "allRowsSelected": false,
                                    "areActionsDisabled": undefined,
                                    "canSelectAll": true,
                                    "canSortFavorites": true,
                                    "contentId": "expanded-content",
                                    "dropdownDirection": "down",
                                    "dropdownPosition": "right",
                                    "expandId": "expandable-toggle",
                                    "firstUserColumnIndex": 0,
                                    "onCollapse": undefined,
                                    "onExpand": undefined,
                                    "onFavorite": undefined,
                                    "onRowEdit": undefined,
                                    "onSelect": undefined,
                                    "onSort": undefined,
                                    "rowLabeledBy": "simple-node",
                                    "selectVariant": "checkbox",
                                    "sortBy": undefined,
                                  },
                                  "header": Object {
                                    "formatters": Array [],
                                    "label": "Actions",
                                    "transforms": Array [
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                  "property": "actions",
                                  "props": Object {
                                    "data-key": 3,
                                    "data-label": "Actions",
                                  },
                                },
                              ]
                            }
                            headerRows={null}
                            mappedRows={
                              Array [
                                Object {
                                  "actions": Object {
                                    "formatters": Array [],
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": <MockedJobActionsKebab
                                      driver={
                                        Object {
                                          "abortProcess": [MockFunction],
                                          "cancelJob": [MockFunction],
                                          "getProcessDiagram": [MockFunction],
                                          "jobsQuery": [MockFunction],
                                          "processDetailsQuery": [MockFunction],
                                          "rescheduleJob": [MockFunction],
                                        }
                                      }
                                      job={
                                        Object {
                                          "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                          "endpoint": "http://localhost:4000",
                                          "expirationTime": null,
                                          "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                          "lastUpdate": 2020-08-27T03:35:50.147Z,
                                          "priority": 0,
                                          "processId": "travels",
                                          "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                          "repeatInterval": null,
                                          "repeatLimit": null,
                                          "retries": 0,
                                          "rootProcessId": null,
                                          "scheduledId": "0",
                                          "status": "EXECUTED",
                                        }
                                      }
                                    />,
                                  },
                                  "cells": Array [
                                    Object {
                                      "title": <Tooltip
                                        content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                      >
                                        <span>
                                          6e74a57
                                        </span>
                                      </Tooltip>,
                                    },
                                    Object {
                                      "title": <React.Fragment>
                                        <CheckCircleIcon
                                          className="pf-u-mr-sm"
                                          color="var(--pf-global--success-color--100)"
                                        />
                                        Executed
                                      </React.Fragment>,
                                    },
                                    Object {
                                      "title": <React.Fragment>
                                        N/A
                                      </React.Fragment>,
                                    },
                                    Object {
                                      "title": <MockedJobActionsKebab
                                        driver={
                                          Object {
                                            "abortProcess": [MockFunction],
                                            "cancelJob": [MockFunction],
                                            "getProcessDiagram": [MockFunction],
                                            "jobsQuery": [MockFunction],
                                            "processDetailsQuery": [MockFunction],
                                            "rescheduleJob": [MockFunction],
                                          }
                                        }
                                        job={
                                          Object {
                                            "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                            "endpoint": "http://localhost:4000",
                                            "expirationTime": null,
                                            "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                            "lastUpdate": 2020-08-27T03:35:50.147Z,
                                            "priority": 0,
                                            "processId": "travels",
                                            "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                            "repeatInterval": null,
                                            "repeatLimit": null,
                                            "retries": 0,
                                            "rootProcessId": null,
                                            "scheduledId": "0",
                                            "status": "EXECUTED",
                                          }
                                        }
                                      />,
                                    },
                                  ],
                                  "expiration-time": Object {
                                    "formatters": Array [],
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": <React.Fragment>
                                      N/A
                                    </React.Fragment>,
                                  },
                                  "isExpanded": undefined,
                                  "isFirst": true,
                                  "isFirstVisible": true,
                                  "isHeightAuto": false,
                                  "isLast": true,
                                  "isLastVisible": true,
                                  "job-id": Object {
                                    "formatters": Array [],
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": <Tooltip
                                      content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                    >
                                      <span>
                                        6e74a57
                                      </span>
                                    </Tooltip>,
                                  },
                                  "secretTableRowKeyId": 0,
                                  "status": Object {
                                    "formatters": Array [],
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": <React.Fragment>
                                      <CheckCircleIcon
                                        className="pf-u-mr-sm"
                                        color="var(--pf-global--success-color--100)"
                                      />
                                      Executed
                                    </React.Fragment>,
                                  },
                                },
                              ]
                            }
                            onRow={[Function]}
                            renderers={
                              Object {
                                "body": Object {
                                  "cell": [Function],
                                  "row": [Function],
                                  "wrapper": [Function],
                                },
                                "header": Object {
                                  "cell": [Function],
                                  "row": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "displayName": "Tr",
                                    "render": [Function],
                                  },
                                  "wrapper": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "displayName": "Thead",
                                    "render": [Function],
                                  },
                                },
                                "table": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "displayName": "TableComposable",
                                  "render": [Function],
                                },
                              }
                            }
                            rowKey="secretTableRowKeyId"
                            rows={
                              Array [
                                Object {
                                  "actions": Object {
                                    "formatters": Array [],
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": <MockedJobActionsKebab
                                      driver={
                                        Object {
                                          "abortProcess": [MockFunction],
                                          "cancelJob": [MockFunction],
                                          "getProcessDiagram": [MockFunction],
                                          "jobsQuery": [MockFunction],
                                          "processDetailsQuery": [MockFunction],
                                          "rescheduleJob": [MockFunction],
                                        }
                                      }
                                      job={
                                        Object {
                                          "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                          "endpoint": "http://localhost:4000",
                                          "expirationTime": null,
                                          "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                          "lastUpdate": 2020-08-27T03:35:50.147Z,
                                          "priority": 0,
                                          "processId": "travels",
                                          "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                          "repeatInterval": null,
                                          "repeatLimit": null,
                                          "retries": 0,
                                          "rootProcessId": null,
                                          "scheduledId": "0",
                                          "status": "EXECUTED",
                                        }
                                      }
                                    />,
                                  },
                                  "cells": Array [
                                    Object {
                                      "title": <Tooltip
                                        content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                      >
                                        <span>
                                          6e74a57
                                        </span>
                                      </Tooltip>,
                                    },
                                    Object {
                                      "title": <React.Fragment>
                                        <CheckCircleIcon
                                          className="pf-u-mr-sm"
                                          color="var(--pf-global--success-color--100)"
                                        />
                                        Executed
                                      </React.Fragment>,
                                    },
                                    Object {
                                      "title": <React.Fragment>
                                        N/A
                                      </React.Fragment>,
                                    },
                                    Object {
                                      "title": <MockedJobActionsKebab
                                        driver={
                                          Object {
                                            "abortProcess": [MockFunction],
                                            "cancelJob": [MockFunction],
                                            "getProcessDiagram": [MockFunction],
                                            "jobsQuery": [MockFunction],
                                            "processDetailsQuery": [MockFunction],
                                            "rescheduleJob": [MockFunction],
                                          }
                                        }
                                        job={
                                          Object {
                                            "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                            "endpoint": "http://localhost:4000",
                                            "expirationTime": null,
                                            "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                            "lastUpdate": 2020-08-27T03:35:50.147Z,
                                            "priority": 0,
                                            "processId": "travels",
                                            "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                            "repeatInterval": null,
                                            "repeatLimit": null,
                                            "retries": 0,
                                            "rootProcessId": null,
                                            "scheduledId": "0",
                                            "status": "EXECUTED",
                                          }
                                        }
                                      />,
                                    },
                                  ],
                                  "expiration-time": Object {
                                    "formatters": Array [],
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": <React.Fragment>
                                      N/A
                                    </React.Fragment>,
                                  },
                                  "isExpanded": undefined,
                                  "isFirst": true,
                                  "isFirstVisible": true,
                                  "isHeightAuto": false,
                                  "isLast": true,
                                  "isLastVisible": true,
                                  "job-id": Object {
                                    "formatters": Array [],
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": <Tooltip
                                      content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                    >
                                      <span>
                                        6e74a57
                                      </span>
                                    </Tooltip>,
                                  },
                                  "secretTableRowKeyId": 0,
                                  "status": Object {
                                    "formatters": Array [],
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": <React.Fragment>
                                      <CheckCircleIcon
                                        className="pf-u-mr-sm"
                                        color="var(--pf-global--success-color--100)"
                                      />
                                      Executed
                                    </React.Fragment>,
                                  },
                                },
                              ]
                            }
                          >
                            <BodyWrapper
                              className=""
                              headerRows={null}
                              mappedRows={
                                Array [
                                  Object {
                                    "actions": Object {
                                      "formatters": Array [],
                                      "props": Object {
                                        "isVisible": true,
                                      },
                                      "title": <MockedJobActionsKebab
                                        driver={
                                          Object {
                                            "abortProcess": [MockFunction],
                                            "cancelJob": [MockFunction],
                                            "getProcessDiagram": [MockFunction],
                                            "jobsQuery": [MockFunction],
                                            "processDetailsQuery": [MockFunction],
                                            "rescheduleJob": [MockFunction],
                                          }
                                        }
                                        job={
                                          Object {
                                            "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                            "endpoint": "http://localhost:4000",
                                            "expirationTime": null,
                                            "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                            "lastUpdate": 2020-08-27T03:35:50.147Z,
                                            "priority": 0,
                                            "processId": "travels",
                                            "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                            "repeatInterval": null,
                                            "repeatLimit": null,
                                            "retries": 0,
                                            "rootProcessId": null,
                                            "scheduledId": "0",
                                            "status": "EXECUTED",
                                          }
                                        }
                                      />,
                                    },
                                    "cells": Array [
                                      Object {
                                        "title": <Tooltip
                                          content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                        >
                                          <span>
                                            6e74a57
                                          </span>
                                        </Tooltip>,
                                      },
                                      Object {
                                        "title": <React.Fragment>
                                          <CheckCircleIcon
                                            className="pf-u-mr-sm"
                                            color="var(--pf-global--success-color--100)"
                                          />
                                          Executed
                                        </React.Fragment>,
                                      },
                                      Object {
                                        "title": <React.Fragment>
                                          N/A
                                        </React.Fragment>,
                                      },
                                      Object {
                                        "title": <MockedJobActionsKebab
                                          driver={
                                            Object {
                                              "abortProcess": [MockFunction],
                                              "cancelJob": [MockFunction],
                                              "getProcessDiagram": [MockFunction],
                                              "jobsQuery": [MockFunction],
                                              "processDetailsQuery": [MockFunction],
                                              "rescheduleJob": [MockFunction],
                                            }
                                          }
                                          job={
                                            Object {
                                              "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                              "endpoint": "http://localhost:4000",
                                              "expirationTime": null,
                                              "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                              "lastUpdate": 2020-08-27T03:35:50.147Z,
                                              "priority": 0,
                                              "processId": "travels",
                                              "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                              "repeatInterval": null,
                                              "repeatLimit": null,
                                              "retries": 0,
                                              "rootProcessId": null,
                                              "scheduledId": "0",
                                              "status": "EXECUTED",
                                            }
                                          }
                                        />,
                                      },
                                    ],
                                    "expiration-time": Object {
                                      "formatters": Array [],
                                      "props": Object {
                                        "isVisible": true,
                                      },
                                      "title": <React.Fragment>
                                        N/A
                                      </React.Fragment>,
                                    },
                                    "isExpanded": undefined,
                                    "isFirst": true,
                                    "isFirstVisible": true,
                                    "isHeightAuto": false,
                                    "isLast": true,
                                    "isLastVisible": true,
                                    "job-id": Object {
                                      "formatters": Array [],
                                      "props": Object {
                                        "isVisible": true,
                                      },
                                      "title": <Tooltip
                                        content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                      >
                                        <span>
                                          6e74a57
                                        </span>
                                      </Tooltip>,
                                    },
                                    "secretTableRowKeyId": 0,
                                    "status": Object {
                                      "formatters": Array [],
                                      "props": Object {
                                        "isVisible": true,
                                      },
                                      "title": <React.Fragment>
                                        <CheckCircleIcon
                                          className="pf-u-mr-sm"
                                          color="var(--pf-global--success-color--100)"
                                        />
                                        Executed
                                      </React.Fragment>,
                                    },
                                  },
                                ]
                              }
                            >
                              <Tbody
                                className=""
                              >
                                <TbodyBase
                                  className=""
                                  innerRef={null}
                                >
                                  <tbody
                                    className=""
                                    role="rowgroup"
                                  >
                                    <BodyRow
                                      columns={
                                        Array [
                                          Object {
                                            "cell": Object {
                                              "formatters": Array [
                                                [Function],
                                              ],
                                              "transforms": Array [
                                                [Function],
                                              ],
                                            },
                                            "data": undefined,
                                            "extraParams": Object {
                                              "actionResolver": undefined,
                                              "actions": undefined,
                                              "allRowsSelected": false,
                                              "areActionsDisabled": undefined,
                                              "canSelectAll": true,
                                              "canSortFavorites": true,
                                              "contentId": "expanded-content",
                                              "dropdownDirection": "down",
                                              "dropdownPosition": "right",
                                              "expandId": "expandable-toggle",
                                              "firstUserColumnIndex": 0,
                                              "onCollapse": undefined,
                                              "onExpand": undefined,
                                              "onFavorite": undefined,
                                              "onRowEdit": undefined,
                                              "onSelect": undefined,
                                              "onSort": undefined,
                                              "rowLabeledBy": "simple-node",
                                              "selectVariant": "checkbox",
                                              "sortBy": undefined,
                                            },
                                            "header": Object {
                                              "formatters": Array [],
                                              "label": "Job id",
                                              "transforms": Array [
                                                [Function],
                                                [Function],
                                              ],
                                            },
                                            "property": "job-id",
                                            "props": Object {
                                              "data-key": 0,
                                              "data-label": "Job id",
                                            },
                                          },
                                          Object {
                                            "cell": Object {
                                              "formatters": Array [
                                                [Function],
                                              ],
                                              "transforms": Array [
                                                [Function],
                                              ],
                                            },
                                            "data": undefined,
                                            "extraParams": Object {
                                              "actionResolver": undefined,
                                              "actions": undefined,
                                              "allRowsSelected": false,
                                              "areActionsDisabled": undefined,
                                              "canSelectAll": true,
                                              "canSortFavorites": true,
                                              "contentId": "expanded-content",
                                              "dropdownDirection": "down",
                                              "dropdownPosition": "right",
                                              "expandId": "expandable-toggle",
                                              "firstUserColumnIndex": 0,
                                              "onCollapse": undefined,
                                              "onExpand": undefined,
                                              "onFavorite": undefined,
                                              "onRowEdit": undefined,
                                              "onSelect": undefined,
                                              "onSort": undefined,
                                              "rowLabeledBy": "simple-node",
                                              "selectVariant": "checkbox",
                                              "sortBy": undefined,
                                            },
                                            "header": Object {
                                              "formatters": Array [],
                                              "label": "Status",
                                              "transforms": Array [
                                                [Function],
                                                [Function],
                                              ],
                                            },
                                            "property": "status",
                                            "props": Object {
                                              "data-key": 1,
                                              "data-label": "Status",
                                            },
                                          },
                                          Object {
                                            "cell": Object {
                                              "formatters": Array [
                                                [Function],
                                              ],
                                              "transforms": Array [
                                                [Function],
                                              ],
                                            },
                                            "data": undefined,
                                            "extraParams": Object {
                                              "actionResolver": undefined,
                                              "actions": undefined,
                                              "allRowsSelected": false,
                                              "areActionsDisabled": undefined,
                                              "canSelectAll": true,
                                              "canSortFavorites": true,
                                              "contentId": "expanded-content",
                                              "dropdownDirection": "down",
                                              "dropdownPosition": "right",
                                              "expandId": "expandable-toggle",
                                              "firstUserColumnIndex": 0,
                                              "onCollapse": undefined,
                                              "onExpand": undefined,
                                              "onFavorite": undefined,
                                              "onRowEdit": undefined,
                                              "onSelect": undefined,
                                              "onSort": undefined,
                                              "rowLabeledBy": "simple-node",
                                              "selectVariant": "checkbox",
                                              "sortBy": undefined,
                                            },
                                            "header": Object {
                                              "formatters": Array [],
                                              "label": "Expiration time",
                                              "transforms": Array [
                                                [Function],
                                                [Function],
                                              ],
                                            },
                                            "property": "expiration-time",
                                            "props": Object {
                                              "data-key": 2,
                                              "data-label": "Expiration time",
                                            },
                                          },
                                          Object {
                                            "cell": Object {
                                              "formatters": Array [
                                                [Function],
                                              ],
                                              "transforms": Array [
                                                [Function],
                                              ],
                                            },
                                            "data": undefined,
                                            "extraParams": Object {
                                              "actionResolver": undefined,
                                              "actions": undefined,
                                              "allRowsSelected": false,
                                              "areActionsDisabled": undefined,
                                              "canSelectAll": true,
                                              "canSortFavorites": true,
                                              "contentId": "expanded-content",
                                              "dropdownDirection": "down",
                                              "dropdownPosition": "right",
                                              "expandId": "expandable-toggle",
                                              "firstUserColumnIndex": 0,
                                              "onCollapse": undefined,
                                              "onExpand": undefined,
                                              "onFavorite": undefined,
                                              "onRowEdit": undefined,
                                              "onSelect": undefined,
                                              "onSort": undefined,
                                              "rowLabeledBy": "simple-node",
                                              "selectVariant": "checkbox",
                                              "sortBy": undefined,
                                            },
                                            "header": Object {
                                              "formatters": Array [],
                                              "label": "Actions",
                                              "transforms": Array [
                                                [Function],
                                                [Function],
                                              ],
                                            },
                                            "property": "actions",
                                            "props": Object {
                                              "data-key": 3,
                                              "data-label": "Actions",
                                            },
                                          },
                                        ]
                                      }
                                      key="0-row"
                                      onRow={[Function]}
                                      renderers={
                                        Object {
                                          "cell": [Function],
                                          "row": [Function],
                                          "wrapper": [Function],
                                        }
                                      }
                                      rowData={
                                        Object {
                                          "actions": Object {
                                            "formatters": Array [],
                                            "props": Object {
                                              "isVisible": true,
                                            },
                                            "title": <MockedJobActionsKebab
                                              driver={
                                                Object {
                                                  "abortProcess": [MockFunction],
                                                  "cancelJob": [MockFunction],
                                                  "getProcessDiagram": [MockFunction],
                                                  "jobsQuery": [MockFunction],
                                                  "processDetailsQuery": [MockFunction],
                                                  "rescheduleJob": [MockFunction],
                                                }
                                              }
                                              job={
                                                Object {
                                                  "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                                  "endpoint": "http://localhost:4000",
                                                  "expirationTime": null,
                                                  "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                                  "lastUpdate": 2020-08-27T03:35:50.147Z,
                                                  "priority": 0,
                                                  "processId": "travels",
                                                  "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                                  "repeatInterval": null,
                                                  "repeatLimit": null,
                                                  "retries": 0,
                                                  "rootProcessId": null,
                                                  "scheduledId": "0",
                                                  "status": "EXECUTED",
                                                }
                                              }
                                            />,
                                          },
                                          "cells": Array [
                                            Object {
                                              "title": <Tooltip
                                                content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                              >
                                                <span>
                                                  6e74a57
                                                </span>
                                              </Tooltip>,
                                            },
                                            Object {
                                              "title": <React.Fragment>
                                                <CheckCircleIcon
                                                  className="pf-u-mr-sm"
                                                  color="var(--pf-global--success-color--100)"
                                                />
                                                Executed
                                              </React.Fragment>,
                                            },
                                            Object {
                                              "title": <React.Fragment>
                                                N/A
                                              </React.Fragment>,
                                            },
                                            Object {
                                              "title": <MockedJobActionsKebab
                                                driver={
                                                  Object {
                                                    "abortProcess": [MockFunction],
                                                    "cancelJob": [MockFunction],
                                                    "getProcessDiagram": [MockFunction],
                                                    "jobsQuery": [MockFunction],
                                                    "processDetailsQuery": [MockFunction],
                                                    "rescheduleJob": [MockFunction],
                                                  }
                                                }
                                                job={
                                                  Object {
                                                    "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                                    "endpoint": "http://localhost:4000",
                                                    "expirationTime": null,
                                                    "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                                    "lastUpdate": 2020-08-27T03:35:50.147Z,
                                                    "priority": 0,
                                                    "processId": "travels",
                                                    "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                                    "repeatInterval": null,
                                                    "repeatLimit": null,
                                                    "retries": 0,
                                                    "rootProcessId": null,
                                                    "scheduledId": "0",
                                                    "status": "EXECUTED",
                                                  }
                                                }
                                              />,
                                            },
                                          ],
                                          "expiration-time": Object {
                                            "formatters": Array [],
                                            "props": Object {
                                              "isVisible": true,
                                            },
                                            "title": <React.Fragment>
                                              N/A
                                            </React.Fragment>,
                                          },
                                          "isExpanded": undefined,
                                          "isFirst": true,
                                          "isFirstVisible": true,
                                          "isHeightAuto": false,
                                          "isLast": true,
                                          "isLastVisible": true,
                                          "job-id": Object {
                                            "formatters": Array [],
                                            "props": Object {
                                              "isVisible": true,
                                            },
                                            "title": <Tooltip
                                              content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                            >
                                              <span>
                                                6e74a57
                                              </span>
                                            </Tooltip>,
                                          },
                                          "secretTableRowKeyId": 0,
                                          "status": Object {
                                            "formatters": Array [],
                                            "props": Object {
                                              "isVisible": true,
                                            },
                                            "title": <React.Fragment>
                                              <CheckCircleIcon
                                                className="pf-u-mr-sm"
                                                color="var(--pf-global--success-color--100)"
                                              />
                                              Executed
                                            </React.Fragment>,
                                          },
                                        }
                                      }
                                      rowIndex={0}
                                      rowKey="0-row"
                                    >
                                      <RowWrapper
                                        className=""
                                        onMouseDown={[Function]}
                                        row={
                                          Object {
                                            "actions": Object {
                                              "formatters": Array [],
                                              "props": Object {
                                                "isVisible": true,
                                              },
                                              "title": <MockedJobActionsKebab
                                                driver={
                                                  Object {
                                                    "abortProcess": [MockFunction],
                                                    "cancelJob": [MockFunction],
                                                    "getProcessDiagram": [MockFunction],
                                                    "jobsQuery": [MockFunction],
                                                    "processDetailsQuery": [MockFunction],
                                                    "rescheduleJob": [MockFunction],
                                                  }
                                                }
                                                job={
                                                  Object {
                                                    "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                                    "endpoint": "http://localhost:4000",
                                                    "expirationTime": null,
                                                    "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                                    "lastUpdate": 2020-08-27T03:35:50.147Z,
                                                    "priority": 0,
                                                    "processId": "travels",
                                                    "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                                    "repeatInterval": null,
                                                    "repeatLimit": null,
                                                    "retries": 0,
                                                    "rootProcessId": null,
                                                    "scheduledId": "0",
                                                    "status": "EXECUTED",
                                                  }
                                                }
                                              />,
                                            },
                                            "cells": Array [
                                              Object {
                                                "title": <Tooltip
                                                  content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                                >
                                                  <span>
                                                    6e74a57
                                                  </span>
                                                </Tooltip>,
                                              },
                                              Object {
                                                "title": <React.Fragment>
                                                  <CheckCircleIcon
                                                    className="pf-u-mr-sm"
                                                    color="var(--pf-global--success-color--100)"
                                                  />
                                                  Executed
                                                </React.Fragment>,
                                              },
                                              Object {
                                                "title": <React.Fragment>
                                                  N/A
                                                </React.Fragment>,
                                              },
                                              Object {
                                                "title": <MockedJobActionsKebab
                                                  driver={
                                                    Object {
                                                      "abortProcess": [MockFunction],
                                                      "cancelJob": [MockFunction],
                                                      "getProcessDiagram": [MockFunction],
                                                      "jobsQuery": [MockFunction],
                                                      "processDetailsQuery": [MockFunction],
                                                      "rescheduleJob": [MockFunction],
                                                    }
                                                  }
                                                  job={
                                                    Object {
                                                      "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                                      "endpoint": "http://localhost:4000",
                                                      "expirationTime": null,
                                                      "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                                      "lastUpdate": 2020-08-27T03:35:50.147Z,
                                                      "priority": 0,
                                                      "processId": "travels",
                                                      "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                                      "repeatInterval": null,
                                                      "repeatLimit": null,
                                                      "retries": 0,
                                                      "rootProcessId": null,
                                                      "scheduledId": "0",
                                                      "status": "EXECUTED",
                                                    }
                                                  }
                                                />,
                                              },
                                            ],
                                            "expiration-time": Object {
                                              "formatters": Array [],
                                              "props": Object {
                                                "isVisible": true,
                                              },
                                              "title": <React.Fragment>
                                                N/A
                                              </React.Fragment>,
                                            },
                                            "isExpanded": undefined,
                                            "isFirst": true,
                                            "isFirstVisible": true,
                                            "isHeightAuto": false,
                                            "isLast": true,
                                            "isLastVisible": true,
                                            "job-id": Object {
                                              "formatters": Array [],
                                              "props": Object {
                                                "isVisible": true,
                                              },
                                              "title": <Tooltip
                                                content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                              >
                                                <span>
                                                  6e74a57
                                                </span>
                                              </Tooltip>,
                                            },
                                            "secretTableRowKeyId": 0,
                                            "status": Object {
                                              "formatters": Array [],
                                              "props": Object {
                                                "isVisible": true,
                                              },
                                              "title": <React.Fragment>
                                                <CheckCircleIcon
                                                  className="pf-u-mr-sm"
                                                  color="var(--pf-global--success-color--100)"
                                                />
                                                Executed
                                              </React.Fragment>,
                                            },
                                          }
                                        }
                                        rowProps={
                                          Object {
                                            "rowIndex": 0,
                                            "rowKey": "0-row",
                                          }
                                        }
                                      >
                                        <Tr
                                          className=""
                                          onMouseDown={[Function]}
                                        >
                                          <TrBase
                                            className=""
                                            innerRef={null}
                                            onMouseDown={[Function]}
                                          >
                                            <tr
                                              className=""
                                              data-ouia-component-id="OUIA-Generated-TableRow-2"
                                              data-ouia-component-type="PF4/TableRow"
                                              data-ouia-safe={true}
                                              hidden={false}
                                              onMouseDown={[Function]}
                                            >
                                              <BodyCell
                                                data-key={0}
                                                data-label="Job id"
                                                isVisible={true}
                                                key="col-0-row-0"
                                              >
                                                <Td
                                                  className=""
                                                  component="td"
                                                  data-key={0}
                                                  dataLabel="Job id"
                                                  onMouseEnter={[Function]}
                                                  textCenter={false}
                                                >
                                                  <TdBase
                                                    className=""
                                                    component="td"
                                                    data-key={0}
                                                    dataLabel="Job id"
                                                    innerRef={null}
                                                    onMouseEnter={[Function]}
                                                    textCenter={false}
                                                  >
                                                    <td
                                                      className=""
                                                      data-key={0}
                                                      data-label="Job id"
                                                      onMouseEnter={[Function]}
                                                    >
                                                      <Tooltip
                                                        content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                                      >
                                                        <Popper
                                                          appendTo={[Function]}
                                                          distance={15}
                                                          enableFlip={true}
                                                          flipBehavior={
                                                            Array [
                                                              "top",
                                                              "right",
                                                              "bottom",
                                                              "left",
                                                              "top",
                                                              "right",
                                                              "bottom",
                                                            ]
                                                          }
                                                          isVisible={false}
                                                          onBlur={[Function]}
                                                          onDocumentClick={false}
                                                          onDocumentKeyDown={[Function]}
                                                          onFocus={[Function]}
                                                          onMouseEnter={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onTriggerEnter={[Function]}
                                                          placement="top"
                                                          popper={
                                                            <div
                                                              className="pf-c-tooltip"
                                                              id="pf-tooltip-1"
                                                              role="tooltip"
                                                              style={
                                                                Object {
                                                                  "maxWidth": null,
                                                                  "opacity": 0,
                                                                  "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                                                }
                                                              }
                                                            >
                                                              <TooltipArrow />
                                                              <TooltipContent
                                                                isLeftAligned={false}
                                                              >
                                                                6e74a570-31c8-4020-bd70-19be2cb625f3_0
                                                              </TooltipContent>
                                                            </div>
                                                          }
                                                          popperMatchesTriggerWidth={false}
                                                          positionModifiers={
                                                            Object {
                                                              "bottom": "pf-m-bottom",
                                                              "left": "pf-m-left",
                                                              "right": "pf-m-right",
                                                              "top": "pf-m-top",
                                                            }
                                                          }
                                                          trigger={
                                                            <span
                                                              aria-describedby="pf-tooltip-1"
                                                            >
                                                              6e74a57
                                                            </span>
                                                          }
                                                          zIndex={9999}
                                                        >
                                                          <FindRefWrapper
                                                            onFoundRef={[Function]}
                                                          >
                                                            <span
                                                              aria-describedby="pf-tooltip-1"
                                                            >
                                                              6e74a57
                                                            </span>
                                                          </FindRefWrapper>
                                                        </Popper>
                                                      </Tooltip>
                                                    </td>
                                                  </TdBase>
                                                </Td>
                                              </BodyCell>
                                              <BodyCell
                                                data-key={1}
                                                data-label="Status"
                                                isVisible={true}
                                                key="col-1-row-0"
                                              >
                                                <Td
                                                  className=""
                                                  component="td"
                                                  data-key={1}
                                                  dataLabel="Status"
                                                  onMouseEnter={[Function]}
                                                  textCenter={false}
                                                >
                                                  <TdBase
                                                    className=""
                                                    component="td"
                                                    data-key={1}
                                                    dataLabel="Status"
                                                    innerRef={null}
                                                    onMouseEnter={[Function]}
                                                    textCenter={false}
                                                  >
                                                    <td
                                                      className=""
                                                      data-key={1}
                                                      data-label="Status"
                                                      onMouseEnter={[Function]}
                                                    >
                                                      <CheckCircleIcon
                                                        className="pf-u-mr-sm"
                                                        color="var(--pf-global--success-color--100)"
                                                      >
                                                        <MockedComponent />
                                                      </CheckCircleIcon>
                                                      Executed
                                                    </td>
                                                  </TdBase>
                                                </Td>
                                              </BodyCell>
                                              <BodyCell
                                                data-key={2}
                                                data-label="Expiration time"
                                                isVisible={true}
                                                key="col-2-row-0"
                                              >
                                                <Td
                                                  className=""
                                                  component="td"
                                                  data-key={2}
                                                  dataLabel="Expiration time"
                                                  onMouseEnter={[Function]}
                                                  textCenter={false}
                                                >
                                                  <TdBase
                                                    className=""
                                                    component="td"
                                                    data-key={2}
                                                    dataLabel="Expiration time"
                                                    innerRef={null}
                                                    onMouseEnter={[Function]}
                                                    textCenter={false}
                                                  >
                                                    <td
                                                      className=""
                                                      data-key={2}
                                                      data-label="Expiration time"
                                                      onMouseEnter={[Function]}
                                                    >
                                                      N/A
                                                    </td>
                                                  </TdBase>
                                                </Td>
                                              </BodyCell>
                                              <BodyCell
                                                data-key={3}
                                                data-label="Actions"
                                                isVisible={true}
                                                key="col-3-row-0"
                                              >
                                                <Td
                                                  className=""
                                                  component="td"
                                                  data-key={3}
                                                  dataLabel="Actions"
                                                  onMouseEnter={[Function]}
                                                  textCenter={false}
                                                >
                                                  <TdBase
                                                    className=""
                                                    component="td"
                                                    data-key={3}
                                                    dataLabel="Actions"
                                                    innerRef={null}
                                                    onMouseEnter={[Function]}
                                                    textCenter={false}
                                                  >
                                                    <td
                                                      className=""
                                                      data-key={3}
                                                      data-label="Actions"
                                                      onMouseEnter={[Function]}
                                                    >
                                                      <MockedJobActionsKebab
                                                        driver={
                                                          Object {
                                                            "abortProcess": [MockFunction],
                                                            "cancelJob": [MockFunction],
                                                            "getProcessDiagram": [MockFunction],
                                                            "jobsQuery": [MockFunction],
                                                            "processDetailsQuery": [MockFunction],
                                                            "rescheduleJob": [MockFunction],
                                                          }
                                                        }
                                                        job={
                                                          Object {
                                                            "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                                            "endpoint": "http://localhost:4000",
                                                            "expirationTime": null,
                                                            "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                                            "lastUpdate": 2020-08-27T03:35:50.147Z,
                                                            "priority": 0,
                                                            "processId": "travels",
                                                            "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                                            "repeatInterval": null,
                                                            "repeatLimit": null,
                                                            "retries": 0,
                                                            "rootProcessId": null,
                                                            "scheduledId": "0",
                                                            "status": "EXECUTED",
                                                          }
                                                        }
                                                      />
                                                    </td>
                                                  </TdBase>
                                                </Td>
                                              </BodyCell>
                                            </tr>
                                          </TrBase>
                                        </Tr>
                                      </RowWrapper>
                                    </BodyRow>
                                  </tbody>
                                </TbodyBase>
                              </Tbody>
                            </BodyWrapper>
                          </BaseBody>
                        </Component>
                      </ContextBody>
                    </Component>
                  </table>
                </TableComposableBase>
              </TableComposable>
            </Provider>
          </Table>
        </div>
      </CardBody>
    </article>
  </Card>
</JobsPanel>
`;

exports[`Processdetails jobs pannel component tests test expiration time 1`] = `
<JobsPanel
  driver={
    Object {
      "abortProcess": [MockFunction],
      "cancelJob": [MockFunction],
      "getProcessDiagram": [MockFunction],
      "jobsQuery": [MockFunction],
      "processDetailsQuery": [MockFunction],
      "rescheduleJob": [MockFunction],
    }
  }
  jobs={
    Array [
      Object {
        "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
        "endpoint": "http://localhost:4000",
        "expirationTime": 2020-08-29T03:35:50.147Z,
        "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
        "lastUpdate": 2020-08-27T03:35:50.147Z,
        "priority": 0,
        "processId": "travels",
        "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
        "repeatInterval": null,
        "repeatLimit": null,
        "retries": 0,
        "rootProcessId": null,
        "scheduledId": "0",
        "status": "EXECUTED",
      },
    ]
  }
  ouiaSafe={true}
>
  <Card
    data-ouia-component-type="process-details-jobs-panel"
    data-ouia-safe={true}
  >
    <article
      className="pf-c-card"
      data-ouia-component-id="OUIA-Generated-Card-2"
      data-ouia-component-type="PF4/Card"
      data-ouia-safe={true}
      id=""
    >
      <CardHeader>
        <div
          className="pf-c-card__header"
        >
          <Title
            headingLevel="h3"
            size="xl"
          >
            <h3
              className="pf-c-title pf-m-xl"
            >
              Jobs
            </h3>
          </Title>
        </div>
      </CardHeader>
      <CardBody>
        <div
          className="pf-c-card__body"
        >
          <Table
            aria-label="Process details jobs panel"
            aria-labelledby="Process details jobs panel"
            borders={true}
            canSelectAll={true}
            canSortFavorites={true}
            cells={
              Array [
                Object {
                  "title": "Job id",
                },
                Object {
                  "title": "Status",
                },
                Object {
                  "title": "Expiration time",
                },
                Object {
                  "title": "Actions",
                },
              ]
            }
            className=""
            contentId="expanded-content"
            dropdownDirection="down"
            dropdownPosition="right"
            expandId="expandable-toggle"
            gridBreakPoint="grid-md"
            isStickyHeader={false}
            ouiaSafe={true}
            role="grid"
            rowLabeledBy="simple-node"
            rows={
              Array [
                Object {
                  "cells": Array [
                    Object {
                      "title": <Tooltip
                        content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                      >
                        <span>
                          6e74a57
                        </span>
                      </Tooltip>,
                    },
                    Object {
                      "title": <React.Fragment>
                        <CheckCircleIcon
                          className="pf-u-mr-sm"
                          color="var(--pf-global--success-color--100)"
                        />
                        Executed
                      </React.Fragment>,
                    },
                    Object {
                      "title": <React.Fragment>
                        <React.Fragment>
                           
                          expires in
                           
                          <t
                            ago={true}
                            calendar={false}
                            decimal={false}
                            element={null}
                            filter={[Function]}
                            fromNow={true}
                            interval={60000}
                            local={false}
                            onChange={[Function]}
                            titleFormat=""
                            toNow={false}
                            unit={null}
                            unix={false}
                            utc={false}
                            withTitle={false}
                          >
                            2020-08-29T03:35:50.147Z
                          </t>
                        </React.Fragment>
                      </React.Fragment>,
                    },
                    Object {
                      "title": <MockedJobActionsKebab
                        driver={
                          Object {
                            "abortProcess": [MockFunction],
                            "cancelJob": [MockFunction],
                            "getProcessDiagram": [MockFunction],
                            "jobsQuery": [MockFunction],
                            "processDetailsQuery": [MockFunction],
                            "rescheduleJob": [MockFunction],
                          }
                        }
                        job={
                          Object {
                            "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                            "endpoint": "http://localhost:4000",
                            "expirationTime": 2020-08-29T03:35:50.147Z,
                            "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                            "lastUpdate": 2020-08-27T03:35:50.147Z,
                            "priority": 0,
                            "processId": "travels",
                            "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                            "repeatInterval": null,
                            "repeatLimit": null,
                            "retries": 0,
                            "rootProcessId": null,
                            "scheduledId": "0",
                            "status": "EXECUTED",
                          }
                        }
                      />,
                    },
                  ],
                },
              ]
            }
            selectVariant="checkbox"
            variant="compact"
          >
            <Provider
              aria-label="Process details jobs panel"
              aria-labelledby="Process details jobs panel"
              borders={true}
              className=""
              columns={
                Array [
                  Object {
                    "cell": Object {
                      "formatters": Array [
                        [Function],
                      ],
                      "transforms": Array [
                        [Function],
                      ],
                    },
                    "data": undefined,
                    "extraParams": Object {
                      "actionResolver": undefined,
                      "actions": undefined,
                      "allRowsSelected": false,
                      "areActionsDisabled": undefined,
                      "canSelectAll": true,
                      "canSortFavorites": true,
                      "contentId": "expanded-content",
                      "dropdownDirection": "down",
                      "dropdownPosition": "right",
                      "expandId": "expandable-toggle",
                      "firstUserColumnIndex": 0,
                      "onCollapse": undefined,
                      "onExpand": undefined,
                      "onFavorite": undefined,
                      "onRowEdit": undefined,
                      "onSelect": undefined,
                      "onSort": undefined,
                      "rowLabeledBy": "simple-node",
                      "selectVariant": "checkbox",
                      "sortBy": undefined,
                    },
                    "header": Object {
                      "formatters": Array [],
                      "label": "Job id",
                      "transforms": Array [
                        [Function],
                        [Function],
                      ],
                    },
                    "property": "job-id",
                    "props": Object {
                      "data-key": 0,
                      "data-label": "Job id",
                    },
                  },
                  Object {
                    "cell": Object {
                      "formatters": Array [
                        [Function],
                      ],
                      "transforms": Array [
                        [Function],
                      ],
                    },
                    "data": undefined,
                    "extraParams": Object {
                      "actionResolver": undefined,
                      "actions": undefined,
                      "allRowsSelected": false,
                      "areActionsDisabled": undefined,
                      "canSelectAll": true,
                      "canSortFavorites": true,
                      "contentId": "expanded-content",
                      "dropdownDirection": "down",
                      "dropdownPosition": "right",
                      "expandId": "expandable-toggle",
                      "firstUserColumnIndex": 0,
                      "onCollapse": undefined,
                      "onExpand": undefined,
                      "onFavorite": undefined,
                      "onRowEdit": undefined,
                      "onSelect": undefined,
                      "onSort": undefined,
                      "rowLabeledBy": "simple-node",
                      "selectVariant": "checkbox",
                      "sortBy": undefined,
                    },
                    "header": Object {
                      "formatters": Array [],
                      "label": "Status",
                      "transforms": Array [
                        [Function],
                        [Function],
                      ],
                    },
                    "property": "status",
                    "props": Object {
                      "data-key": 1,
                      "data-label": "Status",
                    },
                  },
                  Object {
                    "cell": Object {
                      "formatters": Array [
                        [Function],
                      ],
                      "transforms": Array [
                        [Function],
                      ],
                    },
                    "data": undefined,
                    "extraParams": Object {
                      "actionResolver": undefined,
                      "actions": undefined,
                      "allRowsSelected": false,
                      "areActionsDisabled": undefined,
                      "canSelectAll": true,
                      "canSortFavorites": true,
                      "contentId": "expanded-content",
                      "dropdownDirection": "down",
                      "dropdownPosition": "right",
                      "expandId": "expandable-toggle",
                      "firstUserColumnIndex": 0,
                      "onCollapse": undefined,
                      "onExpand": undefined,
                      "onFavorite": undefined,
                      "onRowEdit": undefined,
                      "onSelect": undefined,
                      "onSort": undefined,
                      "rowLabeledBy": "simple-node",
                      "selectVariant": "checkbox",
                      "sortBy": undefined,
                    },
                    "header": Object {
                      "formatters": Array [],
                      "label": "Expiration time",
                      "transforms": Array [
                        [Function],
                        [Function],
                      ],
                    },
                    "property": "expiration-time",
                    "props": Object {
                      "data-key": 2,
                      "data-label": "Expiration time",
                    },
                  },
                  Object {
                    "cell": Object {
                      "formatters": Array [
                        [Function],
                      ],
                      "transforms": Array [
                        [Function],
                      ],
                    },
                    "data": undefined,
                    "extraParams": Object {
                      "actionResolver": undefined,
                      "actions": undefined,
                      "allRowsSelected": false,
                      "areActionsDisabled": undefined,
                      "canSelectAll": true,
                      "canSortFavorites": true,
                      "contentId": "expanded-content",
                      "dropdownDirection": "down",
                      "dropdownPosition": "right",
                      "expandId": "expandable-toggle",
                      "firstUserColumnIndex": 0,
                      "onCollapse": undefined,
                      "onExpand": undefined,
                      "onFavorite": undefined,
                      "onRowEdit": undefined,
                      "onSelect": undefined,
                      "onSort": undefined,
                      "rowLabeledBy": "simple-node",
                      "selectVariant": "checkbox",
                      "sortBy": undefined,
                    },
                    "header": Object {
                      "formatters": Array [],
                      "label": "Actions",
                      "transforms": Array [
                        [Function],
                        [Function],
                      ],
                    },
                    "property": "actions",
                    "props": Object {
                      "data-key": 3,
                      "data-label": "Actions",
                    },
                  },
                ]
              }
              gridBreakPoint="grid-md"
              isStickyHeader={false}
              ouiaSafe={true}
              renderers={
                Object {
                  "body": Object {
                    "cell": [Function],
                    "row": [Function],
                    "wrapper": [Function],
                  },
                  "header": Object {
                    "cell": [Function],
                  },
                }
              }
              role="grid"
              variant="compact"
            >
              <TableComposable
                aria-label="Process details jobs panel"
                aria-labelledby="Process details jobs panel"
                borders={true}
                className=""
                gridBreakPoint="grid-md"
                isStickyHeader={false}
                ouiaSafe={true}
                role="grid"
                variant="compact"
              >
                <TableComposableBase
                  aria-label="Process details jobs panel"
                  aria-labelledby="Process details jobs panel"
                  borders={true}
                  className=""
                  gridBreakPoint="grid-md"
                  innerRef={null}
                  isStickyHeader={false}
                  ouiaSafe={true}
                  role="grid"
                  variant="compact"
                >
                  <table
                    aria-label="Process details jobs panel"
                    aria-labelledby="Process details jobs panel"
                    className="pf-c-table pf-m-grid-md pf-m-compact"
                    data-ouia-component-id="OUIA-Generated-Table-4"
                    data-ouia-component-type="PF4/Table"
                    data-ouia-safe={true}
                    role="grid"
                  >
                    <TableHeader>
                      <ContextHeader
                        headerRows={null}
                      >
                        <Component
                          className=""
                          headerRows={null}
                        >
                          <BaseHeader
                            className=""
                            columns={
                              Array [
                                Object {
                                  "cell": Object {
                                    "formatters": Array [
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                  },
                                  "data": undefined,
                                  "extraParams": Object {
                                    "actionResolver": undefined,
                                    "actions": undefined,
                                    "allRowsSelected": false,
                                    "areActionsDisabled": undefined,
                                    "canSelectAll": true,
                                    "canSortFavorites": true,
                                    "contentId": "expanded-content",
                                    "dropdownDirection": "down",
                                    "dropdownPosition": "right",
                                    "expandId": "expandable-toggle",
                                    "firstUserColumnIndex": 0,
                                    "onCollapse": undefined,
                                    "onExpand": undefined,
                                    "onFavorite": undefined,
                                    "onRowEdit": undefined,
                                    "onSelect": undefined,
                                    "onSort": undefined,
                                    "rowLabeledBy": "simple-node",
                                    "selectVariant": "checkbox",
                                    "sortBy": undefined,
                                  },
                                  "header": Object {
                                    "formatters": Array [],
                                    "label": "Job id",
                                    "transforms": Array [
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                  "property": "job-id",
                                  "props": Object {
                                    "data-key": 0,
                                    "data-label": "Job id",
                                  },
                                },
                                Object {
                                  "cell": Object {
                                    "formatters": Array [
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                  },
                                  "data": undefined,
                                  "extraParams": Object {
                                    "actionResolver": undefined,
                                    "actions": undefined,
                                    "allRowsSelected": false,
                                    "areActionsDisabled": undefined,
                                    "canSelectAll": true,
                                    "canSortFavorites": true,
                                    "contentId": "expanded-content",
                                    "dropdownDirection": "down",
                                    "dropdownPosition": "right",
                                    "expandId": "expandable-toggle",
                                    "firstUserColumnIndex": 0,
                                    "onCollapse": undefined,
                                    "onExpand": undefined,
                                    "onFavorite": undefined,
                                    "onRowEdit": undefined,
                                    "onSelect": undefined,
                                    "onSort": undefined,
                                    "rowLabeledBy": "simple-node",
                                    "selectVariant": "checkbox",
                                    "sortBy": undefined,
                                  },
                                  "header": Object {
                                    "formatters": Array [],
                                    "label": "Status",
                                    "transforms": Array [
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                  "property": "status",
                                  "props": Object {
                                    "data-key": 1,
                                    "data-label": "Status",
                                  },
                                },
                                Object {
                                  "cell": Object {
                                    "formatters": Array [
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                  },
                                  "data": undefined,
                                  "extraParams": Object {
                                    "actionResolver": undefined,
                                    "actions": undefined,
                                    "allRowsSelected": false,
                                    "areActionsDisabled": undefined,
                                    "canSelectAll": true,
                                    "canSortFavorites": true,
                                    "contentId": "expanded-content",
                                    "dropdownDirection": "down",
                                    "dropdownPosition": "right",
                                    "expandId": "expandable-toggle",
                                    "firstUserColumnIndex": 0,
                                    "onCollapse": undefined,
                                    "onExpand": undefined,
                                    "onFavorite": undefined,
                                    "onRowEdit": undefined,
                                    "onSelect": undefined,
                                    "onSort": undefined,
                                    "rowLabeledBy": "simple-node",
                                    "selectVariant": "checkbox",
                                    "sortBy": undefined,
                                  },
                                  "header": Object {
                                    "formatters": Array [],
                                    "label": "Expiration time",
                                    "transforms": Array [
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                  "property": "expiration-time",
                                  "props": Object {
                                    "data-key": 2,
                                    "data-label": "Expiration time",
                                  },
                                },
                                Object {
                                  "cell": Object {
                                    "formatters": Array [
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                  },
                                  "data": undefined,
                                  "extraParams": Object {
                                    "actionResolver": undefined,
                                    "actions": undefined,
                                    "allRowsSelected": false,
                                    "areActionsDisabled": undefined,
                                    "canSelectAll": true,
                                    "canSortFavorites": true,
                                    "contentId": "expanded-content",
                                    "dropdownDirection": "down",
                                    "dropdownPosition": "right",
                                    "expandId": "expandable-toggle",
                                    "firstUserColumnIndex": 0,
                                    "onCollapse": undefined,
                                    "onExpand": undefined,
                                    "onFavorite": undefined,
                                    "onRowEdit": undefined,
                                    "onSelect": undefined,
                                    "onSort": undefined,
                                    "rowLabeledBy": "simple-node",
                                    "selectVariant": "checkbox",
                                    "sortBy": undefined,
                                  },
                                  "header": Object {
                                    "formatters": Array [],
                                    "label": "Actions",
                                    "transforms": Array [
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                  "property": "actions",
                                  "props": Object {
                                    "data-key": 3,
                                    "data-label": "Actions",
                                  },
                                },
                              ]
                            }
                            headerRows={null}
                            renderers={
                              Object {
                                "body": Object {
                                  "cell": [Function],
                                  "row": [Function],
                                  "wrapper": [Function],
                                },
                                "header": Object {
                                  "cell": [Function],
                                  "row": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "displayName": "Tr",
                                    "render": [Function],
                                  },
                                  "wrapper": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "displayName": "Thead",
                                    "render": [Function],
                                  },
                                },
                                "table": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "displayName": "TableComposable",
                                  "render": [Function],
                                },
                              }
                            }
                          >
                            <Thead
                              className=""
                            >
                              <TheadBase
                                className=""
                                innerRef={null}
                              >
                                <thead
                                  className=""
                                >
                                  <HeaderRow
                                    key="0-header-row"
                                    renderers={
                                      Object {
                                        "cell": [Function],
                                        "row": Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Tr",
                                          "render": [Function],
                                        },
                                        "wrapper": Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Thead",
                                          "render": [Function],
                                        },
                                      }
                                    }
                                    rowData={
                                      Array [
                                        Object {
                                          "cell": Object {
                                            "formatters": Array [
                                              [Function],
                                            ],
                                            "transforms": Array [
                                              [Function],
                                            ],
                                          },
                                          "data": undefined,
                                          "extraParams": Object {
                                            "actionResolver": undefined,
                                            "actions": undefined,
                                            "allRowsSelected": false,
                                            "areActionsDisabled": undefined,
                                            "canSelectAll": true,
                                            "canSortFavorites": true,
                                            "contentId": "expanded-content",
                                            "dropdownDirection": "down",
                                            "dropdownPosition": "right",
                                            "expandId": "expandable-toggle",
                                            "firstUserColumnIndex": 0,
                                            "onCollapse": undefined,
                                            "onExpand": undefined,
                                            "onFavorite": undefined,
                                            "onRowEdit": undefined,
                                            "onSelect": undefined,
                                            "onSort": undefined,
                                            "rowLabeledBy": "simple-node",
                                            "selectVariant": "checkbox",
                                            "sortBy": undefined,
                                          },
                                          "header": Object {
                                            "formatters": Array [],
                                            "label": "Job id",
                                            "transforms": Array [
                                              [Function],
                                              [Function],
                                            ],
                                          },
                                          "property": "job-id",
                                          "props": Object {
                                            "data-key": 0,
                                            "data-label": "Job id",
                                          },
                                        },
                                        Object {
                                          "cell": Object {
                                            "formatters": Array [
                                              [Function],
                                            ],
                                            "transforms": Array [
                                              [Function],
                                            ],
                                          },
                                          "data": undefined,
                                          "extraParams": Object {
                                            "actionResolver": undefined,
                                            "actions": undefined,
                                            "allRowsSelected": false,
                                            "areActionsDisabled": undefined,
                                            "canSelectAll": true,
                                            "canSortFavorites": true,
                                            "contentId": "expanded-content",
                                            "dropdownDirection": "down",
                                            "dropdownPosition": "right",
                                            "expandId": "expandable-toggle",
                                            "firstUserColumnIndex": 0,
                                            "onCollapse": undefined,
                                            "onExpand": undefined,
                                            "onFavorite": undefined,
                                            "onRowEdit": undefined,
                                            "onSelect": undefined,
                                            "onSort": undefined,
                                            "rowLabeledBy": "simple-node",
                                            "selectVariant": "checkbox",
                                            "sortBy": undefined,
                                          },
                                          "header": Object {
                                            "formatters": Array [],
                                            "label": "Status",
                                            "transforms": Array [
                                              [Function],
                                              [Function],
                                            ],
                                          },
                                          "property": "status",
                                          "props": Object {
                                            "data-key": 1,
                                            "data-label": "Status",
                                          },
                                        },
                                        Object {
                                          "cell": Object {
                                            "formatters": Array [
                                              [Function],
                                            ],
                                            "transforms": Array [
                                              [Function],
                                            ],
                                          },
                                          "data": undefined,
                                          "extraParams": Object {
                                            "actionResolver": undefined,
                                            "actions": undefined,
                                            "allRowsSelected": false,
                                            "areActionsDisabled": undefined,
                                            "canSelectAll": true,
                                            "canSortFavorites": true,
                                            "contentId": "expanded-content",
                                            "dropdownDirection": "down",
                                            "dropdownPosition": "right",
                                            "expandId": "expandable-toggle",
                                            "firstUserColumnIndex": 0,
                                            "onCollapse": undefined,
                                            "onExpand": undefined,
                                            "onFavorite": undefined,
                                            "onRowEdit": undefined,
                                            "onSelect": undefined,
                                            "onSort": undefined,
                                            "rowLabeledBy": "simple-node",
                                            "selectVariant": "checkbox",
                                            "sortBy": undefined,
                                          },
                                          "header": Object {
                                            "formatters": Array [],
                                            "label": "Expiration time",
                                            "transforms": Array [
                                              [Function],
                                              [Function],
                                            ],
                                          },
                                          "property": "expiration-time",
                                          "props": Object {
                                            "data-key": 2,
                                            "data-label": "Expiration time",
                                          },
                                        },
                                        Object {
                                          "cell": Object {
                                            "formatters": Array [
                                              [Function],
                                            ],
                                            "transforms": Array [
                                              [Function],
                                            ],
                                          },
                                          "data": undefined,
                                          "extraParams": Object {
                                            "actionResolver": undefined,
                                            "actions": undefined,
                                            "allRowsSelected": false,
                                            "areActionsDisabled": undefined,
                                            "canSelectAll": true,
                                            "canSortFavorites": true,
                                            "contentId": "expanded-content",
                                            "dropdownDirection": "down",
                                            "dropdownPosition": "right",
                                            "expandId": "expandable-toggle",
                                            "firstUserColumnIndex": 0,
                                            "onCollapse": undefined,
                                            "onExpand": undefined,
                                            "onFavorite": undefined,
                                            "onRowEdit": undefined,
                                            "onSelect": undefined,
                                            "onSort": undefined,
                                            "rowLabeledBy": "simple-node",
                                            "selectVariant": "checkbox",
                                            "sortBy": undefined,
                                          },
                                          "header": Object {
                                            "formatters": Array [],
                                            "label": "Actions",
                                            "transforms": Array [
                                              [Function],
                                              [Function],
                                            ],
                                          },
                                          "property": "actions",
                                          "props": Object {
                                            "data-key": 3,
                                            "data-label": "Actions",
                                          },
                                        },
                                      ]
                                    }
                                    rowIndex={0}
                                  >
                                    <Tr>
                                      <TrBase
                                        innerRef={null}
                                      >
                                        <tr
                                          className=""
                                          data-ouia-component-id="OUIA-Generated-TableRow-3"
                                          data-ouia-component-type="PF4/TableRow"
                                          data-ouia-safe={true}
                                          hidden={false}
                                        >
                                          <HeaderCell
                                            data-key={0}
                                            data-label="Job id"
                                            key="0-header"
                                            scope="col"
                                          >
                                            <Th
                                              className=""
                                              component="th"
                                              data-key={0}
                                              data-label="Job id"
                                              onMouseEnter={[Function]}
                                              scope="col"
                                              textCenter={false}
                                              tooltip=""
                                            >
                                              <ThBase
                                                className=""
                                                component="th"
                                                data-key={0}
                                                data-label="Job id"
                                                innerRef={null}
                                                onMouseEnter={[Function]}
                                                scope="col"
                                                textCenter={false}
                                                tooltip=""
                                              >
                                                <th
                                                  className=""
                                                  data-key={0}
                                                  data-label="Job id"
                                                  onMouseEnter={[Function]}
                                                  scope="col"
                                                >
                                                  Job id
                                                </th>
                                              </ThBase>
                                            </Th>
                                          </HeaderCell>
                                          <HeaderCell
                                            data-key={1}
                                            data-label="Status"
                                            key="1-header"
                                            scope="col"
                                          >
                                            <Th
                                              className=""
                                              component="th"
                                              data-key={1}
                                              data-label="Status"
                                              onMouseEnter={[Function]}
                                              scope="col"
                                              textCenter={false}
                                              tooltip=""
                                            >
                                              <ThBase
                                                className=""
                                                component="th"
                                                data-key={1}
                                                data-label="Status"
                                                innerRef={null}
                                                onMouseEnter={[Function]}
                                                scope="col"
                                                textCenter={false}
                                                tooltip=""
                                              >
                                                <th
                                                  className=""
                                                  data-key={1}
                                                  data-label="Status"
                                                  onMouseEnter={[Function]}
                                                  scope="col"
                                                >
                                                  Status
                                                </th>
                                              </ThBase>
                                            </Th>
                                          </HeaderCell>
                                          <HeaderCell
                                            data-key={2}
                                            data-label="Expiration time"
                                            key="2-header"
                                            scope="col"
                                          >
                                            <Th
                                              className=""
                                              component="th"
                                              data-key={2}
                                              data-label="Expiration time"
                                              onMouseEnter={[Function]}
                                              scope="col"
                                              textCenter={false}
                                              tooltip=""
                                            >
                                              <ThBase
                                                className=""
                                                component="th"
                                                data-key={2}
                                                data-label="Expiration time"
                                                innerRef={null}
                                                onMouseEnter={[Function]}
                                                scope="col"
                                                textCenter={false}
                                                tooltip=""
                                              >
                                                <th
                                                  className=""
                                                  data-key={2}
                                                  data-label="Expiration time"
                                                  onMouseEnter={[Function]}
                                                  scope="col"
                                                >
                                                  Expiration time
                                                </th>
                                              </ThBase>
                                            </Th>
                                          </HeaderCell>
                                          <HeaderCell
                                            data-key={3}
                                            data-label="Actions"
                                            key="3-header"
                                            scope="col"
                                          >
                                            <Th
                                              className=""
                                              component="th"
                                              data-key={3}
                                              data-label="Actions"
                                              onMouseEnter={[Function]}
                                              scope="col"
                                              textCenter={false}
                                              tooltip=""
                                            >
                                              <ThBase
                                                className=""
                                                component="th"
                                                data-key={3}
                                                data-label="Actions"
                                                innerRef={null}
                                                onMouseEnter={[Function]}
                                                scope="col"
                                                textCenter={false}
                                                tooltip=""
                                              >
                                                <th
                                                  className=""
                                                  data-key={3}
                                                  data-label="Actions"
                                                  onMouseEnter={[Function]}
                                                  scope="col"
                                                >
                                                  Actions
                                                </th>
                                              </ThBase>
                                            </Th>
                                          </HeaderCell>
                                        </tr>
                                      </TrBase>
                                    </Tr>
                                  </HeaderRow>
                                </thead>
                              </TheadBase>
                            </Thead>
                          </BaseHeader>
                        </Component>
                      </ContextHeader>
                    </TableHeader>
                    <Component>
                      <ContextBody
                        className=""
                        headerData={
                          Array [
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "canSelectAll": true,
                                "canSortFavorites": true,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": undefined,
                                "onExpand": undefined,
                                "onFavorite": undefined,
                                "onRowEdit": undefined,
                                "onSelect": undefined,
                                "onSort": undefined,
                                "rowLabeledBy": "simple-node",
                                "selectVariant": "checkbox",
                                "sortBy": undefined,
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Job id",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "job-id",
                              "props": Object {
                                "data-key": 0,
                                "data-label": "Job id",
                              },
                            },
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "canSelectAll": true,
                                "canSortFavorites": true,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": undefined,
                                "onExpand": undefined,
                                "onFavorite": undefined,
                                "onRowEdit": undefined,
                                "onSelect": undefined,
                                "onSort": undefined,
                                "rowLabeledBy": "simple-node",
                                "selectVariant": "checkbox",
                                "sortBy": undefined,
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Status",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "status",
                              "props": Object {
                                "data-key": 1,
                                "data-label": "Status",
                              },
                            },
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "canSelectAll": true,
                                "canSortFavorites": true,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": undefined,
                                "onExpand": undefined,
                                "onFavorite": undefined,
                                "onRowEdit": undefined,
                                "onSelect": undefined,
                                "onSort": undefined,
                                "rowLabeledBy": "simple-node",
                                "selectVariant": "checkbox",
                                "sortBy": undefined,
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Expiration time",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "expiration-time",
                              "props": Object {
                                "data-key": 2,
                                "data-label": "Expiration time",
                              },
                            },
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "canSelectAll": true,
                                "canSortFavorites": true,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": undefined,
                                "onExpand": undefined,
                                "onFavorite": undefined,
                                "onRowEdit": undefined,
                                "onSelect": undefined,
                                "onSort": undefined,
                                "rowLabeledBy": "simple-node",
                                "selectVariant": "checkbox",
                                "sortBy": undefined,
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Actions",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "actions",
                              "props": Object {
                                "data-key": 3,
                                "data-label": "Actions",
                              },
                            },
                          ]
                        }
                        headerRows={null}
                        onRow={[Function]}
                        onRowClick={[Function]}
                        rowKey="secretTableRowKeyId"
                        rows={
                          Array [
                            Object {
                              "cells": Array [
                                Object {
                                  "title": <Tooltip
                                    content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                  >
                                    <span>
                                      6e74a57
                                    </span>
                                  </Tooltip>,
                                },
                                Object {
                                  "title": <React.Fragment>
                                    <CheckCircleIcon
                                      className="pf-u-mr-sm"
                                      color="var(--pf-global--success-color--100)"
                                    />
                                    Executed
                                  </React.Fragment>,
                                },
                                Object {
                                  "title": <React.Fragment>
                                    <React.Fragment>
                                       
                                      expires in
                                       
                                      <t
                                        ago={true}
                                        calendar={false}
                                        decimal={false}
                                        element={null}
                                        filter={[Function]}
                                        fromNow={true}
                                        interval={60000}
                                        local={false}
                                        onChange={[Function]}
                                        titleFormat=""
                                        toNow={false}
                                        unit={null}
                                        unix={false}
                                        utc={false}
                                        withTitle={false}
                                      >
                                        2020-08-29T03:35:50.147Z
                                      </t>
                                    </React.Fragment>
                                  </React.Fragment>,
                                },
                                Object {
                                  "title": <MockedJobActionsKebab
                                    driver={
                                      Object {
                                        "abortProcess": [MockFunction],
                                        "cancelJob": [MockFunction],
                                        "getProcessDiagram": [MockFunction],
                                        "jobsQuery": [MockFunction],
                                        "processDetailsQuery": [MockFunction],
                                        "rescheduleJob": [MockFunction],
                                      }
                                    }
                                    job={
                                      Object {
                                        "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                        "endpoint": "http://localhost:4000",
                                        "expirationTime": 2020-08-29T03:35:50.147Z,
                                        "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                        "lastUpdate": 2020-08-27T03:35:50.147Z,
                                        "priority": 0,
                                        "processId": "travels",
                                        "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                        "repeatInterval": null,
                                        "repeatLimit": null,
                                        "retries": 0,
                                        "rootProcessId": null,
                                        "scheduledId": "0",
                                        "status": "EXECUTED",
                                      }
                                    }
                                  />,
                                },
                              ],
                            },
                          ]
                        }
                      >
                        <Component
                          className=""
                          headerRows={null}
                          mappedRows={
                            Array [
                              Object {
                                "actions": Object {
                                  "formatters": Array [],
                                  "props": Object {
                                    "isVisible": true,
                                  },
                                  "title": <MockedJobActionsKebab
                                    driver={
                                      Object {
                                        "abortProcess": [MockFunction],
                                        "cancelJob": [MockFunction],
                                        "getProcessDiagram": [MockFunction],
                                        "jobsQuery": [MockFunction],
                                        "processDetailsQuery": [MockFunction],
                                        "rescheduleJob": [MockFunction],
                                      }
                                    }
                                    job={
                                      Object {
                                        "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                        "endpoint": "http://localhost:4000",
                                        "expirationTime": 2020-08-29T03:35:50.147Z,
                                        "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                        "lastUpdate": 2020-08-27T03:35:50.147Z,
                                        "priority": 0,
                                        "processId": "travels",
                                        "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                        "repeatInterval": null,
                                        "repeatLimit": null,
                                        "retries": 0,
                                        "rootProcessId": null,
                                        "scheduledId": "0",
                                        "status": "EXECUTED",
                                      }
                                    }
                                  />,
                                },
                                "cells": Array [
                                  Object {
                                    "title": <Tooltip
                                      content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                    >
                                      <span>
                                        6e74a57
                                      </span>
                                    </Tooltip>,
                                  },
                                  Object {
                                    "title": <React.Fragment>
                                      <CheckCircleIcon
                                        className="pf-u-mr-sm"
                                        color="var(--pf-global--success-color--100)"
                                      />
                                      Executed
                                    </React.Fragment>,
                                  },
                                  Object {
                                    "title": <React.Fragment>
                                      <React.Fragment>
                                         
                                        expires in
                                         
                                        <t
                                          ago={true}
                                          calendar={false}
                                          decimal={false}
                                          element={null}
                                          filter={[Function]}
                                          fromNow={true}
                                          interval={60000}
                                          local={false}
                                          onChange={[Function]}
                                          titleFormat=""
                                          toNow={false}
                                          unit={null}
                                          unix={false}
                                          utc={false}
                                          withTitle={false}
                                        >
                                          2020-08-29T03:35:50.147Z
                                        </t>
                                      </React.Fragment>
                                    </React.Fragment>,
                                  },
                                  Object {
                                    "title": <MockedJobActionsKebab
                                      driver={
                                        Object {
                                          "abortProcess": [MockFunction],
                                          "cancelJob": [MockFunction],
                                          "getProcessDiagram": [MockFunction],
                                          "jobsQuery": [MockFunction],
                                          "processDetailsQuery": [MockFunction],
                                          "rescheduleJob": [MockFunction],
                                        }
                                      }
                                      job={
                                        Object {
                                          "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                          "endpoint": "http://localhost:4000",
                                          "expirationTime": 2020-08-29T03:35:50.147Z,
                                          "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                          "lastUpdate": 2020-08-27T03:35:50.147Z,
                                          "priority": 0,
                                          "processId": "travels",
                                          "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                          "repeatInterval": null,
                                          "repeatLimit": null,
                                          "retries": 0,
                                          "rootProcessId": null,
                                          "scheduledId": "0",
                                          "status": "EXECUTED",
                                        }
                                      }
                                    />,
                                  },
                                ],
                                "expiration-time": Object {
                                  "formatters": Array [],
                                  "props": Object {
                                    "isVisible": true,
                                  },
                                  "title": <React.Fragment>
                                    <React.Fragment>
                                       
                                      expires in
                                       
                                      <t
                                        ago={true}
                                        calendar={false}
                                        decimal={false}
                                        element={null}
                                        filter={[Function]}
                                        fromNow={true}
                                        interval={60000}
                                        local={false}
                                        onChange={[Function]}
                                        titleFormat=""
                                        toNow={false}
                                        unit={null}
                                        unix={false}
                                        utc={false}
                                        withTitle={false}
                                      >
                                        2020-08-29T03:35:50.147Z
                                      </t>
                                    </React.Fragment>
                                  </React.Fragment>,
                                },
                                "isExpanded": undefined,
                                "isFirst": true,
                                "isFirstVisible": true,
                                "isHeightAuto": false,
                                "isLast": true,
                                "isLastVisible": true,
                                "job-id": Object {
                                  "formatters": Array [],
                                  "props": Object {
                                    "isVisible": true,
                                  },
                                  "title": <Tooltip
                                    content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                  >
                                    <span>
                                      6e74a57
                                    </span>
                                  </Tooltip>,
                                },
                                "secretTableRowKeyId": 0,
                                "status": Object {
                                  "formatters": Array [],
                                  "props": Object {
                                    "isVisible": true,
                                  },
                                  "title": <React.Fragment>
                                    <CheckCircleIcon
                                      className="pf-u-mr-sm"
                                      color="var(--pf-global--success-color--100)"
                                    />
                                    Executed
                                  </React.Fragment>,
                                },
                              },
                            ]
                          }
                          onRow={[Function]}
                          rowKey="secretTableRowKeyId"
                          rows={
                            Array [
                              Object {
                                "actions": Object {
                                  "formatters": Array [],
                                  "props": Object {
                                    "isVisible": true,
                                  },
                                  "title": <MockedJobActionsKebab
                                    driver={
                                      Object {
                                        "abortProcess": [MockFunction],
                                        "cancelJob": [MockFunction],
                                        "getProcessDiagram": [MockFunction],
                                        "jobsQuery": [MockFunction],
                                        "processDetailsQuery": [MockFunction],
                                        "rescheduleJob": [MockFunction],
                                      }
                                    }
                                    job={
                                      Object {
                                        "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                        "endpoint": "http://localhost:4000",
                                        "expirationTime": 2020-08-29T03:35:50.147Z,
                                        "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                        "lastUpdate": 2020-08-27T03:35:50.147Z,
                                        "priority": 0,
                                        "processId": "travels",
                                        "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                        "repeatInterval": null,
                                        "repeatLimit": null,
                                        "retries": 0,
                                        "rootProcessId": null,
                                        "scheduledId": "0",
                                        "status": "EXECUTED",
                                      }
                                    }
                                  />,
                                },
                                "cells": Array [
                                  Object {
                                    "title": <Tooltip
                                      content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                    >
                                      <span>
                                        6e74a57
                                      </span>
                                    </Tooltip>,
                                  },
                                  Object {
                                    "title": <React.Fragment>
                                      <CheckCircleIcon
                                        className="pf-u-mr-sm"
                                        color="var(--pf-global--success-color--100)"
                                      />
                                      Executed
                                    </React.Fragment>,
                                  },
                                  Object {
                                    "title": <React.Fragment>
                                      <React.Fragment>
                                         
                                        expires in
                                         
                                        <t
                                          ago={true}
                                          calendar={false}
                                          decimal={false}
                                          element={null}
                                          filter={[Function]}
                                          fromNow={true}
                                          interval={60000}
                                          local={false}
                                          onChange={[Function]}
                                          titleFormat=""
                                          toNow={false}
                                          unit={null}
                                          unix={false}
                                          utc={false}
                                          withTitle={false}
                                        >
                                          2020-08-29T03:35:50.147Z
                                        </t>
                                      </React.Fragment>
                                    </React.Fragment>,
                                  },
                                  Object {
                                    "title": <MockedJobActionsKebab
                                      driver={
                                        Object {
                                          "abortProcess": [MockFunction],
                                          "cancelJob": [MockFunction],
                                          "getProcessDiagram": [MockFunction],
                                          "jobsQuery": [MockFunction],
                                          "processDetailsQuery": [MockFunction],
                                          "rescheduleJob": [MockFunction],
                                        }
                                      }
                                      job={
                                        Object {
                                          "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                          "endpoint": "http://localhost:4000",
                                          "expirationTime": 2020-08-29T03:35:50.147Z,
                                          "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                          "lastUpdate": 2020-08-27T03:35:50.147Z,
                                          "priority": 0,
                                          "processId": "travels",
                                          "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                          "repeatInterval": null,
                                          "repeatLimit": null,
                                          "retries": 0,
                                          "rootProcessId": null,
                                          "scheduledId": "0",
                                          "status": "EXECUTED",
                                        }
                                      }
                                    />,
                                  },
                                ],
                                "expiration-time": Object {
                                  "formatters": Array [],
                                  "props": Object {
                                    "isVisible": true,
                                  },
                                  "title": <React.Fragment>
                                    <React.Fragment>
                                       
                                      expires in
                                       
                                      <t
                                        ago={true}
                                        calendar={false}
                                        decimal={false}
                                        element={null}
                                        filter={[Function]}
                                        fromNow={true}
                                        interval={60000}
                                        local={false}
                                        onChange={[Function]}
                                        titleFormat=""
                                        toNow={false}
                                        unit={null}
                                        unix={false}
                                        utc={false}
                                        withTitle={false}
                                      >
                                        2020-08-29T03:35:50.147Z
                                      </t>
                                    </React.Fragment>
                                  </React.Fragment>,
                                },
                                "isExpanded": undefined,
                                "isFirst": true,
                                "isFirstVisible": true,
                                "isHeightAuto": false,
                                "isLast": true,
                                "isLastVisible": true,
                                "job-id": Object {
                                  "formatters": Array [],
                                  "props": Object {
                                    "isVisible": true,
                                  },
                                  "title": <Tooltip
                                    content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                  >
                                    <span>
                                      6e74a57
                                    </span>
                                  </Tooltip>,
                                },
                                "secretTableRowKeyId": 0,
                                "status": Object {
                                  "formatters": Array [],
                                  "props": Object {
                                    "isVisible": true,
                                  },
                                  "title": <React.Fragment>
                                    <CheckCircleIcon
                                      className="pf-u-mr-sm"
                                      color="var(--pf-global--success-color--100)"
                                    />
                                    Executed
                                  </React.Fragment>,
                                },
                              },
                            ]
                          }
                        >
                          <BaseBody
                            className=""
                            columns={
                              Array [
                                Object {
                                  "cell": Object {
                                    "formatters": Array [
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                  },
                                  "data": undefined,
                                  "extraParams": Object {
                                    "actionResolver": undefined,
                                    "actions": undefined,
                                    "allRowsSelected": false,
                                    "areActionsDisabled": undefined,
                                    "canSelectAll": true,
                                    "canSortFavorites": true,
                                    "contentId": "expanded-content",
                                    "dropdownDirection": "down",
                                    "dropdownPosition": "right",
                                    "expandId": "expandable-toggle",
                                    "firstUserColumnIndex": 0,
                                    "onCollapse": undefined,
                                    "onExpand": undefined,
                                    "onFavorite": undefined,
                                    "onRowEdit": undefined,
                                    "onSelect": undefined,
                                    "onSort": undefined,
                                    "rowLabeledBy": "simple-node",
                                    "selectVariant": "checkbox",
                                    "sortBy": undefined,
                                  },
                                  "header": Object {
                                    "formatters": Array [],
                                    "label": "Job id",
                                    "transforms": Array [
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                  "property": "job-id",
                                  "props": Object {
                                    "data-key": 0,
                                    "data-label": "Job id",
                                  },
                                },
                                Object {
                                  "cell": Object {
                                    "formatters": Array [
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                  },
                                  "data": undefined,
                                  "extraParams": Object {
                                    "actionResolver": undefined,
                                    "actions": undefined,
                                    "allRowsSelected": false,
                                    "areActionsDisabled": undefined,
                                    "canSelectAll": true,
                                    "canSortFavorites": true,
                                    "contentId": "expanded-content",
                                    "dropdownDirection": "down",
                                    "dropdownPosition": "right",
                                    "expandId": "expandable-toggle",
                                    "firstUserColumnIndex": 0,
                                    "onCollapse": undefined,
                                    "onExpand": undefined,
                                    "onFavorite": undefined,
                                    "onRowEdit": undefined,
                                    "onSelect": undefined,
                                    "onSort": undefined,
                                    "rowLabeledBy": "simple-node",
                                    "selectVariant": "checkbox",
                                    "sortBy": undefined,
                                  },
                                  "header": Object {
                                    "formatters": Array [],
                                    "label": "Status",
                                    "transforms": Array [
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                  "property": "status",
                                  "props": Object {
                                    "data-key": 1,
                                    "data-label": "Status",
                                  },
                                },
                                Object {
                                  "cell": Object {
                                    "formatters": Array [
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                  },
                                  "data": undefined,
                                  "extraParams": Object {
                                    "actionResolver": undefined,
                                    "actions": undefined,
                                    "allRowsSelected": false,
                                    "areActionsDisabled": undefined,
                                    "canSelectAll": true,
                                    "canSortFavorites": true,
                                    "contentId": "expanded-content",
                                    "dropdownDirection": "down",
                                    "dropdownPosition": "right",
                                    "expandId": "expandable-toggle",
                                    "firstUserColumnIndex": 0,
                                    "onCollapse": undefined,
                                    "onExpand": undefined,
                                    "onFavorite": undefined,
                                    "onRowEdit": undefined,
                                    "onSelect": undefined,
                                    "onSort": undefined,
                                    "rowLabeledBy": "simple-node",
                                    "selectVariant": "checkbox",
                                    "sortBy": undefined,
                                  },
                                  "header": Object {
                                    "formatters": Array [],
                                    "label": "Expiration time",
                                    "transforms": Array [
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                  "property": "expiration-time",
                                  "props": Object {
                                    "data-key": 2,
                                    "data-label": "Expiration time",
                                  },
                                },
                                Object {
                                  "cell": Object {
                                    "formatters": Array [
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                  },
                                  "data": undefined,
                                  "extraParams": Object {
                                    "actionResolver": undefined,
                                    "actions": undefined,
                                    "allRowsSelected": false,
                                    "areActionsDisabled": undefined,
                                    "canSelectAll": true,
                                    "canSortFavorites": true,
                                    "contentId": "expanded-content",
                                    "dropdownDirection": "down",
                                    "dropdownPosition": "right",
                                    "expandId": "expandable-toggle",
                                    "firstUserColumnIndex": 0,
                                    "onCollapse": undefined,
                                    "onExpand": undefined,
                                    "onFavorite": undefined,
                                    "onRowEdit": undefined,
                                    "onSelect": undefined,
                                    "onSort": undefined,
                                    "rowLabeledBy": "simple-node",
                                    "selectVariant": "checkbox",
                                    "sortBy": undefined,
                                  },
                                  "header": Object {
                                    "formatters": Array [],
                                    "label": "Actions",
                                    "transforms": Array [
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                  "property": "actions",
                                  "props": Object {
                                    "data-key": 3,
                                    "data-label": "Actions",
                                  },
                                },
                              ]
                            }
                            headerRows={null}
                            mappedRows={
                              Array [
                                Object {
                                  "actions": Object {
                                    "formatters": Array [],
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": <MockedJobActionsKebab
                                      driver={
                                        Object {
                                          "abortProcess": [MockFunction],
                                          "cancelJob": [MockFunction],
                                          "getProcessDiagram": [MockFunction],
                                          "jobsQuery": [MockFunction],
                                          "processDetailsQuery": [MockFunction],
                                          "rescheduleJob": [MockFunction],
                                        }
                                      }
                                      job={
                                        Object {
                                          "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                          "endpoint": "http://localhost:4000",
                                          "expirationTime": 2020-08-29T03:35:50.147Z,
                                          "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                          "lastUpdate": 2020-08-27T03:35:50.147Z,
                                          "priority": 0,
                                          "processId": "travels",
                                          "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                          "repeatInterval": null,
                                          "repeatLimit": null,
                                          "retries": 0,
                                          "rootProcessId": null,
                                          "scheduledId": "0",
                                          "status": "EXECUTED",
                                        }
                                      }
                                    />,
                                  },
                                  "cells": Array [
                                    Object {
                                      "title": <Tooltip
                                        content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                      >
                                        <span>
                                          6e74a57
                                        </span>
                                      </Tooltip>,
                                    },
                                    Object {
                                      "title": <React.Fragment>
                                        <CheckCircleIcon
                                          className="pf-u-mr-sm"
                                          color="var(--pf-global--success-color--100)"
                                        />
                                        Executed
                                      </React.Fragment>,
                                    },
                                    Object {
                                      "title": <React.Fragment>
                                        <React.Fragment>
                                           
                                          expires in
                                           
                                          <t
                                            ago={true}
                                            calendar={false}
                                            decimal={false}
                                            element={null}
                                            filter={[Function]}
                                            fromNow={true}
                                            interval={60000}
                                            local={false}
                                            onChange={[Function]}
                                            titleFormat=""
                                            toNow={false}
                                            unit={null}
                                            unix={false}
                                            utc={false}
                                            withTitle={false}
                                          >
                                            2020-08-29T03:35:50.147Z
                                          </t>
                                        </React.Fragment>
                                      </React.Fragment>,
                                    },
                                    Object {
                                      "title": <MockedJobActionsKebab
                                        driver={
                                          Object {
                                            "abortProcess": [MockFunction],
                                            "cancelJob": [MockFunction],
                                            "getProcessDiagram": [MockFunction],
                                            "jobsQuery": [MockFunction],
                                            "processDetailsQuery": [MockFunction],
                                            "rescheduleJob": [MockFunction],
                                          }
                                        }
                                        job={
                                          Object {
                                            "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                            "endpoint": "http://localhost:4000",
                                            "expirationTime": 2020-08-29T03:35:50.147Z,
                                            "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                            "lastUpdate": 2020-08-27T03:35:50.147Z,
                                            "priority": 0,
                                            "processId": "travels",
                                            "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                            "repeatInterval": null,
                                            "repeatLimit": null,
                                            "retries": 0,
                                            "rootProcessId": null,
                                            "scheduledId": "0",
                                            "status": "EXECUTED",
                                          }
                                        }
                                      />,
                                    },
                                  ],
                                  "expiration-time": Object {
                                    "formatters": Array [],
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": <React.Fragment>
                                      <React.Fragment>
                                         
                                        expires in
                                         
                                        <t
                                          ago={true}
                                          calendar={false}
                                          decimal={false}
                                          element={null}
                                          filter={[Function]}
                                          fromNow={true}
                                          interval={60000}
                                          local={false}
                                          onChange={[Function]}
                                          titleFormat=""
                                          toNow={false}
                                          unit={null}
                                          unix={false}
                                          utc={false}
                                          withTitle={false}
                                        >
                                          2020-08-29T03:35:50.147Z
                                        </t>
                                      </React.Fragment>
                                    </React.Fragment>,
                                  },
                                  "isExpanded": undefined,
                                  "isFirst": true,
                                  "isFirstVisible": true,
                                  "isHeightAuto": false,
                                  "isLast": true,
                                  "isLastVisible": true,
                                  "job-id": Object {
                                    "formatters": Array [],
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": <Tooltip
                                      content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                    >
                                      <span>
                                        6e74a57
                                      </span>
                                    </Tooltip>,
                                  },
                                  "secretTableRowKeyId": 0,
                                  "status": Object {
                                    "formatters": Array [],
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": <React.Fragment>
                                      <CheckCircleIcon
                                        className="pf-u-mr-sm"
                                        color="var(--pf-global--success-color--100)"
                                      />
                                      Executed
                                    </React.Fragment>,
                                  },
                                },
                              ]
                            }
                            onRow={[Function]}
                            renderers={
                              Object {
                                "body": Object {
                                  "cell": [Function],
                                  "row": [Function],
                                  "wrapper": [Function],
                                },
                                "header": Object {
                                  "cell": [Function],
                                  "row": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "displayName": "Tr",
                                    "render": [Function],
                                  },
                                  "wrapper": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "displayName": "Thead",
                                    "render": [Function],
                                  },
                                },
                                "table": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "displayName": "TableComposable",
                                  "render": [Function],
                                },
                              }
                            }
                            rowKey="secretTableRowKeyId"
                            rows={
                              Array [
                                Object {
                                  "actions": Object {
                                    "formatters": Array [],
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": <MockedJobActionsKebab
                                      driver={
                                        Object {
                                          "abortProcess": [MockFunction],
                                          "cancelJob": [MockFunction],
                                          "getProcessDiagram": [MockFunction],
                                          "jobsQuery": [MockFunction],
                                          "processDetailsQuery": [MockFunction],
                                          "rescheduleJob": [MockFunction],
                                        }
                                      }
                                      job={
                                        Object {
                                          "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                          "endpoint": "http://localhost:4000",
                                          "expirationTime": 2020-08-29T03:35:50.147Z,
                                          "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                          "lastUpdate": 2020-08-27T03:35:50.147Z,
                                          "priority": 0,
                                          "processId": "travels",
                                          "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                          "repeatInterval": null,
                                          "repeatLimit": null,
                                          "retries": 0,
                                          "rootProcessId": null,
                                          "scheduledId": "0",
                                          "status": "EXECUTED",
                                        }
                                      }
                                    />,
                                  },
                                  "cells": Array [
                                    Object {
                                      "title": <Tooltip
                                        content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                      >
                                        <span>
                                          6e74a57
                                        </span>
                                      </Tooltip>,
                                    },
                                    Object {
                                      "title": <React.Fragment>
                                        <CheckCircleIcon
                                          className="pf-u-mr-sm"
                                          color="var(--pf-global--success-color--100)"
                                        />
                                        Executed
                                      </React.Fragment>,
                                    },
                                    Object {
                                      "title": <React.Fragment>
                                        <React.Fragment>
                                           
                                          expires in
                                           
                                          <t
                                            ago={true}
                                            calendar={false}
                                            decimal={false}
                                            element={null}
                                            filter={[Function]}
                                            fromNow={true}
                                            interval={60000}
                                            local={false}
                                            onChange={[Function]}
                                            titleFormat=""
                                            toNow={false}
                                            unit={null}
                                            unix={false}
                                            utc={false}
                                            withTitle={false}
                                          >
                                            2020-08-29T03:35:50.147Z
                                          </t>
                                        </React.Fragment>
                                      </React.Fragment>,
                                    },
                                    Object {
                                      "title": <MockedJobActionsKebab
                                        driver={
                                          Object {
                                            "abortProcess": [MockFunction],
                                            "cancelJob": [MockFunction],
                                            "getProcessDiagram": [MockFunction],
                                            "jobsQuery": [MockFunction],
                                            "processDetailsQuery": [MockFunction],
                                            "rescheduleJob": [MockFunction],
                                          }
                                        }
                                        job={
                                          Object {
                                            "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                            "endpoint": "http://localhost:4000",
                                            "expirationTime": 2020-08-29T03:35:50.147Z,
                                            "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                            "lastUpdate": 2020-08-27T03:35:50.147Z,
                                            "priority": 0,
                                            "processId": "travels",
                                            "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                            "repeatInterval": null,
                                            "repeatLimit": null,
                                            "retries": 0,
                                            "rootProcessId": null,
                                            "scheduledId": "0",
                                            "status": "EXECUTED",
                                          }
                                        }
                                      />,
                                    },
                                  ],
                                  "expiration-time": Object {
                                    "formatters": Array [],
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": <React.Fragment>
                                      <React.Fragment>
                                         
                                        expires in
                                         
                                        <t
                                          ago={true}
                                          calendar={false}
                                          decimal={false}
                                          element={null}
                                          filter={[Function]}
                                          fromNow={true}
                                          interval={60000}
                                          local={false}
                                          onChange={[Function]}
                                          titleFormat=""
                                          toNow={false}
                                          unit={null}
                                          unix={false}
                                          utc={false}
                                          withTitle={false}
                                        >
                                          2020-08-29T03:35:50.147Z
                                        </t>
                                      </React.Fragment>
                                    </React.Fragment>,
                                  },
                                  "isExpanded": undefined,
                                  "isFirst": true,
                                  "isFirstVisible": true,
                                  "isHeightAuto": false,
                                  "isLast": true,
                                  "isLastVisible": true,
                                  "job-id": Object {
                                    "formatters": Array [],
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": <Tooltip
                                      content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                    >
                                      <span>
                                        6e74a57
                                      </span>
                                    </Tooltip>,
                                  },
                                  "secretTableRowKeyId": 0,
                                  "status": Object {
                                    "formatters": Array [],
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": <React.Fragment>
                                      <CheckCircleIcon
                                        className="pf-u-mr-sm"
                                        color="var(--pf-global--success-color--100)"
                                      />
                                      Executed
                                    </React.Fragment>,
                                  },
                                },
                              ]
                            }
                          >
                            <BodyWrapper
                              className=""
                              headerRows={null}
                              mappedRows={
                                Array [
                                  Object {
                                    "actions": Object {
                                      "formatters": Array [],
                                      "props": Object {
                                        "isVisible": true,
                                      },
                                      "title": <MockedJobActionsKebab
                                        driver={
                                          Object {
                                            "abortProcess": [MockFunction],
                                            "cancelJob": [MockFunction],
                                            "getProcessDiagram": [MockFunction],
                                            "jobsQuery": [MockFunction],
                                            "processDetailsQuery": [MockFunction],
                                            "rescheduleJob": [MockFunction],
                                          }
                                        }
                                        job={
                                          Object {
                                            "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                            "endpoint": "http://localhost:4000",
                                            "expirationTime": 2020-08-29T03:35:50.147Z,
                                            "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                            "lastUpdate": 2020-08-27T03:35:50.147Z,
                                            "priority": 0,
                                            "processId": "travels",
                                            "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                            "repeatInterval": null,
                                            "repeatLimit": null,
                                            "retries": 0,
                                            "rootProcessId": null,
                                            "scheduledId": "0",
                                            "status": "EXECUTED",
                                          }
                                        }
                                      />,
                                    },
                                    "cells": Array [
                                      Object {
                                        "title": <Tooltip
                                          content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                        >
                                          <span>
                                            6e74a57
                                          </span>
                                        </Tooltip>,
                                      },
                                      Object {
                                        "title": <React.Fragment>
                                          <CheckCircleIcon
                                            className="pf-u-mr-sm"
                                            color="var(--pf-global--success-color--100)"
                                          />
                                          Executed
                                        </React.Fragment>,
                                      },
                                      Object {
                                        "title": <React.Fragment>
                                          <React.Fragment>
                                             
                                            expires in
                                             
                                            <t
                                              ago={true}
                                              calendar={false}
                                              decimal={false}
                                              element={null}
                                              filter={[Function]}
                                              fromNow={true}
                                              interval={60000}
                                              local={false}
                                              onChange={[Function]}
                                              titleFormat=""
                                              toNow={false}
                                              unit={null}
                                              unix={false}
                                              utc={false}
                                              withTitle={false}
                                            >
                                              2020-08-29T03:35:50.147Z
                                            </t>
                                          </React.Fragment>
                                        </React.Fragment>,
                                      },
                                      Object {
                                        "title": <MockedJobActionsKebab
                                          driver={
                                            Object {
                                              "abortProcess": [MockFunction],
                                              "cancelJob": [MockFunction],
                                              "getProcessDiagram": [MockFunction],
                                              "jobsQuery": [MockFunction],
                                              "processDetailsQuery": [MockFunction],
                                              "rescheduleJob": [MockFunction],
                                            }
                                          }
                                          job={
                                            Object {
                                              "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                              "endpoint": "http://localhost:4000",
                                              "expirationTime": 2020-08-29T03:35:50.147Z,
                                              "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                              "lastUpdate": 2020-08-27T03:35:50.147Z,
                                              "priority": 0,
                                              "processId": "travels",
                                              "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                              "repeatInterval": null,
                                              "repeatLimit": null,
                                              "retries": 0,
                                              "rootProcessId": null,
                                              "scheduledId": "0",
                                              "status": "EXECUTED",
                                            }
                                          }
                                        />,
                                      },
                                    ],
                                    "expiration-time": Object {
                                      "formatters": Array [],
                                      "props": Object {
                                        "isVisible": true,
                                      },
                                      "title": <React.Fragment>
                                        <React.Fragment>
                                           
                                          expires in
                                           
                                          <t
                                            ago={true}
                                            calendar={false}
                                            decimal={false}
                                            element={null}
                                            filter={[Function]}
                                            fromNow={true}
                                            interval={60000}
                                            local={false}
                                            onChange={[Function]}
                                            titleFormat=""
                                            toNow={false}
                                            unit={null}
                                            unix={false}
                                            utc={false}
                                            withTitle={false}
                                          >
                                            2020-08-29T03:35:50.147Z
                                          </t>
                                        </React.Fragment>
                                      </React.Fragment>,
                                    },
                                    "isExpanded": undefined,
                                    "isFirst": true,
                                    "isFirstVisible": true,
                                    "isHeightAuto": false,
                                    "isLast": true,
                                    "isLastVisible": true,
                                    "job-id": Object {
                                      "formatters": Array [],
                                      "props": Object {
                                        "isVisible": true,
                                      },
                                      "title": <Tooltip
                                        content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                      >
                                        <span>
                                          6e74a57
                                        </span>
                                      </Tooltip>,
                                    },
                                    "secretTableRowKeyId": 0,
                                    "status": Object {
                                      "formatters": Array [],
                                      "props": Object {
                                        "isVisible": true,
                                      },
                                      "title": <React.Fragment>
                                        <CheckCircleIcon
                                          className="pf-u-mr-sm"
                                          color="var(--pf-global--success-color--100)"
                                        />
                                        Executed
                                      </React.Fragment>,
                                    },
                                  },
                                ]
                              }
                            >
                              <Tbody
                                className=""
                              >
                                <TbodyBase
                                  className=""
                                  innerRef={null}
                                >
                                  <tbody
                                    className=""
                                    role="rowgroup"
                                  >
                                    <BodyRow
                                      columns={
                                        Array [
                                          Object {
                                            "cell": Object {
                                              "formatters": Array [
                                                [Function],
                                              ],
                                              "transforms": Array [
                                                [Function],
                                              ],
                                            },
                                            "data": undefined,
                                            "extraParams": Object {
                                              "actionResolver": undefined,
                                              "actions": undefined,
                                              "allRowsSelected": false,
                                              "areActionsDisabled": undefined,
                                              "canSelectAll": true,
                                              "canSortFavorites": true,
                                              "contentId": "expanded-content",
                                              "dropdownDirection": "down",
                                              "dropdownPosition": "right",
                                              "expandId": "expandable-toggle",
                                              "firstUserColumnIndex": 0,
                                              "onCollapse": undefined,
                                              "onExpand": undefined,
                                              "onFavorite": undefined,
                                              "onRowEdit": undefined,
                                              "onSelect": undefined,
                                              "onSort": undefined,
                                              "rowLabeledBy": "simple-node",
                                              "selectVariant": "checkbox",
                                              "sortBy": undefined,
                                            },
                                            "header": Object {
                                              "formatters": Array [],
                                              "label": "Job id",
                                              "transforms": Array [
                                                [Function],
                                                [Function],
                                              ],
                                            },
                                            "property": "job-id",
                                            "props": Object {
                                              "data-key": 0,
                                              "data-label": "Job id",
                                            },
                                          },
                                          Object {
                                            "cell": Object {
                                              "formatters": Array [
                                                [Function],
                                              ],
                                              "transforms": Array [
                                                [Function],
                                              ],
                                            },
                                            "data": undefined,
                                            "extraParams": Object {
                                              "actionResolver": undefined,
                                              "actions": undefined,
                                              "allRowsSelected": false,
                                              "areActionsDisabled": undefined,
                                              "canSelectAll": true,
                                              "canSortFavorites": true,
                                              "contentId": "expanded-content",
                                              "dropdownDirection": "down",
                                              "dropdownPosition": "right",
                                              "expandId": "expandable-toggle",
                                              "firstUserColumnIndex": 0,
                                              "onCollapse": undefined,
                                              "onExpand": undefined,
                                              "onFavorite": undefined,
                                              "onRowEdit": undefined,
                                              "onSelect": undefined,
                                              "onSort": undefined,
                                              "rowLabeledBy": "simple-node",
                                              "selectVariant": "checkbox",
                                              "sortBy": undefined,
                                            },
                                            "header": Object {
                                              "formatters": Array [],
                                              "label": "Status",
                                              "transforms": Array [
                                                [Function],
                                                [Function],
                                              ],
                                            },
                                            "property": "status",
                                            "props": Object {
                                              "data-key": 1,
                                              "data-label": "Status",
                                            },
                                          },
                                          Object {
                                            "cell": Object {
                                              "formatters": Array [
                                                [Function],
                                              ],
                                              "transforms": Array [
                                                [Function],
                                              ],
                                            },
                                            "data": undefined,
                                            "extraParams": Object {
                                              "actionResolver": undefined,
                                              "actions": undefined,
                                              "allRowsSelected": false,
                                              "areActionsDisabled": undefined,
                                              "canSelectAll": true,
                                              "canSortFavorites": true,
                                              "contentId": "expanded-content",
                                              "dropdownDirection": "down",
                                              "dropdownPosition": "right",
                                              "expandId": "expandable-toggle",
                                              "firstUserColumnIndex": 0,
                                              "onCollapse": undefined,
                                              "onExpand": undefined,
                                              "onFavorite": undefined,
                                              "onRowEdit": undefined,
                                              "onSelect": undefined,
                                              "onSort": undefined,
                                              "rowLabeledBy": "simple-node",
                                              "selectVariant": "checkbox",
                                              "sortBy": undefined,
                                            },
                                            "header": Object {
                                              "formatters": Array [],
                                              "label": "Expiration time",
                                              "transforms": Array [
                                                [Function],
                                                [Function],
                                              ],
                                            },
                                            "property": "expiration-time",
                                            "props": Object {
                                              "data-key": 2,
                                              "data-label": "Expiration time",
                                            },
                                          },
                                          Object {
                                            "cell": Object {
                                              "formatters": Array [
                                                [Function],
                                              ],
                                              "transforms": Array [
                                                [Function],
                                              ],
                                            },
                                            "data": undefined,
                                            "extraParams": Object {
                                              "actionResolver": undefined,
                                              "actions": undefined,
                                              "allRowsSelected": false,
                                              "areActionsDisabled": undefined,
                                              "canSelectAll": true,
                                              "canSortFavorites": true,
                                              "contentId": "expanded-content",
                                              "dropdownDirection": "down",
                                              "dropdownPosition": "right",
                                              "expandId": "expandable-toggle",
                                              "firstUserColumnIndex": 0,
                                              "onCollapse": undefined,
                                              "onExpand": undefined,
                                              "onFavorite": undefined,
                                              "onRowEdit": undefined,
                                              "onSelect": undefined,
                                              "onSort": undefined,
                                              "rowLabeledBy": "simple-node",
                                              "selectVariant": "checkbox",
                                              "sortBy": undefined,
                                            },
                                            "header": Object {
                                              "formatters": Array [],
                                              "label": "Actions",
                                              "transforms": Array [
                                                [Function],
                                                [Function],
                                              ],
                                            },
                                            "property": "actions",
                                            "props": Object {
                                              "data-key": 3,
                                              "data-label": "Actions",
                                            },
                                          },
                                        ]
                                      }
                                      key="0-row"
                                      onRow={[Function]}
                                      renderers={
                                        Object {
                                          "cell": [Function],
                                          "row": [Function],
                                          "wrapper": [Function],
                                        }
                                      }
                                      rowData={
                                        Object {
                                          "actions": Object {
                                            "formatters": Array [],
                                            "props": Object {
                                              "isVisible": true,
                                            },
                                            "title": <MockedJobActionsKebab
                                              driver={
                                                Object {
                                                  "abortProcess": [MockFunction],
                                                  "cancelJob": [MockFunction],
                                                  "getProcessDiagram": [MockFunction],
                                                  "jobsQuery": [MockFunction],
                                                  "processDetailsQuery": [MockFunction],
                                                  "rescheduleJob": [MockFunction],
                                                }
                                              }
                                              job={
                                                Object {
                                                  "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                                  "endpoint": "http://localhost:4000",
                                                  "expirationTime": 2020-08-29T03:35:50.147Z,
                                                  "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                                  "lastUpdate": 2020-08-27T03:35:50.147Z,
                                                  "priority": 0,
                                                  "processId": "travels",
                                                  "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                                  "repeatInterval": null,
                                                  "repeatLimit": null,
                                                  "retries": 0,
                                                  "rootProcessId": null,
                                                  "scheduledId": "0",
                                                  "status": "EXECUTED",
                                                }
                                              }
                                            />,
                                          },
                                          "cells": Array [
                                            Object {
                                              "title": <Tooltip
                                                content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                              >
                                                <span>
                                                  6e74a57
                                                </span>
                                              </Tooltip>,
                                            },
                                            Object {
                                              "title": <React.Fragment>
                                                <CheckCircleIcon
                                                  className="pf-u-mr-sm"
                                                  color="var(--pf-global--success-color--100)"
                                                />
                                                Executed
                                              </React.Fragment>,
                                            },
                                            Object {
                                              "title": <React.Fragment>
                                                <React.Fragment>
                                                   
                                                  expires in
                                                   
                                                  <t
                                                    ago={true}
                                                    calendar={false}
                                                    decimal={false}
                                                    element={null}
                                                    filter={[Function]}
                                                    fromNow={true}
                                                    interval={60000}
                                                    local={false}
                                                    onChange={[Function]}
                                                    titleFormat=""
                                                    toNow={false}
                                                    unit={null}
                                                    unix={false}
                                                    utc={false}
                                                    withTitle={false}
                                                  >
                                                    2020-08-29T03:35:50.147Z
                                                  </t>
                                                </React.Fragment>
                                              </React.Fragment>,
                                            },
                                            Object {
                                              "title": <MockedJobActionsKebab
                                                driver={
                                                  Object {
                                                    "abortProcess": [MockFunction],
                                                    "cancelJob": [MockFunction],
                                                    "getProcessDiagram": [MockFunction],
                                                    "jobsQuery": [MockFunction],
                                                    "processDetailsQuery": [MockFunction],
                                                    "rescheduleJob": [MockFunction],
                                                  }
                                                }
                                                job={
                                                  Object {
                                                    "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                                    "endpoint": "http://localhost:4000",
                                                    "expirationTime": 2020-08-29T03:35:50.147Z,
                                                    "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                                    "lastUpdate": 2020-08-27T03:35:50.147Z,
                                                    "priority": 0,
                                                    "processId": "travels",
                                                    "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                                    "repeatInterval": null,
                                                    "repeatLimit": null,
                                                    "retries": 0,
                                                    "rootProcessId": null,
                                                    "scheduledId": "0",
                                                    "status": "EXECUTED",
                                                  }
                                                }
                                              />,
                                            },
                                          ],
                                          "expiration-time": Object {
                                            "formatters": Array [],
                                            "props": Object {
                                              "isVisible": true,
                                            },
                                            "title": <React.Fragment>
                                              <React.Fragment>
                                                 
                                                expires in
                                                 
                                                <t
                                                  ago={true}
                                                  calendar={false}
                                                  decimal={false}
                                                  element={null}
                                                  filter={[Function]}
                                                  fromNow={true}
                                                  interval={60000}
                                                  local={false}
                                                  onChange={[Function]}
                                                  titleFormat=""
                                                  toNow={false}
                                                  unit={null}
                                                  unix={false}
                                                  utc={false}
                                                  withTitle={false}
                                                >
                                                  2020-08-29T03:35:50.147Z
                                                </t>
                                              </React.Fragment>
                                            </React.Fragment>,
                                          },
                                          "isExpanded": undefined,
                                          "isFirst": true,
                                          "isFirstVisible": true,
                                          "isHeightAuto": false,
                                          "isLast": true,
                                          "isLastVisible": true,
                                          "job-id": Object {
                                            "formatters": Array [],
                                            "props": Object {
                                              "isVisible": true,
                                            },
                                            "title": <Tooltip
                                              content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                            >
                                              <span>
                                                6e74a57
                                              </span>
                                            </Tooltip>,
                                          },
                                          "secretTableRowKeyId": 0,
                                          "status": Object {
                                            "formatters": Array [],
                                            "props": Object {
                                              "isVisible": true,
                                            },
                                            "title": <React.Fragment>
                                              <CheckCircleIcon
                                                className="pf-u-mr-sm"
                                                color="var(--pf-global--success-color--100)"
                                              />
                                              Executed
                                            </React.Fragment>,
                                          },
                                        }
                                      }
                                      rowIndex={0}
                                      rowKey="0-row"
                                    >
                                      <RowWrapper
                                        className=""
                                        onMouseDown={[Function]}
                                        row={
                                          Object {
                                            "actions": Object {
                                              "formatters": Array [],
                                              "props": Object {
                                                "isVisible": true,
                                              },
                                              "title": <MockedJobActionsKebab
                                                driver={
                                                  Object {
                                                    "abortProcess": [MockFunction],
                                                    "cancelJob": [MockFunction],
                                                    "getProcessDiagram": [MockFunction],
                                                    "jobsQuery": [MockFunction],
                                                    "processDetailsQuery": [MockFunction],
                                                    "rescheduleJob": [MockFunction],
                                                  }
                                                }
                                                job={
                                                  Object {
                                                    "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                                    "endpoint": "http://localhost:4000",
                                                    "expirationTime": 2020-08-29T03:35:50.147Z,
                                                    "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                                    "lastUpdate": 2020-08-27T03:35:50.147Z,
                                                    "priority": 0,
                                                    "processId": "travels",
                                                    "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                                    "repeatInterval": null,
                                                    "repeatLimit": null,
                                                    "retries": 0,
                                                    "rootProcessId": null,
                                                    "scheduledId": "0",
                                                    "status": "EXECUTED",
                                                  }
                                                }
                                              />,
                                            },
                                            "cells": Array [
                                              Object {
                                                "title": <Tooltip
                                                  content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                                >
                                                  <span>
                                                    6e74a57
                                                  </span>
                                                </Tooltip>,
                                              },
                                              Object {
                                                "title": <React.Fragment>
                                                  <CheckCircleIcon
                                                    className="pf-u-mr-sm"
                                                    color="var(--pf-global--success-color--100)"
                                                  />
                                                  Executed
                                                </React.Fragment>,
                                              },
                                              Object {
                                                "title": <React.Fragment>
                                                  <React.Fragment>
                                                     
                                                    expires in
                                                     
                                                    <t
                                                      ago={true}
                                                      calendar={false}
                                                      decimal={false}
                                                      element={null}
                                                      filter={[Function]}
                                                      fromNow={true}
                                                      interval={60000}
                                                      local={false}
                                                      onChange={[Function]}
                                                      titleFormat=""
                                                      toNow={false}
                                                      unit={null}
                                                      unix={false}
                                                      utc={false}
                                                      withTitle={false}
                                                    >
                                                      2020-08-29T03:35:50.147Z
                                                    </t>
                                                  </React.Fragment>
                                                </React.Fragment>,
                                              },
                                              Object {
                                                "title": <MockedJobActionsKebab
                                                  driver={
                                                    Object {
                                                      "abortProcess": [MockFunction],
                                                      "cancelJob": [MockFunction],
                                                      "getProcessDiagram": [MockFunction],
                                                      "jobsQuery": [MockFunction],
                                                      "processDetailsQuery": [MockFunction],
                                                      "rescheduleJob": [MockFunction],
                                                    }
                                                  }
                                                  job={
                                                    Object {
                                                      "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                                      "endpoint": "http://localhost:4000",
                                                      "expirationTime": 2020-08-29T03:35:50.147Z,
                                                      "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                                      "lastUpdate": 2020-08-27T03:35:50.147Z,
                                                      "priority": 0,
                                                      "processId": "travels",
                                                      "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                                      "repeatInterval": null,
                                                      "repeatLimit": null,
                                                      "retries": 0,
                                                      "rootProcessId": null,
                                                      "scheduledId": "0",
                                                      "status": "EXECUTED",
                                                    }
                                                  }
                                                />,
                                              },
                                            ],
                                            "expiration-time": Object {
                                              "formatters": Array [],
                                              "props": Object {
                                                "isVisible": true,
                                              },
                                              "title": <React.Fragment>
                                                <React.Fragment>
                                                   
                                                  expires in
                                                   
                                                  <t
                                                    ago={true}
                                                    calendar={false}
                                                    decimal={false}
                                                    element={null}
                                                    filter={[Function]}
                                                    fromNow={true}
                                                    interval={60000}
                                                    local={false}
                                                    onChange={[Function]}
                                                    titleFormat=""
                                                    toNow={false}
                                                    unit={null}
                                                    unix={false}
                                                    utc={false}
                                                    withTitle={false}
                                                  >
                                                    2020-08-29T03:35:50.147Z
                                                  </t>
                                                </React.Fragment>
                                              </React.Fragment>,
                                            },
                                            "isExpanded": undefined,
                                            "isFirst": true,
                                            "isFirstVisible": true,
                                            "isHeightAuto": false,
                                            "isLast": true,
                                            "isLastVisible": true,
                                            "job-id": Object {
                                              "formatters": Array [],
                                              "props": Object {
                                                "isVisible": true,
                                              },
                                              "title": <Tooltip
                                                content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                              >
                                                <span>
                                                  6e74a57
                                                </span>
                                              </Tooltip>,
                                            },
                                            "secretTableRowKeyId": 0,
                                            "status": Object {
                                              "formatters": Array [],
                                              "props": Object {
                                                "isVisible": true,
                                              },
                                              "title": <React.Fragment>
                                                <CheckCircleIcon
                                                  className="pf-u-mr-sm"
                                                  color="var(--pf-global--success-color--100)"
                                                />
                                                Executed
                                              </React.Fragment>,
                                            },
                                          }
                                        }
                                        rowProps={
                                          Object {
                                            "rowIndex": 0,
                                            "rowKey": "0-row",
                                          }
                                        }
                                      >
                                        <Tr
                                          className=""
                                          onMouseDown={[Function]}
                                        >
                                          <TrBase
                                            className=""
                                            innerRef={null}
                                            onMouseDown={[Function]}
                                          >
                                            <tr
                                              className=""
                                              data-ouia-component-id="OUIA-Generated-TableRow-4"
                                              data-ouia-component-type="PF4/TableRow"
                                              data-ouia-safe={true}
                                              hidden={false}
                                              onMouseDown={[Function]}
                                            >
                                              <BodyCell
                                                data-key={0}
                                                data-label="Job id"
                                                isVisible={true}
                                                key="col-0-row-0"
                                              >
                                                <Td
                                                  className=""
                                                  component="td"
                                                  data-key={0}
                                                  dataLabel="Job id"
                                                  onMouseEnter={[Function]}
                                                  textCenter={false}
                                                >
                                                  <TdBase
                                                    className=""
                                                    component="td"
                                                    data-key={0}
                                                    dataLabel="Job id"
                                                    innerRef={null}
                                                    onMouseEnter={[Function]}
                                                    textCenter={false}
                                                  >
                                                    <td
                                                      className=""
                                                      data-key={0}
                                                      data-label="Job id"
                                                      onMouseEnter={[Function]}
                                                    >
                                                      <Tooltip
                                                        content="6e74a570-31c8-4020-bd70-19be2cb625f3_0"
                                                      >
                                                        <Popper
                                                          appendTo={[Function]}
                                                          distance={15}
                                                          enableFlip={true}
                                                          flipBehavior={
                                                            Array [
                                                              "top",
                                                              "right",
                                                              "bottom",
                                                              "left",
                                                              "top",
                                                              "right",
                                                              "bottom",
                                                            ]
                                                          }
                                                          isVisible={false}
                                                          onBlur={[Function]}
                                                          onDocumentClick={false}
                                                          onDocumentKeyDown={[Function]}
                                                          onFocus={[Function]}
                                                          onMouseEnter={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onTriggerEnter={[Function]}
                                                          placement="top"
                                                          popper={
                                                            <div
                                                              className="pf-c-tooltip"
                                                              id="pf-tooltip-2"
                                                              role="tooltip"
                                                              style={
                                                                Object {
                                                                  "maxWidth": null,
                                                                  "opacity": 0,
                                                                  "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                                                }
                                                              }
                                                            >
                                                              <TooltipArrow />
                                                              <TooltipContent
                                                                isLeftAligned={false}
                                                              >
                                                                6e74a570-31c8-4020-bd70-19be2cb625f3_0
                                                              </TooltipContent>
                                                            </div>
                                                          }
                                                          popperMatchesTriggerWidth={false}
                                                          positionModifiers={
                                                            Object {
                                                              "bottom": "pf-m-bottom",
                                                              "left": "pf-m-left",
                                                              "right": "pf-m-right",
                                                              "top": "pf-m-top",
                                                            }
                                                          }
                                                          trigger={
                                                            <span
                                                              aria-describedby="pf-tooltip-2"
                                                            >
                                                              6e74a57
                                                            </span>
                                                          }
                                                          zIndex={9999}
                                                        >
                                                          <FindRefWrapper
                                                            onFoundRef={[Function]}
                                                          >
                                                            <span
                                                              aria-describedby="pf-tooltip-2"
                                                            >
                                                              6e74a57
                                                            </span>
                                                          </FindRefWrapper>
                                                        </Popper>
                                                      </Tooltip>
                                                    </td>
                                                  </TdBase>
                                                </Td>
                                              </BodyCell>
                                              <BodyCell
                                                data-key={1}
                                                data-label="Status"
                                                isVisible={true}
                                                key="col-1-row-0"
                                              >
                                                <Td
                                                  className=""
                                                  component="td"
                                                  data-key={1}
                                                  dataLabel="Status"
                                                  onMouseEnter={[Function]}
                                                  textCenter={false}
                                                >
                                                  <TdBase
                                                    className=""
                                                    component="td"
                                                    data-key={1}
                                                    dataLabel="Status"
                                                    innerRef={null}
                                                    onMouseEnter={[Function]}
                                                    textCenter={false}
                                                  >
                                                    <td
                                                      className=""
                                                      data-key={1}
                                                      data-label="Status"
                                                      onMouseEnter={[Function]}
                                                    >
                                                      <CheckCircleIcon
                                                        className="pf-u-mr-sm"
                                                        color="var(--pf-global--success-color--100)"
                                                      >
                                                        <MockedComponent />
                                                      </CheckCircleIcon>
                                                      Executed
                                                    </td>
                                                  </TdBase>
                                                </Td>
                                              </BodyCell>
                                              <BodyCell
                                                data-key={2}
                                                data-label="Expiration time"
                                                isVisible={true}
                                                key="col-2-row-0"
                                              >
                                                <Td
                                                  className=""
                                                  component="td"
                                                  data-key={2}
                                                  dataLabel="Expiration time"
                                                  onMouseEnter={[Function]}
                                                  textCenter={false}
                                                >
                                                  <TdBase
                                                    className=""
                                                    component="td"
                                                    data-key={2}
                                                    dataLabel="Expiration time"
                                                    innerRef={null}
                                                    onMouseEnter={[Function]}
                                                    textCenter={false}
                                                  >
                                                    <td
                                                      className=""
                                                      data-key={2}
                                                      data-label="Expiration time"
                                                      onMouseEnter={[Function]}
                                                    >
                                                       
                                                      expires in
                                                       
                                                      <t
                                                        ago={true}
                                                        calendar={false}
                                                        decimal={false}
                                                        element={null}
                                                        filter={[Function]}
                                                        fromNow={true}
                                                        interval={60000}
                                                        local={false}
                                                        onChange={[Function]}
                                                        titleFormat=""
                                                        toNow={false}
                                                        unit={null}
                                                        unix={false}
                                                        utc={false}
                                                        withTitle={false}
                                                      >
                                                        <time
                                                          dateTime={"2020-08-29T03:35:50.147Z"}
                                                        >
                                                          3 months
                                                        </time>
                                                      </t>
                                                    </td>
                                                  </TdBase>
                                                </Td>
                                              </BodyCell>
                                              <BodyCell
                                                data-key={3}
                                                data-label="Actions"
                                                isVisible={true}
                                                key="col-3-row-0"
                                              >
                                                <Td
                                                  className=""
                                                  component="td"
                                                  data-key={3}
                                                  dataLabel="Actions"
                                                  onMouseEnter={[Function]}
                                                  textCenter={false}
                                                >
                                                  <TdBase
                                                    className=""
                                                    component="td"
                                                    data-key={3}
                                                    dataLabel="Actions"
                                                    innerRef={null}
                                                    onMouseEnter={[Function]}
                                                    textCenter={false}
                                                  >
                                                    <td
                                                      className=""
                                                      data-key={3}
                                                      data-label="Actions"
                                                      onMouseEnter={[Function]}
                                                    >
                                                      <MockedJobActionsKebab
                                                        driver={
                                                          Object {
                                                            "abortProcess": [MockFunction],
                                                            "cancelJob": [MockFunction],
                                                            "getProcessDiagram": [MockFunction],
                                                            "jobsQuery": [MockFunction],
                                                            "processDetailsQuery": [MockFunction],
                                                            "rescheduleJob": [MockFunction],
                                                          }
                                                        }
                                                        job={
                                                          Object {
                                                            "callbackEndpoint": "http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                                            "endpoint": "http://localhost:4000",
                                                            "expirationTime": 2020-08-29T03:35:50.147Z,
                                                            "id": "6e74a570-31c8-4020-bd70-19be2cb625f3_0",
                                                            "lastUpdate": 2020-08-27T03:35:50.147Z,
                                                            "priority": 0,
                                                            "processId": "travels",
                                                            "processInstanceId": "5c56eeff-4cbf-3313-a325-4c895e0afced",
                                                            "repeatInterval": null,
                                                            "repeatLimit": null,
                                                            "retries": 0,
                                                            "rootProcessId": null,
                                                            "scheduledId": "0",
                                                            "status": "EXECUTED",
                                                          }
                                                        }
                                                      />
                                                    </td>
                                                  </TdBase>
                                                </Td>
                                              </BodyCell>
                                            </tr>
                                          </TrBase>
                                        </Tr>
                                      </RowWrapper>
                                    </BodyRow>
                                  </tbody>
                                </TbodyBase>
                              </Tbody>
                            </BodyWrapper>
                          </BaseBody>
                        </Component>
                      </ContextBody>
                    </Component>
                  </table>
                </TableComposableBase>
              </TableComposable>
            </Provider>
          </Table>
        </div>
      </CardBody>
    </article>
  </Card>
</JobsPanel>
`;
