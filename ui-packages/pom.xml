<?xml version="1.0"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0">

  <parent>
    <groupId>org.kie.kogito</groupId>
    <artifactId>kogito-apps-build-parent</artifactId>
    <version>2.0.0-SNAPSHOT</version>
    <relativePath>../kogito-apps-build-parent/pom.xml</relativePath>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <packaging>pom</packaging>

  <artifactId>kogito-apps-ui-packages</artifactId>
  <name>Kogito Apps :: UI Packages</name>

  <properties>
    <sonar.sources>${project.basedir}/packages</sonar.sources>
    <sonar.inclusions>packages/*/src/**</sonar.inclusions>
    <sonar.exclusions>**/__mocks__/**,**/mocks/**,**/tests/utils/**,**/*.stories.tsx,**/graphql/types.tsx,**/graphql/graphql.schema.json,**/index.tsx,*.js</sonar.exclusions>
    <sonar.test.inclusions>**/*test.ts,**/*test.tsx</sonar.test.inclusions>
    <sonar.javascript.lcov.reportPaths>packages/*/coverage/lcov.info</sonar.javascript.lcov.reportPaths>
  </properties>

  <profiles>
   <profile>
    <id>complete-build</id>
    <activation>
      <activeByDefault>true</activeByDefault>
    </activation>
    <properties>
     <yarn.build.script>run build:prod</yarn.build.script>
     <yarn.test.script>run test</yarn.test.script>
    </properties>
   </profile>
   <profile>
    <id>productized</id>
    <activation>
     <property>
      <name>productized</name>
     </property>
    </activation>
    <properties>
     <yarn.build.script>run build:prod:swf</yarn.build.script>
     <yarn.test.script>run test:swf</yarn.test.script>
     <skip.ui.it>true</skip.ui.it>
    </properties>
   </profile>
  </profiles>
  
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>node_modules</directory>
            </fileset>
            <fileset>
              <directory>packages/common/node_modules</directory>
            </fileset>
            <fileset>
              <directory>packages/management-console/node_modules</directory>
            </fileset>
            <fileset>
              <directory>packages/trusty/node_modules</directory>
            </fileset>
            <fileset>
              <directory>packages/components-common/node_modules</directory>
            </fileset>
            <fileset>
              <directory>packages/consoles-common/node_modules</directory>
            </fileset>
            <fileset>
              <directory>packages/process-list/node_modules</directory>
            </fileset>
            <fileset>
              <directory>packages/process-details/node_modules</directory>
            </fileset>
            <fileset>
              <directory>packages/runtime-tools-dev-ui-webapp/node_modules</directory>
            </fileset>
            <fileset>
              <directory>packages/management-console-webapp/node_modules</directory>
            </fileset>
            <fileset>
              <directory>packages/task-inbox/node_modules</directory>
            </fileset>
            <fileset>
              <directory>packages/task-form/node_modules</directory>
            </fileset>
            <fileset>
              <directory>packages/task-details/node_modules</directory>
            </fileset>
            <fileset>
              <directory>packages/task-console-webapp/node_modules</directory>
            </fileset>
            <fileset>
              <directory>packages/forms-list/node_modules</directory>
            </fileset>
            <fileset>
              <directory>packages/form-displayer/node_modules</directory>
            </fileset>
            <fileset>
              <directory>packages/form-details/node_modules</directory>
            </fileset>
            <fileset>
              <directory>packages/process-form/node_modules</directory>
            </fileset>
            <fileset>
              <directory>packages/process-definition-list/node_modules</directory>
            </fileset>
            <fileset>
              <directory>packages/monitoring-webapp/node_modules</directory>
            </fileset>
            <fileset>
              <directory>packages/monitoring/node_modules</directory>
            </fileset>
            <fileset>
              <directory>packages/custom-dashboard-list/node_modules</directory>
            </fileset>
            <fileset>
              <directory>packages/custom-dashboard-view/node_modules</directory>
            </fileset>
            <fileset>
              <directory>packages/runtime-gateway-api/node_modules</directory>
            </fileset>
            <fileset>
              <directory>packages/cloud-event-form/node_modules</directory>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <!-- frontend related plugins-->
      <!--
        Installs node and yarn in the webapp's node and node_modules folders.
        Run 'mvn package':
          * the first time you have checked out the source.
          * whenever the dependencies have been changed in package.json (delete the webapp's node_modules folder first!)
        If you want to skip installation of the packages, turn the profile off by setting property `-Dskip.ui.deps`.
      -->
      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <configuration>
          <workingDirectory>${path.to.root}</workingDirectory>
        </configuration>
        <executions>
          <execution>
            <id>install-node-and-npm</id>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
            <configuration>
              <skip>${skip.ui.deps}</skip>
              <nodeVersion>${version.node}</nodeVersion>
              <npmVersion>${version.npm}</npmVersion>
            </configuration>
          </execution>
          <execution>
            <id>install-node-and-yarn</id>
            <goals>
              <goal>install-node-and-yarn</goal>
            </goals>
            <configuration>
              <skip>${skip.ui.deps}</skip>
              <nodeVersion>${version.node}</nodeVersion>
              <yarnVersion>${version.yarn}</yarnVersion>
            </configuration>
          </execution>
          <execution>
            <id>npm install lock-treatment-tool</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <skip>${skip.ui.deps}</skip>
              <npmRegistryURL>${env.NPM_REGISTRY_URL}</npmRegistryURL>
              <arguments>install lock-treatment-tool --global-style --no-package-lock --no-save</arguments>
            </configuration>
          </execution>
          <execution>
            <id>lock-treatment-tool execution</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <skip>${skip.ui.deps}</skip>
              <npmRegistryURL>${env.NPM_REGISTRY_URL}</npmRegistryURL>
              <arguments>run locktt -- --skipIntegrity</arguments>
            </configuration>
          </execution>
          <execution>
            <id>yarn install</id>
            <goals>
              <goal>yarn</goal>
            </goals>
            <configuration>
              <skip>${skip.ui.deps}</skip>
              <npmRegistryURL>${env.NPM_REGISTRY_URL}</npmRegistryURL>
              <arguments>install --fetch-retry-mintimeout=100000 --fetch-retries=10</arguments>
            </configuration>
          </execution>
          <execution>
            <id>yarn build</id>
            <goals>
              <goal>yarn</goal>
            </goals>
            <configuration>
              <skip>${skip.ui.build}</skip>
              <arguments>${yarn.build.script}</arguments>
              <environmentVariables>
                <KOGITO_APP_VERSION>${project.version}</KOGITO_APP_VERSION>
              </environmentVariables>
            </configuration>
          </execution>
          <execution>
            <id>yarn test</id>
            <goals>
              <goal>yarn</goal>
            </goals>
            <phase>test</phase>
            <configuration>
              <skip>${skip.ui.test}</skip>
              <arguments>${yarn.test.script}</arguments>
            </configuration>
          </execution>
          <execution>
            <id>yarn-integration-test</id>
            <goals>
              <goal>yarn</goal>
            </goals>
            <phase>integration-test</phase>
            <configuration>
              <skip>${skip.ui.it}</skip>
              <arguments>run test:it</arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>