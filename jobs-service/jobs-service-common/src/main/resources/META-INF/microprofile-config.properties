# Log Config
quarkus.log.level=INFO
%dev.quarkus.log.category."org.kie.kogito.jobs".level=DEBUG

# Console
quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss,SSS} %h %-5p [%c:%L] (%t) %s%e%n
quarkus.log.console.async=true

# Container image
quarkus.container-image.build=${quarkus.build.image:true}
quarkus.container-image.group=org.kie.kogito

# Web Config
quarkus.ssl.native=true
quarkus.http.cors=true
quarkus.http.cors.origins=/.*/
quarkus.http.limits.max-body-size=10M
quarkus.http.port=8080

# Swagger
quarkus.swagger-ui.always-include=true

# OpenAPI document extensions
mp.openapi.filter=org.kie.kogito.jobs.service.openapi.JobServiceModelFilter

# Job Service
kogito.jobs-service.maxIntervalLimitToRetryMillis=60000
kogito.jobs-service.backoffRetryMillis=1000
kogito.service.url=http://localhost:8080
kogito.jobs-service.schedulerChunkInMinutes=10
kogito.jobs-service.loadJobIntervalInMinutes=10
kogito.jobs-service.loadJobFromCurrentTimeIntervalInMinutes=60
kogito.jobs-service.forceExecuteExpiredJobs=true

quarkus.oidc.enabled=true
quarkus.oidc.tenant-enabled=false

# HTTP Security Configuration
quarkus.http.auth.permission.authenticated.paths=/*
quarkus.http.auth.permission.authenticated.policy=permit

# enabled with the profile: 'keycloak' (-Dquarkus.profile=keycloak)
%keycloak.quarkus.oidc.enabled=true
%keycloak.quarkus.oidc.tenant-enabled=true
%keycloak.quarkus.oidc.auth-server-url=http://localhost:8280/auth/realms/kogito
%keycloak.quarkus.oidc.client-id=kogito-jobs-service
%keycloak.quarkus.oidc.credentials.secret=secret
%keycloak.quarkus.http.auth.policy.role-policy1.roles-allowed=confidential
%keycloak.quarkus.http.auth.permission.roles1.paths=/*
%keycloak.quarkus.http.auth.permission.roles1.policy=role-policy1
