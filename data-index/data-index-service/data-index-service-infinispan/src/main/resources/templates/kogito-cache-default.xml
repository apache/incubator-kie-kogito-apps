<infinispan>
  <cache-container shutdown-hook="DEFAULT">
    {#let template=config:property('kogito.cache.domain.template')}
      {#if template is null}
      <distributed-cache name="{cache_name}" mode="SYNC">
      <encoding media-type="application/x-protostream"/>
      {#else}
    <local-cache name="{cache_name}" configuration="{template}">
      {/if}
    {/let}
      <indexing enabled="true">
        <indexed-entities>
          <indexed-entity>org.kie.kogito.index.model.KogitoMetadata</indexed-entity>
          <indexed-entity>org.kie.kogito.index.model.ProcessInstanceMeta</indexed-entity>
          <indexed-entity>org.kie.kogito.index.model.UserTaskInstanceMeta</indexed-entity>
          {#for index in indexed}
          <indexed-entity>{index}</indexed-entity>
          {/for}
        </indexed-entities>
      </indexing>    
      <persistence passivation="false" availability-interval="2000" connection-attempts="5" connection-interval="100">
        <file-store fetch-state="true" preload="true" purge="false">
        </file-store>
      </persistence>
    {#let template=config:property('kogito.cache.domain.template')}
      {#if template is null}
      </distributed-cache>
      {#else}
      </local-cache>
      {/if}
    {/let}
  </cache-container>
</infinispan>