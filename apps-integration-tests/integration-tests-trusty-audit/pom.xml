<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.kie.kogito</groupId>
        <artifactId>apps-integration-tests</artifactId>
        <version>2.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>integration-tests-trusty-audit</artifactId>
    <name>Kogito Apps :: Integration Tests :: Trusty Audit UI</name>
    <packaging>pom</packaging>

    <properties>
        <container.image.kogito-service>to-be-changed-in-submodules</container.image.kogito-service>
    </properties>

    <dependencies>
        <!-- ensure dependent modules were built, but not added in the classpath -->
        <dependency>
            <groupId>org.kie.kogito</groupId>
            <artifactId>explainability-service-messaging</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.kie.kogito</groupId>
            <artifactId>integration-tests-trusty-service-quarkus</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.kie.kogito</groupId>
            <artifactId>trusty-service-infinispan</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.kie.kogito</groupId>
            <artifactId>trusty-ui</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <plugins>
          <!-- frontend related plugins-->
          <!--
            Installs node and yarn in the webapp's node and node_modules folders.
            Run 'mvn package':
              * the first time you have checked out the source.
              * whenever the dependencies have been changed in package.json (delete the webapp's node_modules folder first!)
            If you want to skip installation of the packages, turn the profile off by setting property `-Dskip.ui.deps`.
          -->
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <configuration>
              <workingDirectory>../../ui-packages</workingDirectory>
            </configuration>
            <executions>
              <!--
                It works only if docker contains images from previous build.
                This was just verification that this way is imposible.
                In case that docker images are empty than the build fails. 
                For example: org.kie.kogito/integration-tests-trusty-service-quarkus:2.0.0-SNAPSHOT is missing

                TODO: parametrize base url to localhost:1337
                -->
              <execution>
                <id>yarn e2e test</id>
                <goals>
                  <goal>yarn</goal>
                </goals>
                <phase>integration-test</phase>
                <configuration>
                  <skip>${skip.ui.build}</skip>
                  <arguments>run test:e2e</arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
                    <images>
                        <image>
                            <alias>zookeeper</alias>
                            <name>wurstmeister/zookeeper:3.4.6</name>
                            
                            <run>
                              <ports>
                                <port>2181:2181</port>
                              </ports>
                              <env>
                                <LOG_DIR>/tmp/logs</LOG_DIR>
                              </env>
                              <network>
                                <mode>custom</mode>
                                <name>trusty-nw</name>
                                <alias>zookeper</alias>
                              </network>
                              <!--<wait>
                                <http>
                                  <url>http://localhost:2181/</url>
                                </http>
                                <time>60000</time>
                              </wait>-->
                            </run>
                        </image>
                        <image>
                            <alias>kafka</alias>
                            <name>wurstmeister/kafka:2.12-2.2.1</name>

                            <run>
                              <dependsOn>
                                <container>zookeeper</container>
                              </dependsOn>
                              <ports>
                                <port>9092:9092</port>
                                <!-- expose: - "9093" !-->
                                <port>9093:9093</port>
                              </ports>
                              <env>
                                <LOG_DIR>/tmp/logs</LOG_DIR>
                                <KAFKA_ADVERTISED_LISTENERS>INSIDE://kafka:9093,OUTSIDE://localhost:9092</KAFKA_ADVERTISED_LISTENERS> 
                                <KAFKA_LISTENER_SECURITY_PROTOCOL_MAP>INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT</KAFKA_LISTENER_SECURITY_PROTOCOL_MAP> 
                                <KAFKA_LISTENERS>INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092</KAFKA_LISTENERS>
                                <KAFKA_ZOOKEEPER_CONNECT>zookeeper:2181</KAFKA_ZOOKEEPER_CONNECT>
                                <KAFKA_INTER_BROKER_LISTENER_NAME>INSIDE</KAFKA_INTER_BROKER_LISTENER_NAME>
                              </env>
                              <network>
                                <mode>custom</mode>
                                <name>trusty-nw</name>
                                <alias>kafka</alias>
                              </network>
                              <!--<wait>
                                <http>
                                  <url>http://localhost:9092/</url>
                                </http>
                                <time>3000</time>
                              </wait>-->
                            </run>
                        </image>
                        <image>
                            <alias>kafkadrop</alias>
                            <name>obsidiandynamics/kafdrop</name>

                            <run>
                              <dependsOn>
                                <container>kafka</container>
                              </dependsOn>
                              <ports>
                                <port>9000:9000</port>
                              </ports>
                              <env>
                                <KAFKA_BROKERCONNECT>kafka:9093</KAFKA_BROKERCONNECT>
                                <JVM_OPTS>-Xms32M -Xmx64M</JVM_OPTS> 
                                <SERVER_SERVLET_CONTEXTPATH>/</SERVER_SERVLET_CONTEXTPATH> 
                              </env>
                              <network>
                                <mode>custom</mode>
                                <name>trusty-nw</name>
                                <alias>kafkadrop</alias>
                              </network>
                            </run>
                        </image>
                        <image>
                            <alias>infinispan</alias>
                            <name>infinispan/server:13.0.2.Final</name>

                            <run>
                              <!--container_name: infinispan-->
                              <ports>
                                <port>11222:11222</port>
                              </ports>
                              <cmd>-c infinispan-demo.xml</cmd>
                              <network>
                                <mode>custom</mode>
                                <name>trusty-nw</name>
                                <alias>infinispan</alias>
                              </network>
                              <volumes>
                                <bind>
                                  <volume>./infinispan/infinispan.xml:/opt/infinispan/server/conf/infinispan-demo.xml:z</volume>
                                </bind>
                              </volumes>
                            </run>
                        </image>
                        <image>
                            <alias>kogito-app</alias>
                            <name>org.kie.kogito/integration-tests-trusty-service-quarkus:${project.version}</name>

                            <run>
                              <dependsOn>
                                <container>kafka</container>
                              </dependsOn>
                              <ports>
                                <port>8080:8080</port>
                              </ports>
                              <env>
                                <KAFKA_BOOTSTRAP_SERVERS>kafka:9093</KAFKA_BOOTSTRAP_SERVERS>
                                <KOGITO_SERVICE_URL>http://kogito-app:8080</KOGITO_SERVICE_URL> 
                              </env>
                              <network>
                                <mode>custom</mode>
                                <name>trusty-nw</name>
                                <alias>kogito-app</alias>
                              </network>
                              <!--<wait>
                                <http>
                                  <url>http://localhost:8080/</url>
                                </http>
                                <time>180000</time>
                              </wait>-->
                            </run>
                        </image>
                        <image>
                            <alias>explainability</alias>
                            <name>org.kie.kogito/explainability-service-messaging:${project.version}</name>

                            <run>
                              <dependsOn>
                                <container>kafka</container>
                                <container>kogito-app</container>
                              </dependsOn>
                              <ports>
                                <port>1336:8080</port>
                              </ports>
                              <env>
                                <KAFKA_BOOTSTRAP_SERVERS>kafka:9093</KAFKA_BOOTSTRAP_SERVERS>
                              </env>
                              <network>
                                <mode>custom</mode>
                                <name>trusty-nw</name>
                                <alias>explainability</alias>
                              </network>
                            </run>
                        </image>
                        <image>
                            <alias>trusty</alias>
                            <name>org.kie.kogito/trusty-service-infinispan:${project.version}</name>

                            <run>
                              <dependsOn>
                                <container>kafka</container>
                                <container>infinispan</container>
                              </dependsOn>
                              <ports>
                                <port>1337:8080</port>
                              </ports>
                              <env>
                                <KAFKA_BOOTSTRAP_SERVERS>kafka:9093</KAFKA_BOOTSTRAP_SERVERS>
                                <QUARKUS_INFINISPAN_CLIENT_SERVER_LIST>infinispan:11222</QUARKUS_INFINISPAN_CLIENT_SERVER_LIST> 
                                <QUARKUS_INFINISPAN_CLIENT_USE_AUTH>"false"</QUARKUS_INFINISPAN_CLIENT_USE_AUTH>
                                <TRUSTY_EXPLAINABILITY_ENABLED>"true"</TRUSTY_EXPLAINABILITY_ENABLED>
                              </env>
                              <network>
                                <mode>custom</mode>
                                <name>trusty-nw</name>
                                <alias>trusty</alias>
                              </network>
                            </run>
                        </image>
                        <image>
                            <alias>trusty-ui</alias>
                            <name>org.kie.kogito/trusty-ui:${project.version}</name>

                            <run>
                              <dependsOn>
                                <container>kafka</container>
                              </dependsOn>
                              <ports>
                                <port>1338:8080</port>
                              </ports>
                              <env>
                                <KOGITO_TRUSTY_HTTP_URL>http://localhost:1337</KOGITO_TRUSTY_HTTP_URL>
                              </env>
                              <network>
                                <mode>custom</mode>
                                <name>trusty-nw</name>
                                <alias>trusty-ui</alias>
                              </network>
                            </run>
                        </image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                       <id>start</id>
                       <phase>pre-integration-test</phase>
                       <goals>
                         <goal>start</goal>
                       </goals>
                    </execution>
                    <execution>
                       <id>stop</id>
                       <phase>post-integration-test</phase>
                       <goals>
                         <goal>stop</goal>
                      </goals>
                    </execution>
                  </executions>
            </plugin>
        </plugins>
    </build>
</project>