// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DataToolbar component tests Snapshot tests 1`] = `
<DataToolbar
  className="pf-m-toggle-group-container"
  clearAllFilters={[Function]}
  clearFiltersButtonText="Reset to default"
  collapseListedFiltersBreakpoint="xl"
  id="data-toolbar-with-filter"
>
  <DataToolbarContent
    breakpointMods={Array []}
    isExpanded={false}
    showClearFiltersButton={false}
  >
    <DataToolbarToggleGroup
      breakpoint="xl"
      breakpointMods={Array []}
      toggleIcon={
        <FilterIcon
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
          title={null}
        />
      }
    >
      <ForwardRef
        variant="filter-group"
      >
        <DataToolbarFilter
          categoryName="Status"
          chips={
            Array [
              "ACTIVE,COMPLETED",
            ]
          }
          deleteChip={[Function]}
          showToolbarItem={true}
        >
          <Component
            aria-label="Status"
            isExpanded={false}
            onSelect={[Function]}
            onToggle={[Function]}
            placeholderText="Status"
            selections={
              Array [
                "ACTIVE",
                "COMPLETED",
                "ERROR",
                "ABORTED",
                "SUSPENDED",
              ]
            }
            variant="checkbox"
          >
            <SelectOption
              className=""
              component="button"
              index={0}
              isChecked={false}
              isDisabled={false}
              isFocused={false}
              isPlaceholder={false}
              isSelected={false}
              key="ACTIVE"
              keyHandler={[Function]}
              onClick={[Function]}
              sendRef={[Function]}
              value="ACTIVE"
            />
            <SelectOption
              className=""
              component="button"
              index={0}
              isChecked={false}
              isDisabled={false}
              isFocused={false}
              isPlaceholder={false}
              isSelected={false}
              key="COMPLETED"
              keyHandler={[Function]}
              onClick={[Function]}
              sendRef={[Function]}
              value="COMPLETED"
            />
            <SelectOption
              className=""
              component="button"
              index={0}
              isChecked={false}
              isDisabled={false}
              isFocused={false}
              isPlaceholder={false}
              isSelected={false}
              key="ERROR"
              keyHandler={[Function]}
              onClick={[Function]}
              sendRef={[Function]}
              value="ERROR"
            />
            <SelectOption
              className=""
              component="button"
              index={0}
              isChecked={false}
              isDisabled={false}
              isFocused={false}
              isPlaceholder={false}
              isSelected={false}
              key="ABORTED"
              keyHandler={[Function]}
              onClick={[Function]}
              sendRef={[Function]}
              value="ABORTED"
            />
            <SelectOption
              className=""
              component="button"
              index={0}
              isChecked={false}
              isDisabled={false}
              isFocused={false}
              isPlaceholder={false}
              isSelected={false}
              key="SUSPENDED"
              keyHandler={[Function]}
              onClick={[Function]}
              sendRef={[Function]}
              value="SUSPENDED"
            />
          </Component>
        </DataToolbarFilter>
        <Component>
          <Component
            onClick={[Function]}
            variant="primary"
          >
            Apply Filter
          </Component>
        </Component>
      </ForwardRef>
    </DataToolbarToggleGroup>
    <ForwardRef
      variant="icon-button-group"
    >
      <Component>
        <Component
          onClick={[Function]}
          variant="plain"
        >
          <SyncIcon
            color="currentColor"
            noVerticalAlign={false}
            size="sm"
            title={null}
          />
        </Component>
      </Component>
    </ForwardRef>
  </DataToolbarContent>
</DataToolbar>
`;
