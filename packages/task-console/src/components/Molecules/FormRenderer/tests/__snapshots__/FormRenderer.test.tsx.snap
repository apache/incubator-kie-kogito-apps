// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FormRenderer test Form Render and successfully submit default endpoint no payload 1`] = `
<AutoValidatedQuickPatternflyForm
  autosave={false}
  autosaveDelay={0}
  disabled={false}
  error={null}
  label={true}
  model={Object {}}
  noValidate={true}
  onSubmit={[Function]}
  onValidate={[Function]}
  placeholder={true}
  schema={
    JSONSchemaBridge {
      "_compiledSchema": Object {},
      "getField": [Function],
      "getSubfields": [Function],
      "getType": [Function],
      "schema": Object {
        "properties": Object {
          "traveller": Object {
            "properties": Object {
              "address": Object {
                "properties": Object {
                  "city": Object {
                    "type": "string",
                  },
                  "country": Object {
                    "type": "string",
                  },
                  "street": Object {
                    "type": "string",
                  },
                  "zipCode": Object {
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "email": Object {
                "format": "email",
                "type": "string",
              },
              "firstName": Object {
                "type": "string",
              },
              "lastName": Object {
                "type": "string",
              },
              "nationality": Object {
                "type": "string",
              },
            },
            "required": Array [
              "firstName",
              "lastName",
            ],
            "type": "object",
          },
          "trip": Object {
            "properties": Object {
              "begin": Object {
                "format": "date-time",
                "type": "string",
              },
              "city": Object {
                "type": "string",
              },
              "country": Object {
                "type": "string",
              },
              "end": Object {
                "format": "date-time",
                "type": "string",
              },
              "visaRequired": Object {
                "type": "boolean",
              },
            },
            "type": "object",
          },
          "visaApplication": Object {
            "properties": Object {
              "city": Object {
                "type": "string",
              },
              "country": Object {
                "type": "string",
              },
              "duration": Object {
                "type": "integer",
              },
              "firstName": Object {
                "type": "string",
              },
              "lastName": Object {
                "type": "string",
              },
              "nationality": Object {
                "type": "string",
              },
              "passportNumber": Object {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "type": "object",
      },
      "validator": [Function],
    }
  }
  validate="onChangeAfterSubmit"
>
  <ErrorsField
    style={
      Object {
        "backgroundColor": "rgba(255, 85, 0, 0.2)",
        "border": "1px solid rgb(255, 85, 0)",
        "borderRadius": "7px",
        "margin": "20px 0px",
        "padding": "10px",
      }
    }
  />
  <AutoFields
    autoField={[Function]}
    element="div"
    omitFields={Array []}
  />
  <FormFooter
    actions={
      Array [
        Object {
          "name": "Complete",
          "outputs": Array [],
          "primary": true,
        },
        Object {
          "name": "Release",
          "outputs": Array [
            "traveller",
          ],
          "phase": "release",
        },
      ]
    }
    onActionClick={[Function]}
  />
</AutoValidatedQuickPatternflyForm>
`;

exports[`FormRenderer test Form Render and successfully submit with phase and payload 1`] = `
<AutoValidatedQuickPatternflyForm
  autosave={false}
  autosaveDelay={0}
  disabled={false}
  error={null}
  label={true}
  model={Object {}}
  noValidate={true}
  onSubmit={[Function]}
  onValidate={[Function]}
  placeholder={true}
  schema={
    JSONSchemaBridge {
      "_compiledSchema": Object {},
      "getField": [Function],
      "getSubfields": [Function],
      "getType": [Function],
      "schema": Object {
        "properties": Object {
          "traveller": Object {
            "properties": Object {
              "address": Object {
                "properties": Object {
                  "city": Object {
                    "type": "string",
                  },
                  "country": Object {
                    "type": "string",
                  },
                  "street": Object {
                    "type": "string",
                  },
                  "zipCode": Object {
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "email": Object {
                "format": "email",
                "type": "string",
              },
              "firstName": Object {
                "type": "string",
              },
              "lastName": Object {
                "type": "string",
              },
              "nationality": Object {
                "type": "string",
              },
            },
            "required": Array [
              "firstName",
              "lastName",
            ],
            "type": "object",
          },
          "trip": Object {
            "properties": Object {
              "begin": Object {
                "format": "date-time",
                "type": "string",
              },
              "city": Object {
                "type": "string",
              },
              "country": Object {
                "type": "string",
              },
              "end": Object {
                "format": "date-time",
                "type": "string",
              },
              "visaRequired": Object {
                "type": "boolean",
              },
            },
            "type": "object",
          },
          "visaApplication": Object {
            "properties": Object {
              "city": Object {
                "type": "string",
              },
              "country": Object {
                "type": "string",
              },
              "duration": Object {
                "type": "integer",
              },
              "firstName": Object {
                "type": "string",
              },
              "lastName": Object {
                "type": "string",
              },
              "nationality": Object {
                "type": "string",
              },
              "passportNumber": Object {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "type": "object",
      },
      "validator": [Function],
    }
  }
  validate="onChangeAfterSubmit"
>
  <ErrorsField
    style={
      Object {
        "backgroundColor": "rgba(255, 85, 0, 0.2)",
        "border": "1px solid rgb(255, 85, 0)",
        "borderRadius": "7px",
        "margin": "20px 0px",
        "padding": "10px",
      }
    }
  />
  <AutoFields
    autoField={[Function]}
    element="div"
    omitFields={Array []}
  />
  <FormFooter
    actions={
      Array [
        Object {
          "name": "Complete",
          "outputs": Array [],
          "primary": true,
        },
        Object {
          "name": "Release",
          "outputs": Array [
            "traveller",
          ],
          "phase": "release",
        },
      ]
    }
    onActionClick={[Function]}
  />
</AutoValidatedQuickPatternflyForm>
`;

exports[`FormRenderer test Form Render and unsuccessfully submit 1`] = `
<AutoValidatedQuickPatternflyForm
  autosave={false}
  autosaveDelay={0}
  disabled={false}
  error={null}
  label={true}
  model={Object {}}
  noValidate={true}
  onSubmit={[Function]}
  onValidate={[Function]}
  placeholder={true}
  schema={
    JSONSchemaBridge {
      "_compiledSchema": Object {},
      "getField": [Function],
      "getSubfields": [Function],
      "getType": [Function],
      "schema": Object {
        "properties": Object {
          "traveller": Object {
            "properties": Object {
              "address": Object {
                "properties": Object {
                  "city": Object {
                    "type": "string",
                  },
                  "country": Object {
                    "type": "string",
                  },
                  "street": Object {
                    "type": "string",
                  },
                  "zipCode": Object {
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "email": Object {
                "format": "email",
                "type": "string",
              },
              "firstName": Object {
                "type": "string",
              },
              "lastName": Object {
                "type": "string",
              },
              "nationality": Object {
                "type": "string",
              },
            },
            "required": Array [
              "firstName",
              "lastName",
            ],
            "type": "object",
          },
          "trip": Object {
            "properties": Object {
              "begin": Object {
                "format": "date-time",
                "type": "string",
              },
              "city": Object {
                "type": "string",
              },
              "country": Object {
                "type": "string",
              },
              "end": Object {
                "format": "date-time",
                "type": "string",
              },
              "visaRequired": Object {
                "type": "boolean",
              },
            },
            "type": "object",
          },
          "visaApplication": Object {
            "properties": Object {
              "city": Object {
                "type": "string",
              },
              "country": Object {
                "type": "string",
              },
              "duration": Object {
                "type": "integer",
              },
              "firstName": Object {
                "type": "string",
              },
              "lastName": Object {
                "type": "string",
              },
              "nationality": Object {
                "type": "string",
              },
              "passportNumber": Object {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "type": "object",
      },
      "validator": [Function],
    }
  }
  validate="onChangeAfterSubmit"
>
  <ErrorsField
    style={
      Object {
        "backgroundColor": "rgba(255, 85, 0, 0.2)",
        "border": "1px solid rgb(255, 85, 0)",
        "borderRadius": "7px",
        "margin": "20px 0px",
        "padding": "10px",
      }
    }
  />
  <AutoFields
    autoField={[Function]}
    element="div"
    omitFields={Array []}
  />
  <FormFooter
    actions={
      Array [
        Object {
          "name": "Complete",
          "outputs": Array [],
          "primary": true,
        },
        Object {
          "name": "Release",
          "outputs": Array [
            "traveller",
          ],
          "phase": "release",
        },
      ]
    }
    onActionClick={[Function]}
  />
</AutoValidatedQuickPatternflyForm>
`;

exports[`FormRenderer test Render form with actions 1`] = `
<AutoValidatedQuickPatternflyForm
  autosave={false}
  autosaveDelay={0}
  disabled={false}
  error={null}
  label={true}
  model={Object {}}
  noValidate={true}
  onSubmit={[Function]}
  onValidate={[Function]}
  placeholder={true}
  schema={
    JSONSchemaBridge {
      "_compiledSchema": Object {},
      "getField": [Function],
      "getSubfields": [Function],
      "getType": [Function],
      "schema": Object {
        "properties": Object {
          "traveller": Object {
            "properties": Object {
              "address": Object {
                "properties": Object {
                  "city": Object {
                    "type": "string",
                  },
                  "country": Object {
                    "type": "string",
                  },
                  "street": Object {
                    "type": "string",
                  },
                  "zipCode": Object {
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "email": Object {
                "format": "email",
                "type": "string",
              },
              "firstName": Object {
                "type": "string",
              },
              "lastName": Object {
                "type": "string",
              },
              "nationality": Object {
                "type": "string",
              },
            },
            "required": Array [
              "firstName",
              "lastName",
            ],
            "type": "object",
          },
          "trip": Object {
            "properties": Object {
              "begin": Object {
                "format": "date-time",
                "type": "string",
              },
              "city": Object {
                "type": "string",
              },
              "country": Object {
                "type": "string",
              },
              "end": Object {
                "format": "date-time",
                "type": "string",
              },
              "visaRequired": Object {
                "type": "boolean",
              },
            },
            "type": "object",
          },
          "visaApplication": Object {
            "properties": Object {
              "city": Object {
                "type": "string",
              },
              "country": Object {
                "type": "string",
              },
              "duration": Object {
                "type": "integer",
              },
              "firstName": Object {
                "type": "string",
              },
              "lastName": Object {
                "type": "string",
              },
              "nationality": Object {
                "type": "string",
              },
              "passportNumber": Object {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "type": "object",
      },
      "validator": [Function],
    }
  }
  validate="onChangeAfterSubmit"
>
  <ErrorsField
    style={
      Object {
        "backgroundColor": "rgba(255, 85, 0, 0.2)",
        "border": "1px solid rgb(255, 85, 0)",
        "borderRadius": "7px",
        "margin": "20px 0px",
        "padding": "10px",
      }
    }
  />
  <AutoFields
    autoField={[Function]}
    element="div"
    omitFields={Array []}
  />
  <FormFooter
    actions={
      Array [
        Object {
          "name": "Complete",
          "outputs": Array [],
          "primary": true,
        },
        Object {
          "name": "Release",
          "outputs": Array [
            "traveller",
          ],
          "phase": "release",
        },
      ]
    }
    onActionClick={[Function]}
  />
</AutoValidatedQuickPatternflyForm>
`;

exports[`FormRenderer test Render form without actions 1`] = `
<AutoValidatedQuickPatternflyForm
  autosave={false}
  autosaveDelay={0}
  disabled={true}
  error={null}
  label={true}
  model={Object {}}
  noValidate={true}
  onSubmit={[Function]}
  onValidate={[Function]}
  placeholder={true}
  schema={
    JSONSchemaBridge {
      "_compiledSchema": Object {},
      "getField": [Function],
      "getSubfields": [Function],
      "getType": [Function],
      "schema": Object {
        "properties": Object {
          "traveller": Object {
            "properties": Object {
              "address": Object {
                "properties": Object {
                  "city": Object {
                    "type": "string",
                  },
                  "country": Object {
                    "type": "string",
                  },
                  "street": Object {
                    "type": "string",
                  },
                  "zipCode": Object {
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "email": Object {
                "format": "email",
                "type": "string",
              },
              "firstName": Object {
                "type": "string",
              },
              "lastName": Object {
                "type": "string",
              },
              "nationality": Object {
                "type": "string",
              },
            },
            "required": Array [
              "firstName",
              "lastName",
            ],
            "type": "object",
          },
          "trip": Object {
            "properties": Object {
              "begin": Object {
                "format": "date-time",
                "type": "string",
              },
              "city": Object {
                "type": "string",
              },
              "country": Object {
                "type": "string",
              },
              "end": Object {
                "format": "date-time",
                "type": "string",
              },
              "visaRequired": Object {
                "type": "boolean",
              },
            },
            "type": "object",
          },
          "visaApplication": Object {
            "properties": Object {
              "city": Object {
                "type": "string",
              },
              "country": Object {
                "type": "string",
              },
              "duration": Object {
                "type": "integer",
              },
              "firstName": Object {
                "type": "string",
              },
              "lastName": Object {
                "type": "string",
              },
              "nationality": Object {
                "type": "string",
              },
              "passportNumber": Object {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "type": "object",
      },
      "validator": [Function],
    }
  }
  validate="onChangeAfterSubmit"
>
  <ErrorsField
    style={
      Object {
        "backgroundColor": "rgba(255, 85, 0, 0.2)",
        "border": "1px solid rgb(255, 85, 0)",
        "borderRadius": "7px",
        "margin": "20px 0px",
        "padding": "10px",
      }
    }
  />
  <AutoFields
    autoField={[Function]}
    element="div"
    omitFields={Array []}
  />
  <FormFooter
    actions={Array []}
    onActionClick={[Function]}
  />
</AutoValidatedQuickPatternflyForm>
`;
